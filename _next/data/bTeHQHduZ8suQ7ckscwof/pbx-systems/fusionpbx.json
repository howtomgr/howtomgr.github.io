{"pageProps":{"guide":{"name":"fusionpbx","displayName":"FusionPBX Installation Guide","slug":"fusionpbx","description":"FusionPBX is a free and open-source PBX. Multi-tenant PBX and voice switch","category":"pbx-systems","subcategory":"pbx-systems","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,2048],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["pbx-systems","containerization","orchestration","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/pbx-systems/fusionpbx","documentationUrl":"https://howtomgr.github.io/pbx-systems/fusionpbx","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/fusionpbx","updatedAt":"2025-09-16T17:14:29Z","createdAt":"2025-09-16T02:39:34Z","readmeRaw":"# FusionPBX Installation Guide\n\nFusionPBX is a free and open-source PBX. Multi-tenant PBX and voice switch\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2 cores minimum (4+ cores recommended)\n  - RAM: 2GB minimum (4GB+ recommended)\n  - Storage: 1GB for installation\n  - Network: 443 ports\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 443 (default fusionpbx port)\n- **Dependencies**:\n  - freeswitch, postgresql, nginx\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install fusionpbx\nsudo dnf install -y fusionpbx freeswitch, postgresql, nginx\n\n# Enable and start service\nsudo systemctl enable --now fusionpbx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=fusionpbx\nsudo firewall-cmd --reload\n\n# Verify installation\nfusionpbx --version || systemctl status fusionpbx\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install fusionpbx\nsudo apt install -y fusionpbx freeswitch, postgresql, nginx\n\n# Enable and start service\nsudo systemctl enable --now fusionpbx\n\n# Configure firewall\nsudo ufw allow 443\n\n# Verify installation\nfusionpbx --version || systemctl status fusionpbx\n```\n\n### Arch Linux\n\n```bash\n# Install fusionpbx\nsudo pacman -S fusionpbx\n\n# Enable and start service\nsudo systemctl enable --now fusionpbx\n\n# Verify installation\nfusionpbx --version || systemctl status fusionpbx\n```\n\n### Alpine Linux\n\n```bash\n# Install fusionpbx\napk add --no-cache fusionpbx\n\n# Enable and start service\nrc-update add fusionpbx default\nrc-service fusionpbx start\n\n# Verify installation\nfusionpbx --version || rc-service fusionpbx status\n```\n\n### openSUSE/SLES\n\n```bash\n# Install fusionpbx\nsudo zypper install -y fusionpbx freeswitch, postgresql, nginx\n\n# Enable and start service\nsudo systemctl enable --now fusionpbx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=fusionpbx\nsudo firewall-cmd --reload\n\n# Verify installation\nfusionpbx --version || systemctl status fusionpbx\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install fusionpbx\n\n# Start service\nbrew services start fusionpbx\n\n# Verify installation\nfusionpbx --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install fusionpbx\n\n# Enable in rc.conf\necho 'fusionpbx_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice fusionpbx start\n\n# Verify installation\nfusionpbx --version || service fusionpbx status\n```\n\n### Windows\n\n```powershell\n# Using Chocolatey\nchoco install fusionpbx\n\n# Or using Scoop\nscoop install fusionpbx\n\n# Verify installation\nfusionpbx --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory if needed\nsudo mkdir -p /etc/fusionpbx\n\n# Set up basic configuration\nsudo tee /etc/fusionpbx/fusionpbx.conf << 'EOF'\n# FusionPBX Configuration\nmax_calls=5000\nEOF\n\n# Test configuration\nsudo fusionpbx -t || sudo fusionpbx configtest\n\n# Reload service\nsudo systemctl reload fusionpbx\n```\n\n### Security Hardening\n\n```bash\n# Set appropriate permissions\nsudo chown -R fusionpbx:fusionpbx /etc/fusionpbx\nsudo chmod 750 /etc/fusionpbx\n\n# Enable security features\n# See security section for detailed hardening steps\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable fusionpbx\n\n# Start service\nsudo systemctl start fusionpbx\n\n# Stop service\nsudo systemctl stop fusionpbx\n\n# Restart service\nsudo systemctl restart fusionpbx\n\n# Reload configuration\nsudo systemctl reload fusionpbx\n\n# Check status\nsudo systemctl status fusionpbx\n\n# View logs\nsudo journalctl -u fusionpbx -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add fusionpbx default\n\n# Start service\nrc-service fusionpbx start\n\n# Stop service\nrc-service fusionpbx stop\n\n# Restart service\nrc-service fusionpbx restart\n\n# Check status\nrc-service fusionpbx status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'fusionpbx_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice fusionpbx start\n\n# Stop service\nservice fusionpbx stop\n\n# Restart service\nservice fusionpbx restart\n\n# Check status\nservice fusionpbx status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start fusionpbx\nbrew services stop fusionpbx\nbrew services restart fusionpbx\n\n# Check status\nbrew services list | grep fusionpbx\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start fusionpbx\n\n# Stop service\nnet stop fusionpbx\n\n# Using PowerShell\nStart-Service fusionpbx\nStop-Service fusionpbx\nRestart-Service fusionpbx\n\n# Check status\nGet-Service fusionpbx\n```\n\n## Advanced Configuration\n\n### Performance Optimization\n\n```bash\n# Configure performance settings\ncat >> /etc/fusionpbx/fusionpbx.conf << 'EOF'\nmax_calls=5000\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart fusionpbx\n```\n\n### Clustering and High Availability\n\n```bash\n# Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports\n```\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream fusionpbx_backend {\n    server 127.0.0.1:443;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name fusionpbx.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name fusionpbx.example.com;\n\n    ssl_certificate /etc/ssl/certs/fusionpbx.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/fusionpbx.example.com.key;\n\n    location / {\n        proxy_pass http://fusionpbx_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName fusionpbx.example.com\n    Redirect permanent / https://fusionpbx.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName fusionpbx.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/fusionpbx.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/fusionpbx.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:443/\n    ProxyPassReverse / http://127.0.0.1:443/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) \"ws://127.0.0.1:443/$1\" [P,L]\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend fusionpbx_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/fusionpbx.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend fusionpbx_backend\n\nbackend fusionpbx_backend\n    balance roundrobin\n    option httpchk GET /health\n    server fusionpbx1 127.0.0.1:443 check\n    server fusionpbx2 127.0.0.1:{default_port}1 check backup\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R fusionpbx:fusionpbx /etc/fusionpbx\nsudo chmod 750 /etc/fusionpbx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=fusionpbx\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/fusionpbx.conf << 'EOF'\n[fusionpbx]\nenabled = true\nport = 443\nfilter = fusionpbx\nlogpath = /var/log/fusionpbx/*.log\nmaxretry = 5\nbantime = 3600\nEOF\n```\n\n### SSL/TLS Configuration\n\n```bash\n# Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/fusionpbx.key \\\n    -out /etc/ssl/certs/fusionpbx.crt\n\n# Configure SSL in fusionpbx\n# See official documentation for SSL configuration\n```\n\n## Database Setup\n\n### PostgreSQL Backend (if applicable)\n\n```bash\n# Create database and user\nsudo -u postgres psql << EOF\nCREATE DATABASE fusionpbx_db;\nCREATE USER fusionpbx_user WITH ENCRYPTED PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE fusionpbx_db TO fusionpbx_user;\nEOF\n\n# Configure fusionpbx to use PostgreSQL\n# See official documentation for database configuration\n```\n\n### MySQL/MariaDB Backend (if applicable)\n\n```bash\n# Create database and user\nsudo mysql << EOF\nCREATE DATABASE fusionpbx_db;\nCREATE USER 'fusionpbx_user'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON fusionpbx_db.* TO 'fusionpbx_user'@'localhost';\nFLUSH PRIVILEGES;\nEOF\n```\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Kernel parameters\nsudo tee -a /etc/sysctl.conf << EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# FusionPBX specific tuning\nmax_calls=5000\n```\n\n### Resource Limits\n\n```bash\n# Configure system limits\nsudo tee -a /etc/security/limits.conf << EOF\nfusionpbx soft nofile 65535\nfusionpbx hard nofile 65535\nfusionpbx soft nproc 32768\nfusionpbx hard nproc 32768\nEOF\n```\n\n## Monitoring\n\n### Prometheus Integration\n\n```yaml\n# prometheus.yml configuration\nscrape_configs:\n  - job_name: 'fusionpbx'\n    static_configs:\n      - targets: ['localhost:443']\n    metrics_path: '/metrics'\n```\n\n### Health Checks\n\n```bash\n# Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet fusionpbx; then\n    echo \"FusionPBX is running\"\n    exit 0\nelse\n    echo \"FusionPBX is not running\"\n    exit 1\nfi\n```\n\n### Log Monitoring\n\n```bash\n# Configure log rotation\nsudo tee /etc/logrotate.d/fusionpbx << 'EOF'\n/var/log/fusionpbx/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 fusionpbx fusionpbx\n    postrotate\n        systemctl reload fusionpbx > /dev/null 2>&1 || true\n    endscript\n}\nEOF\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# FusionPBX backup script\nBACKUP_DIR=\"/backup/fusionpbx\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\n\n# Stop service (if required)\nsystemctl stop fusionpbx\n\n# Backup configuration\ntar -czf \"$BACKUP_DIR/fusionpbx-config-$DATE.tar.gz\" /etc/fusionpbx\n\n# Backup data (adjust paths as needed)\ntar -czf \"$BACKUP_DIR/fusionpbx-data-$DATE.tar.gz\" /var/lib/fusionpbx\n\n# Start service\nsystemctl start fusionpbx\n\n# Clean old backups (keep 30 days)\nfind \"$BACKUP_DIR\" -name \"*.tar.gz\" -mtime +30 -delete\n\necho \"Backup completed: $BACKUP_DIR\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop fusionpbx\n\n# Restore configuration\nsudo tar -xzf /backup/fusionpbx/fusionpbx-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/fusionpbx/fusionpbx-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R fusionpbx:fusionpbx /etc/fusionpbx\nsudo chown -R fusionpbx:fusionpbx /var/lib/fusionpbx\n\n# Start service\nsudo systemctl start fusionpbx\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u fusionpbx -n 100\nsudo tail -f /var/log/fusionpbx/*.log\n\n# Check configuration\nsudo fusionpbx -t || sudo fusionpbx configtest\n\n# Check permissions\nls -la /etc/fusionpbx\nls -la /var/lib/fusionpbx\n```\n\n2. **Connection refused**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 443\nsudo netstat -tlnp | grep 443\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 443\nnc -zv localhost 443\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep php-fpm)\nhtop -p $(pgrep php-fpm)\n\n# Check connections\nss -ant | grep :443 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep php-fpm)\n```\n\n### Debug Mode\n\n```bash\n# Run in debug mode\nsudo fusionpbx -d\n# or\nsudo fusionpbx debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging\n```\n\n## Integration Examples\n\n### Docker Compose\n\n```yaml\nversion: '3.8'\nservices:\n  fusionpbx:\n    image: fusionpbx:latest\n    container_name: fusionpbx\n    ports:\n      - \"443:443\"\n    volumes:\n      - ./config:/etc/fusionpbx\n      - ./data:/var/lib/fusionpbx\n    environment:\n      - fusionpbx_CONFIG=/etc/fusionpbx/fusionpbx.conf\n    restart: unless-stopped\n    networks:\n      - fusionpbx_net\n\nnetworks:\n  fusionpbx_net:\n    driver: bridge\n```\n\n### Kubernetes Deployment\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: fusionpbx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: fusionpbx\n  template:\n    metadata:\n      labels:\n        app: fusionpbx\n    spec:\n      containers:\n      - name: fusionpbx\n        image: fusionpbx:latest\n        ports:\n        - containerPort: 443\n        volumeMounts:\n        - name: config\n          mountPath: /etc/fusionpbx\n      volumes:\n      - name: config\n        configMap:\n          name: fusionpbx-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: fusionpbx\nspec:\n  selector:\n    app: fusionpbx\n  ports:\n  - port: 443\n    targetPort: 443\n  type: LoadBalancer\n```\n\n### Ansible Playbook\n\n```yaml\n---\n- name: Install and configure FusionPBX\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install fusionpbx\n      package:\n        name: fusionpbx\n        state: present\n    \n    - name: Configure fusionpbx\n      template:\n        src: fusionpbx.conf.j2\n        dest: /etc/fusionpbx/fusionpbx.conf\n        owner: fusionpbx\n        group: fusionpbx\n        mode: '0640'\n      notify: restart fusionpbx\n    \n    - name: Start and enable fusionpbx\n      systemd:\n        name: fusionpbx\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart fusionpbx\n      systemd:\n        name: fusionpbx\n        state: restarted\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update fusionpbx\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade fusionpbx\n\n# Arch Linux\nsudo pacman -Syu fusionpbx\n\n# Alpine Linux\napk update && apk upgrade fusionpbx\n\n# openSUSE\nsudo zypper update fusionpbx\n\n# FreeBSD\npkg update && pkg upgrade fusionpbx\n\n# Always backup before updates\ntar -czf /backup/fusionpbx-pre-update-$(date +%Y%m%d).tar.gz /etc/fusionpbx\n\n# Restart after updates\nsudo systemctl restart fusionpbx\n```\n\n### Regular Maintenance Tasks\n\n```bash\n# Clean logs\nfind /var/log/fusionpbx -name \"*.log\" -mtime +30 -delete\n\n# Verify integrity\nsudo fusionpbx --verify || sudo fusionpbx check\n\n# Update databases (if applicable)\nsudo fusionpbx-update-db\n\n# Optimize performance\nsudo fusionpbx-optimize\n\n# Check for security updates\nsudo fusionpbx --security-check\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.fusionpbx.org/\n- GitHub Repository: https://github.com/fusionpbx/fusionpbx\n- Community Forum: https://forum.fusionpbx.org/\n- Wiki: https://wiki.fusionpbx.org/\n- Comparison vs FreePBX, Asterisk, 3CX, Elastix: https://docs.fusionpbx.org/comparison\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">FusionPBX is a free and open-source PBX. Multi-tenant PBX and voice switch</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2 cores minimum (4+ cores recommended)</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum (4GB+ recommended)</li>\n<li class=\"mobile-list-item\">Storage: 1GB for installation</li>\n<li class=\"mobile-list-item\">Network: 443 ports</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 443 (default fusionpbx port)</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">freeswitch, postgresql, nginx</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install fusionpbx\nsudo dnf install -y fusionpbx freeswitch, postgresql, nginx\n\n# Enable and start service\nsudo systemctl enable --now fusionpbx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=fusionpbx\nsudo firewall-cmd --reload\n\n# Verify installation\nfusionpbx --version || systemctl status fusionpbx</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install fusionpbx\nsudo apt install -y fusionpbx freeswitch, postgresql, nginx\n\n# Enable and start service\nsudo systemctl enable --now fusionpbx\n\n# Configure firewall\nsudo ufw allow 443\n\n# Verify installation\nfusionpbx --version || systemctl status fusionpbx</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install fusionpbx\nsudo pacman -S fusionpbx\n\n# Enable and start service\nsudo systemctl enable --now fusionpbx\n\n# Verify installation\nfusionpbx --version || systemctl status fusionpbx</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install fusionpbx\napk add --no-cache fusionpbx\n\n# Enable and start service\nrc-update add fusionpbx default\nrc-service fusionpbx start\n\n# Verify installation\nfusionpbx --version || rc-service fusionpbx status</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install fusionpbx\nsudo zypper install -y fusionpbx freeswitch, postgresql, nginx\n\n# Enable and start service\nsudo systemctl enable --now fusionpbx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=fusionpbx\nsudo firewall-cmd --reload\n\n# Verify installation\nfusionpbx --version || systemctl status fusionpbx</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install fusionpbx\n\n# Start service\nbrew services start fusionpbx\n\n# Verify installation\nfusionpbx --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install fusionpbx\n\n# Enable in rc.conf\necho &#039;fusionpbx_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice fusionpbx start\n\n# Verify installation\nfusionpbx --version || service fusionpbx status</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Using Chocolatey\nchoco install fusionpbx\n\n# Or using Scoop\nscoop install fusionpbx\n\n# Verify installation\nfusionpbx --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory if needed\nsudo mkdir -p /etc/fusionpbx\n\n# Set up basic configuration\nsudo tee /etc/fusionpbx/fusionpbx.conf &lt;&lt; &#039;EOF&#039;\n# FusionPBX Configuration\nmax_calls=5000\nEOF\n\n# Test configuration\nsudo fusionpbx -t || sudo fusionpbx configtest\n\n# Reload service\nsudo systemctl reload fusionpbx</code></pre>\n      </div>\n    </div>\n<h3 id=\"security-hardening\" class=\"mobile-header\">Security Hardening</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R fusionpbx:fusionpbx /etc/fusionpbx\nsudo chmod 750 /etc/fusionpbx\n\n# Enable security features\n# See security section for detailed hardening steps</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable fusionpbx\n\n# Start service\nsudo systemctl start fusionpbx\n\n# Stop service\nsudo systemctl stop fusionpbx\n\n# Restart service\nsudo systemctl restart fusionpbx\n\n# Reload configuration\nsudo systemctl reload fusionpbx\n\n# Check status\nsudo systemctl status fusionpbx\n\n# View logs\nsudo journalctl -u fusionpbx -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add fusionpbx default\n\n# Start service\nrc-service fusionpbx start\n\n# Stop service\nrc-service fusionpbx stop\n\n# Restart service\nrc-service fusionpbx restart\n\n# Check status\nrc-service fusionpbx status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;fusionpbx_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice fusionpbx start\n\n# Stop service\nservice fusionpbx stop\n\n# Restart service\nservice fusionpbx restart\n\n# Check status\nservice fusionpbx status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start fusionpbx\nbrew services stop fusionpbx\nbrew services restart fusionpbx\n\n# Check status\nbrew services list | grep fusionpbx</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start fusionpbx\n\n# Stop service\nnet stop fusionpbx\n\n# Using PowerShell\nStart-Service fusionpbx\nStop-Service fusionpbx\nRestart-Service fusionpbx\n\n# Check status\nGet-Service fusionpbx</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<h3 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure performance settings\ncat &gt;&gt; /etc/fusionpbx/fusionpbx.conf &lt;&lt; &#039;EOF&#039;\nmax_calls=5000\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart fusionpbx</code></pre>\n      </div>\n    </div>\n<h3 id=\"clustering-and-high-availability\" class=\"mobile-header\">Clustering and High Availability</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports</code></pre>\n      </div>\n    </div>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream fusionpbx_backend {\n    server 127.0.0.1:443;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name fusionpbx.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name fusionpbx.example.com;\n\n    ssl_certificate /etc/ssl/certs/fusionpbx.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/fusionpbx.example.com.key;\n\n    location / {\n        proxy_pass http://fusionpbx_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName fusionpbx.example.com\n    Redirect permanent / https://fusionpbx.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName fusionpbx.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/fusionpbx.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/fusionpbx.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:443/\n    ProxyPassReverse / http://127.0.0.1:443/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) &quot;ws://127.0.0.1:443/$1&quot; [P,L]\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend fusionpbx_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/fusionpbx.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend fusionpbx_backend\n\nbackend fusionpbx_backend\n    balance roundrobin\n    option httpchk GET /health\n    server fusionpbx1 127.0.0.1:443 check\n    server fusionpbx2 127.0.0.1:{default_port}1 check backup</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R fusionpbx:fusionpbx /etc/fusionpbx\nsudo chmod 750 /etc/fusionpbx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=fusionpbx\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/fusionpbx.conf &lt;&lt; &#039;EOF&#039;\n[fusionpbx]\nenabled = true\nport = 443\nfilter = fusionpbx\nlogpath = /var/log/fusionpbx/*.log\nmaxretry = 5\nbantime = 3600\nEOF</code></pre>\n      </div>\n    </div>\n<h3 id=\"ssltls-configuration\" class=\"mobile-header\">SSL/TLS Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/fusionpbx.key \\\n    -out /etc/ssl/certs/fusionpbx.crt\n\n# Configure SSL in fusionpbx\n# See official documentation for SSL configuration</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<h3 id=\"postgresql-backend-if-applicable\" class=\"mobile-header\">PostgreSQL Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo -u postgres psql &lt;&lt; EOF\nCREATE DATABASE fusionpbx_db;\nCREATE USER fusionpbx_user WITH ENCRYPTED PASSWORD &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON DATABASE fusionpbx_db TO fusionpbx_user;\nEOF\n\n# Configure fusionpbx to use PostgreSQL\n# See official documentation for database configuration</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysqlmariadb-backend-if-applicable\" class=\"mobile-header\">MySQL/MariaDB Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo mysql &lt;&lt; EOF\nCREATE DATABASE fusionpbx_db;\nCREATE USER &#039;fusionpbx_user&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON fusionpbx_db.* TO &#039;fusionpbx_user&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Kernel parameters\nsudo tee -a /etc/sysctl.conf &lt;&lt; EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# FusionPBX specific tuning\nmax_calls=5000</code></pre>\n      </div>\n    </div>\n<h3 id=\"resource-limits\" class=\"mobile-header\">Resource Limits</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure system limits\nsudo tee -a /etc/security/limits.conf &lt;&lt; EOF\nfusionpbx soft nofile 65535\nfusionpbx hard nofile 65535\nfusionpbx soft nproc 32768\nfusionpbx hard nproc 32768\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"prometheus-integration\" class=\"mobile-header\">Prometheus Integration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># prometheus.yml configuration\nscrape_configs:\n  - job_name: &#039;fusionpbx&#039;\n    static_configs:\n      - targets: [&#039;localhost:443&#039;]\n    metrics_path: &#039;/metrics&#039;</code></pre>\n      </div>\n    </div>\n<h3 id=\"health-checks\" class=\"mobile-header\">Health Checks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet fusionpbx; then\n    echo &quot;FusionPBX is running&quot;\n    exit 0\nelse\n    echo &quot;FusionPBX is not running&quot;\n    exit 1\nfi</code></pre>\n      </div>\n    </div>\n<h3 id=\"log-monitoring\" class=\"mobile-header\">Log Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure log rotation\nsudo tee /etc/logrotate.d/fusionpbx &lt;&lt; &#039;EOF&#039;\n/var/log/fusionpbx/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 fusionpbx fusionpbx\n    postrotate\n        systemctl reload fusionpbx &gt; /dev/null 2&gt;&amp;1 || true\n    endscript\n}\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# FusionPBX backup script\nBACKUP_DIR=&quot;/backup/fusionpbx&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\n\n# Stop service (if required)\nsystemctl stop fusionpbx\n\n# Backup configuration\ntar -czf &quot;$BACKUP_DIR/fusionpbx-config-$DATE.tar.gz&quot; /etc/fusionpbx\n\n# Backup data (adjust paths as needed)\ntar -czf &quot;$BACKUP_DIR/fusionpbx-data-$DATE.tar.gz&quot; /var/lib/fusionpbx\n\n# Start service\nsystemctl start fusionpbx\n\n# Clean old backups (keep 30 days)\nfind &quot;$BACKUP_DIR&quot; -name &quot;*.tar.gz&quot; -mtime +30 -delete\n\necho &quot;Backup completed: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop fusionpbx\n\n# Restore configuration\nsudo tar -xzf /backup/fusionpbx/fusionpbx-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/fusionpbx/fusionpbx-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R fusionpbx:fusionpbx /etc/fusionpbx\nsudo chown -R fusionpbx:fusionpbx /var/lib/fusionpbx\n\n# Start service\nsudo systemctl start fusionpbx</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u fusionpbx -n 100\nsudo tail -f /var/log/fusionpbx/*.log\n\n# Check configuration\nsudo fusionpbx -t || sudo fusionpbx configtest\n\n# Check permissions\nls -la /etc/fusionpbx\nls -la /var/lib/fusionpbx</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection refused</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 443\nsudo netstat -tlnp | grep 443\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 443\nnc -zv localhost 443</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep php-fpm)\nhtop -p $(pgrep php-fpm)\n\n# Check connections\nss -ant | grep :443 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep php-fpm)</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode\" class=\"mobile-header\">Debug Mode</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Run in debug mode\nsudo fusionpbx -d\n# or\nsudo fusionpbx debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose\" class=\"mobile-header\">Docker Compose</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  fusionpbx:\n    image: fusionpbx:latest\n    container_name: fusionpbx\n    ports:\n      - &quot;443:443&quot;\n    volumes:\n      - ./config:/etc/fusionpbx\n      - ./data:/var/lib/fusionpbx\n    environment:\n      - fusionpbx_CONFIG=/etc/fusionpbx/fusionpbx.conf\n    restart: unless-stopped\n    networks:\n      - fusionpbx_net\n\nnetworks:\n  fusionpbx_net:\n    driver: bridge</code></pre>\n      </div>\n    </div>\n<h3 id=\"kubernetes-deployment\" class=\"mobile-header\">Kubernetes Deployment</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: fusionpbx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: fusionpbx\n  template:\n    metadata:\n      labels:\n        app: fusionpbx\n    spec:\n      containers:\n      - name: fusionpbx\n        image: fusionpbx:latest\n        ports:\n        - containerPort: 443\n        volumeMounts:\n        - name: config\n          mountPath: /etc/fusionpbx\n      volumes:\n      - name: config\n        configMap:\n          name: fusionpbx-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: fusionpbx\nspec:\n  selector:\n    app: fusionpbx\n  ports:\n  - port: 443\n    targetPort: 443\n  type: LoadBalancer</code></pre>\n      </div>\n    </div>\n<h3 id=\"ansible-playbook\" class=\"mobile-header\">Ansible Playbook</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">---\n- name: Install and configure FusionPBX\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install fusionpbx\n      package:\n        name: fusionpbx\n        state: present\n    \n    - name: Configure fusionpbx\n      template:\n        src: fusionpbx.conf.j2\n        dest: /etc/fusionpbx/fusionpbx.conf\n        owner: fusionpbx\n        group: fusionpbx\n        mode: &#039;0640&#039;\n      notify: restart fusionpbx\n    \n    - name: Start and enable fusionpbx\n      systemd:\n        name: fusionpbx\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart fusionpbx\n      systemd:\n        name: fusionpbx\n        state: restarted</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update fusionpbx\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade fusionpbx\n\n# Arch Linux\nsudo pacman -Syu fusionpbx\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade fusionpbx\n\n# openSUSE\nsudo zypper update fusionpbx\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade fusionpbx\n\n# Always backup before updates\ntar -czf /backup/fusionpbx-pre-update-$(date +%Y%m%d).tar.gz /etc/fusionpbx\n\n# Restart after updates\nsudo systemctl restart fusionpbx</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance-tasks\" class=\"mobile-header\">Regular Maintenance Tasks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clean logs\nfind /var/log/fusionpbx -name &quot;*.log&quot; -mtime +30 -delete\n\n# Verify integrity\nsudo fusionpbx --verify || sudo fusionpbx check\n\n# Update databases (if applicable)\nsudo fusionpbx-update-db\n\n# Optimize performance\nsudo fusionpbx-optimize\n\n# Check for security updates\nsudo fusionpbx --security-check</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.fusionpbx.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/fusionpbx/fusionpbx</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.fusionpbx.org/</li>\n<li class=\"mobile-list-item\">Wiki: https://wiki.fusionpbx.org/</li>\n<li class=\"mobile-list-item\">Comparison vs FreePBX, Asterisk, 3CX, Elastix: https://docs.fusionpbx.org/comparison</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"10 min","wordCount":1984,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":3,"text":"Security Hardening","id":"security-hardening"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":3,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"Clustering and High Availability","id":"clustering-and-high-availability"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":3,"text":"SSL/TLS Configuration","id":"ssltls-configuration"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":3,"text":"PostgreSQL Backend (if applicable)","id":"postgresql-backend-if-applicable"},{"level":3,"text":"MySQL/MariaDB Backend (if applicable)","id":"mysqlmariadb-backend-if-applicable"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":3,"text":"Resource Limits","id":"resource-limits"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Prometheus Integration","id":"prometheus-integration"},{"level":3,"text":"Health Checks","id":"health-checks"},{"level":3,"text":"Log Monitoring","id":"log-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":3,"text":"Debug Mode","id":"debug-mode"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose","id":"docker-compose"},{"level":3,"text":"Kubernetes Deployment","id":"kubernetes-deployment"},{"level":3,"text":"Ansible Playbook","id":"ansible-playbook"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance Tasks","id":"regular-maintenance-tasks"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-09-30T18:16:47.818Z","metadataVersion":"2.0"},"category":{"key":"pbx-systems","name":"Pbx systems","description":"Pbx systems tools and applications","icon":"🔧","color":"#6272a4"},"relatedGuides":[{"name":"asterisk","displayName":"Asterisk Installation Guide","slug":"asterisk","description":"Asterisk is a free and open-source PBX. Open source PBX and telephony toolkit","category":"pbx-systems","subcategory":"pbx-systems","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,2048,5060],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["pbx-systems","containerization","orchestration","observability","data-storage","networking","security","data-protection","communication"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/pbx-systems/asterisk","documentationUrl":"https://howtomgr.github.io/pbx-systems/asterisk","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/asterisk","updatedAt":"2025-09-16T16:58:17Z","createdAt":"2025-09-16T02:19:27Z","readmeRaw":"# Asterisk Installation Guide\n\nAsterisk is a free and open-source PBX. Open source PBX and telephony toolkit\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2 cores minimum (4+ cores recommended)\n  - RAM: 2GB minimum (4GB+ recommended)\n  - Storage: 1GB for installation\n  - Network: 5060/5038 ports\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 5060/5038 (default asterisk port)\n- **Dependencies**:\n  - asterisk-core, asterisk-modules\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install asterisk\nsudo dnf install -y asterisk asterisk-core, asterisk-modules\n\n# Enable and start service\nsudo systemctl enable --now asterisk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=asterisk\nsudo firewall-cmd --reload\n\n# Verify installation\nasterisk --version || systemctl status asterisk\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install asterisk\nsudo apt install -y asterisk asterisk-core, asterisk-modules\n\n# Enable and start service\nsudo systemctl enable --now asterisk\n\n# Configure firewall\nsudo ufw allow 5060/5038\n\n# Verify installation\nasterisk --version || systemctl status asterisk\n```\n\n### Arch Linux\n\n```bash\n# Install asterisk\nsudo pacman -S asterisk\n\n# Enable and start service\nsudo systemctl enable --now asterisk\n\n# Verify installation\nasterisk --version || systemctl status asterisk\n```\n\n### Alpine Linux\n\n```bash\n# Install asterisk\napk add --no-cache asterisk\n\n# Enable and start service\nrc-update add asterisk default\nrc-service asterisk start\n\n# Verify installation\nasterisk --version || rc-service asterisk status\n```\n\n### openSUSE/SLES\n\n```bash\n# Install asterisk\nsudo zypper install -y asterisk asterisk-core, asterisk-modules\n\n# Enable and start service\nsudo systemctl enable --now asterisk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=asterisk\nsudo firewall-cmd --reload\n\n# Verify installation\nasterisk --version || systemctl status asterisk\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install asterisk\n\n# Start service\nbrew services start asterisk\n\n# Verify installation\nasterisk --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install asterisk\n\n# Enable in rc.conf\necho 'asterisk_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice asterisk start\n\n# Verify installation\nasterisk --version || service asterisk status\n```\n\n### Windows\n\n```powershell\n# Using Chocolatey\nchoco install asterisk\n\n# Or using Scoop\nscoop install asterisk\n\n# Verify installation\nasterisk --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory if needed\nsudo mkdir -p /etc/asterisk\n\n# Set up basic configuration\nsudo tee /etc/asterisk/asterisk.conf << 'EOF'\n# Asterisk Configuration\nmaxcalls=1000\nEOF\n\n# Test configuration\nsudo asterisk -t || sudo asterisk configtest\n\n# Reload service\nsudo systemctl reload asterisk\n```\n\n### Security Hardening\n\n```bash\n# Set appropriate permissions\nsudo chown -R asterisk:asterisk /etc/asterisk\nsudo chmod 750 /etc/asterisk\n\n# Enable security features\n# See security section for detailed hardening steps\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable asterisk\n\n# Start service\nsudo systemctl start asterisk\n\n# Stop service\nsudo systemctl stop asterisk\n\n# Restart service\nsudo systemctl restart asterisk\n\n# Reload configuration\nsudo systemctl reload asterisk\n\n# Check status\nsudo systemctl status asterisk\n\n# View logs\nsudo journalctl -u asterisk -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add asterisk default\n\n# Start service\nrc-service asterisk start\n\n# Stop service\nrc-service asterisk stop\n\n# Restart service\nrc-service asterisk restart\n\n# Check status\nrc-service asterisk status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'asterisk_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice asterisk start\n\n# Stop service\nservice asterisk stop\n\n# Restart service\nservice asterisk restart\n\n# Check status\nservice asterisk status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start asterisk\nbrew services stop asterisk\nbrew services restart asterisk\n\n# Check status\nbrew services list | grep asterisk\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start asterisk\n\n# Stop service\nnet stop asterisk\n\n# Using PowerShell\nStart-Service asterisk\nStop-Service asterisk\nRestart-Service asterisk\n\n# Check status\nGet-Service asterisk\n```\n\n## Advanced Configuration\n\n### Performance Optimization\n\n```bash\n# Configure performance settings\ncat >> /etc/asterisk/asterisk.conf << 'EOF'\nmaxcalls=1000\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart asterisk\n```\n\n### Clustering and High Availability\n\n```bash\n# Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports\n```\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream asterisk_backend {\n    server 127.0.0.1:5060/5038;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name asterisk.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name asterisk.example.com;\n\n    ssl_certificate /etc/ssl/certs/asterisk.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/asterisk.example.com.key;\n\n    location / {\n        proxy_pass http://asterisk_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName asterisk.example.com\n    Redirect permanent / https://asterisk.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName asterisk.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/asterisk.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/asterisk.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:5060/5038/\n    ProxyPassReverse / http://127.0.0.1:5060/5038/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) \"ws://127.0.0.1:5060/5038/$1\" [P,L]\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend asterisk_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/asterisk.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend asterisk_backend\n\nbackend asterisk_backend\n    balance roundrobin\n    option httpchk GET /health\n    server asterisk1 127.0.0.1:5060/5038 check\n    server asterisk2 127.0.0.1:{default_port}1 check backup\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R asterisk:asterisk /etc/asterisk\nsudo chmod 750 /etc/asterisk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=asterisk\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/asterisk.conf << 'EOF'\n[asterisk]\nenabled = true\nport = 5060/5038\nfilter = asterisk\nlogpath = /var/log/asterisk/*.log\nmaxretry = 5\nbantime = 3600\nEOF\n```\n\n### SSL/TLS Configuration\n\n```bash\n# Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/asterisk.key \\\n    -out /etc/ssl/certs/asterisk.crt\n\n# Configure SSL in asterisk\n# See official documentation for SSL configuration\n```\n\n## Database Setup\n\n### PostgreSQL Backend (if applicable)\n\n```bash\n# Create database and user\nsudo -u postgres psql << EOF\nCREATE DATABASE asterisk_db;\nCREATE USER asterisk_user WITH ENCRYPTED PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE asterisk_db TO asterisk_user;\nEOF\n\n# Configure asterisk to use PostgreSQL\n# See official documentation for database configuration\n```\n\n### MySQL/MariaDB Backend (if applicable)\n\n```bash\n# Create database and user\nsudo mysql << EOF\nCREATE DATABASE asterisk_db;\nCREATE USER 'asterisk_user'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON asterisk_db.* TO 'asterisk_user'@'localhost';\nFLUSH PRIVILEGES;\nEOF\n```\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Kernel parameters\nsudo tee -a /etc/sysctl.conf << EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Asterisk specific tuning\nmaxcalls=1000\n```\n\n### Resource Limits\n\n```bash\n# Configure system limits\nsudo tee -a /etc/security/limits.conf << EOF\nasterisk soft nofile 65535\nasterisk hard nofile 65535\nasterisk soft nproc 32768\nasterisk hard nproc 32768\nEOF\n```\n\n## Monitoring\n\n### Prometheus Integration\n\n```yaml\n# prometheus.yml configuration\nscrape_configs:\n  - job_name: 'asterisk'\n    static_configs:\n      - targets: ['localhost:5060/5038']\n    metrics_path: '/metrics'\n```\n\n### Health Checks\n\n```bash\n# Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet asterisk; then\n    echo \"Asterisk is running\"\n    exit 0\nelse\n    echo \"Asterisk is not running\"\n    exit 1\nfi\n```\n\n### Log Monitoring\n\n```bash\n# Configure log rotation\nsudo tee /etc/logrotate.d/asterisk << 'EOF'\n/var/log/asterisk/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 asterisk asterisk\n    postrotate\n        systemctl reload asterisk > /dev/null 2>&1 || true\n    endscript\n}\nEOF\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Asterisk backup script\nBACKUP_DIR=\"/backup/asterisk\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\n\n# Stop service (if required)\nsystemctl stop asterisk\n\n# Backup configuration\ntar -czf \"$BACKUP_DIR/asterisk-config-$DATE.tar.gz\" /etc/asterisk\n\n# Backup data (adjust paths as needed)\ntar -czf \"$BACKUP_DIR/asterisk-data-$DATE.tar.gz\" /var/lib/asterisk\n\n# Start service\nsystemctl start asterisk\n\n# Clean old backups (keep 30 days)\nfind \"$BACKUP_DIR\" -name \"*.tar.gz\" -mtime +30 -delete\n\necho \"Backup completed: $BACKUP_DIR\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop asterisk\n\n# Restore configuration\nsudo tar -xzf /backup/asterisk/asterisk-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/asterisk/asterisk-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R asterisk:asterisk /etc/asterisk\nsudo chown -R asterisk:asterisk /var/lib/asterisk\n\n# Start service\nsudo systemctl start asterisk\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u asterisk -n 100\nsudo tail -f /var/log/asterisk/*.log\n\n# Check configuration\nsudo asterisk -t || sudo asterisk configtest\n\n# Check permissions\nls -la /etc/asterisk\nls -la /var/lib/asterisk\n```\n\n2. **Connection refused**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 5060/5038\nsudo netstat -tlnp | grep 5060/5038\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 5060/5038\nnc -zv localhost 5060/5038\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep asterisk)\nhtop -p $(pgrep asterisk)\n\n# Check connections\nss -ant | grep :5060/5038 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep asterisk)\n```\n\n### Debug Mode\n\n```bash\n# Run in debug mode\nsudo asterisk -d\n# or\nsudo asterisk debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging\n```\n\n## Integration Examples\n\n### Docker Compose\n\n```yaml\nversion: '3.8'\nservices:\n  asterisk:\n    image: asterisk:latest\n    container_name: asterisk\n    ports:\n      - \"5060/5038:5060/5038\"\n    volumes:\n      - ./config:/etc/asterisk\n      - ./data:/var/lib/asterisk\n    environment:\n      - asterisk_CONFIG=/etc/asterisk/asterisk.conf\n    restart: unless-stopped\n    networks:\n      - asterisk_net\n\nnetworks:\n  asterisk_net:\n    driver: bridge\n```\n\n### Kubernetes Deployment\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: asterisk\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: asterisk\n  template:\n    metadata:\n      labels:\n        app: asterisk\n    spec:\n      containers:\n      - name: asterisk\n        image: asterisk:latest\n        ports:\n        - containerPort: 5060/5038\n        volumeMounts:\n        - name: config\n          mountPath: /etc/asterisk\n      volumes:\n      - name: config\n        configMap:\n          name: asterisk-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: asterisk\nspec:\n  selector:\n    app: asterisk\n  ports:\n  - port: 5060/5038\n    targetPort: 5060/5038\n  type: LoadBalancer\n```\n\n### Ansible Playbook\n\n```yaml\n---\n- name: Install and configure Asterisk\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install asterisk\n      package:\n        name: asterisk\n        state: present\n    \n    - name: Configure asterisk\n      template:\n        src: asterisk.conf.j2\n        dest: /etc/asterisk/asterisk.conf\n        owner: asterisk\n        group: asterisk\n        mode: '0640'\n      notify: restart asterisk\n    \n    - name: Start and enable asterisk\n      systemd:\n        name: asterisk\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart asterisk\n      systemd:\n        name: asterisk\n        state: restarted\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update asterisk\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade asterisk\n\n# Arch Linux\nsudo pacman -Syu asterisk\n\n# Alpine Linux\napk update && apk upgrade asterisk\n\n# openSUSE\nsudo zypper update asterisk\n\n# FreeBSD\npkg update && pkg upgrade asterisk\n\n# Always backup before updates\ntar -czf /backup/asterisk-pre-update-$(date +%Y%m%d).tar.gz /etc/asterisk\n\n# Restart after updates\nsudo systemctl restart asterisk\n```\n\n### Regular Maintenance Tasks\n\n```bash\n# Clean logs\nfind /var/log/asterisk -name \"*.log\" -mtime +30 -delete\n\n# Verify integrity\nsudo asterisk --verify || sudo asterisk check\n\n# Update databases (if applicable)\nsudo asterisk-update-db\n\n# Optimize performance\nsudo asterisk-optimize\n\n# Check for security updates\nsudo asterisk --security-check\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.asterisk.org/\n- GitHub Repository: https://github.com/asterisk/asterisk\n- Community Forum: https://forum.asterisk.org/\n- Wiki: https://wiki.asterisk.org/\n- Comparison vs FreeSWITCH, Kamailio, 3CX, FreePBX: https://docs.asterisk.org/comparison\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">Asterisk is a free and open-source PBX. Open source PBX and telephony toolkit</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2 cores minimum (4+ cores recommended)</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum (4GB+ recommended)</li>\n<li class=\"mobile-list-item\">Storage: 1GB for installation</li>\n<li class=\"mobile-list-item\">Network: 5060/5038 ports</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 5060/5038 (default asterisk port)</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">asterisk-core, asterisk-modules</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install asterisk\nsudo dnf install -y asterisk asterisk-core, asterisk-modules\n\n# Enable and start service\nsudo systemctl enable --now asterisk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=asterisk\nsudo firewall-cmd --reload\n\n# Verify installation\nasterisk --version || systemctl status asterisk</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install asterisk\nsudo apt install -y asterisk asterisk-core, asterisk-modules\n\n# Enable and start service\nsudo systemctl enable --now asterisk\n\n# Configure firewall\nsudo ufw allow 5060/5038\n\n# Verify installation\nasterisk --version || systemctl status asterisk</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install asterisk\nsudo pacman -S asterisk\n\n# Enable and start service\nsudo systemctl enable --now asterisk\n\n# Verify installation\nasterisk --version || systemctl status asterisk</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install asterisk\napk add --no-cache asterisk\n\n# Enable and start service\nrc-update add asterisk default\nrc-service asterisk start\n\n# Verify installation\nasterisk --version || rc-service asterisk status</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install asterisk\nsudo zypper install -y asterisk asterisk-core, asterisk-modules\n\n# Enable and start service\nsudo systemctl enable --now asterisk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=asterisk\nsudo firewall-cmd --reload\n\n# Verify installation\nasterisk --version || systemctl status asterisk</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install asterisk\n\n# Start service\nbrew services start asterisk\n\n# Verify installation\nasterisk --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install asterisk\n\n# Enable in rc.conf\necho &#039;asterisk_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice asterisk start\n\n# Verify installation\nasterisk --version || service asterisk status</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Using Chocolatey\nchoco install asterisk\n\n# Or using Scoop\nscoop install asterisk\n\n# Verify installation\nasterisk --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory if needed\nsudo mkdir -p /etc/asterisk\n\n# Set up basic configuration\nsudo tee /etc/asterisk/asterisk.conf &lt;&lt; &#039;EOF&#039;\n# Asterisk Configuration\nmaxcalls=1000\nEOF\n\n# Test configuration\nsudo asterisk -t || sudo asterisk configtest\n\n# Reload service\nsudo systemctl reload asterisk</code></pre>\n      </div>\n    </div>\n<h3 id=\"security-hardening\" class=\"mobile-header\">Security Hardening</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R asterisk:asterisk /etc/asterisk\nsudo chmod 750 /etc/asterisk\n\n# Enable security features\n# See security section for detailed hardening steps</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable asterisk\n\n# Start service\nsudo systemctl start asterisk\n\n# Stop service\nsudo systemctl stop asterisk\n\n# Restart service\nsudo systemctl restart asterisk\n\n# Reload configuration\nsudo systemctl reload asterisk\n\n# Check status\nsudo systemctl status asterisk\n\n# View logs\nsudo journalctl -u asterisk -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add asterisk default\n\n# Start service\nrc-service asterisk start\n\n# Stop service\nrc-service asterisk stop\n\n# Restart service\nrc-service asterisk restart\n\n# Check status\nrc-service asterisk status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;asterisk_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice asterisk start\n\n# Stop service\nservice asterisk stop\n\n# Restart service\nservice asterisk restart\n\n# Check status\nservice asterisk status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start asterisk\nbrew services stop asterisk\nbrew services restart asterisk\n\n# Check status\nbrew services list | grep asterisk</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start asterisk\n\n# Stop service\nnet stop asterisk\n\n# Using PowerShell\nStart-Service asterisk\nStop-Service asterisk\nRestart-Service asterisk\n\n# Check status\nGet-Service asterisk</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<h3 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure performance settings\ncat &gt;&gt; /etc/asterisk/asterisk.conf &lt;&lt; &#039;EOF&#039;\nmaxcalls=1000\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart asterisk</code></pre>\n      </div>\n    </div>\n<h3 id=\"clustering-and-high-availability\" class=\"mobile-header\">Clustering and High Availability</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports</code></pre>\n      </div>\n    </div>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream asterisk_backend {\n    server 127.0.0.1:5060/5038;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name asterisk.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name asterisk.example.com;\n\n    ssl_certificate /etc/ssl/certs/asterisk.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/asterisk.example.com.key;\n\n    location / {\n        proxy_pass http://asterisk_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName asterisk.example.com\n    Redirect permanent / https://asterisk.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName asterisk.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/asterisk.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/asterisk.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:5060/5038/\n    ProxyPassReverse / http://127.0.0.1:5060/5038/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) &quot;ws://127.0.0.1:5060/5038/$1&quot; [P,L]\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend asterisk_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/asterisk.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend asterisk_backend\n\nbackend asterisk_backend\n    balance roundrobin\n    option httpchk GET /health\n    server asterisk1 127.0.0.1:5060/5038 check\n    server asterisk2 127.0.0.1:{default_port}1 check backup</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R asterisk:asterisk /etc/asterisk\nsudo chmod 750 /etc/asterisk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=asterisk\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/asterisk.conf &lt;&lt; &#039;EOF&#039;\n[asterisk]\nenabled = true\nport = 5060/5038\nfilter = asterisk\nlogpath = /var/log/asterisk/*.log\nmaxretry = 5\nbantime = 3600\nEOF</code></pre>\n      </div>\n    </div>\n<h3 id=\"ssltls-configuration\" class=\"mobile-header\">SSL/TLS Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/asterisk.key \\\n    -out /etc/ssl/certs/asterisk.crt\n\n# Configure SSL in asterisk\n# See official documentation for SSL configuration</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<h3 id=\"postgresql-backend-if-applicable\" class=\"mobile-header\">PostgreSQL Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo -u postgres psql &lt;&lt; EOF\nCREATE DATABASE asterisk_db;\nCREATE USER asterisk_user WITH ENCRYPTED PASSWORD &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON DATABASE asterisk_db TO asterisk_user;\nEOF\n\n# Configure asterisk to use PostgreSQL\n# See official documentation for database configuration</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysqlmariadb-backend-if-applicable\" class=\"mobile-header\">MySQL/MariaDB Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo mysql &lt;&lt; EOF\nCREATE DATABASE asterisk_db;\nCREATE USER &#039;asterisk_user&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON asterisk_db.* TO &#039;asterisk_user&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Kernel parameters\nsudo tee -a /etc/sysctl.conf &lt;&lt; EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Asterisk specific tuning\nmaxcalls=1000</code></pre>\n      </div>\n    </div>\n<h3 id=\"resource-limits\" class=\"mobile-header\">Resource Limits</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure system limits\nsudo tee -a /etc/security/limits.conf &lt;&lt; EOF\nasterisk soft nofile 65535\nasterisk hard nofile 65535\nasterisk soft nproc 32768\nasterisk hard nproc 32768\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"prometheus-integration\" class=\"mobile-header\">Prometheus Integration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># prometheus.yml configuration\nscrape_configs:\n  - job_name: &#039;asterisk&#039;\n    static_configs:\n      - targets: [&#039;localhost:5060/5038&#039;]\n    metrics_path: &#039;/metrics&#039;</code></pre>\n      </div>\n    </div>\n<h3 id=\"health-checks\" class=\"mobile-header\">Health Checks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet asterisk; then\n    echo &quot;Asterisk is running&quot;\n    exit 0\nelse\n    echo &quot;Asterisk is not running&quot;\n    exit 1\nfi</code></pre>\n      </div>\n    </div>\n<h3 id=\"log-monitoring\" class=\"mobile-header\">Log Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure log rotation\nsudo tee /etc/logrotate.d/asterisk &lt;&lt; &#039;EOF&#039;\n/var/log/asterisk/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 asterisk asterisk\n    postrotate\n        systemctl reload asterisk &gt; /dev/null 2&gt;&amp;1 || true\n    endscript\n}\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Asterisk backup script\nBACKUP_DIR=&quot;/backup/asterisk&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\n\n# Stop service (if required)\nsystemctl stop asterisk\n\n# Backup configuration\ntar -czf &quot;$BACKUP_DIR/asterisk-config-$DATE.tar.gz&quot; /etc/asterisk\n\n# Backup data (adjust paths as needed)\ntar -czf &quot;$BACKUP_DIR/asterisk-data-$DATE.tar.gz&quot; /var/lib/asterisk\n\n# Start service\nsystemctl start asterisk\n\n# Clean old backups (keep 30 days)\nfind &quot;$BACKUP_DIR&quot; -name &quot;*.tar.gz&quot; -mtime +30 -delete\n\necho &quot;Backup completed: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop asterisk\n\n# Restore configuration\nsudo tar -xzf /backup/asterisk/asterisk-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/asterisk/asterisk-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R asterisk:asterisk /etc/asterisk\nsudo chown -R asterisk:asterisk /var/lib/asterisk\n\n# Start service\nsudo systemctl start asterisk</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u asterisk -n 100\nsudo tail -f /var/log/asterisk/*.log\n\n# Check configuration\nsudo asterisk -t || sudo asterisk configtest\n\n# Check permissions\nls -la /etc/asterisk\nls -la /var/lib/asterisk</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection refused</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 5060/5038\nsudo netstat -tlnp | grep 5060/5038\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 5060/5038\nnc -zv localhost 5060/5038</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep asterisk)\nhtop -p $(pgrep asterisk)\n\n# Check connections\nss -ant | grep :5060/5038 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep asterisk)</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode\" class=\"mobile-header\">Debug Mode</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Run in debug mode\nsudo asterisk -d\n# or\nsudo asterisk debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose\" class=\"mobile-header\">Docker Compose</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  asterisk:\n    image: asterisk:latest\n    container_name: asterisk\n    ports:\n      - &quot;5060/5038:5060/5038&quot;\n    volumes:\n      - ./config:/etc/asterisk\n      - ./data:/var/lib/asterisk\n    environment:\n      - asterisk_CONFIG=/etc/asterisk/asterisk.conf\n    restart: unless-stopped\n    networks:\n      - asterisk_net\n\nnetworks:\n  asterisk_net:\n    driver: bridge</code></pre>\n      </div>\n    </div>\n<h3 id=\"kubernetes-deployment\" class=\"mobile-header\">Kubernetes Deployment</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: asterisk\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: asterisk\n  template:\n    metadata:\n      labels:\n        app: asterisk\n    spec:\n      containers:\n      - name: asterisk\n        image: asterisk:latest\n        ports:\n        - containerPort: 5060/5038\n        volumeMounts:\n        - name: config\n          mountPath: /etc/asterisk\n      volumes:\n      - name: config\n        configMap:\n          name: asterisk-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: asterisk\nspec:\n  selector:\n    app: asterisk\n  ports:\n  - port: 5060/5038\n    targetPort: 5060/5038\n  type: LoadBalancer</code></pre>\n      </div>\n    </div>\n<h3 id=\"ansible-playbook\" class=\"mobile-header\">Ansible Playbook</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">---\n- name: Install and configure Asterisk\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install asterisk\n      package:\n        name: asterisk\n        state: present\n    \n    - name: Configure asterisk\n      template:\n        src: asterisk.conf.j2\n        dest: /etc/asterisk/asterisk.conf\n        owner: asterisk\n        group: asterisk\n        mode: &#039;0640&#039;\n      notify: restart asterisk\n    \n    - name: Start and enable asterisk\n      systemd:\n        name: asterisk\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart asterisk\n      systemd:\n        name: asterisk\n        state: restarted</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update asterisk\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade asterisk\n\n# Arch Linux\nsudo pacman -Syu asterisk\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade asterisk\n\n# openSUSE\nsudo zypper update asterisk\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade asterisk\n\n# Always backup before updates\ntar -czf /backup/asterisk-pre-update-$(date +%Y%m%d).tar.gz /etc/asterisk\n\n# Restart after updates\nsudo systemctl restart asterisk</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance-tasks\" class=\"mobile-header\">Regular Maintenance Tasks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clean logs\nfind /var/log/asterisk -name &quot;*.log&quot; -mtime +30 -delete\n\n# Verify integrity\nsudo asterisk --verify || sudo asterisk check\n\n# Update databases (if applicable)\nsudo asterisk-update-db\n\n# Optimize performance\nsudo asterisk-optimize\n\n# Check for security updates\nsudo asterisk --security-check</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.asterisk.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/asterisk/asterisk</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.asterisk.org/</li>\n<li class=\"mobile-list-item\">Wiki: https://wiki.asterisk.org/</li>\n<li class=\"mobile-list-item\">Comparison vs FreeSWITCH, Kamailio, 3CX, FreePBX: https://docs.asterisk.org/comparison</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"10 min","wordCount":1981,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":3,"text":"Security Hardening","id":"security-hardening"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":3,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"Clustering and High Availability","id":"clustering-and-high-availability"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":3,"text":"SSL/TLS Configuration","id":"ssltls-configuration"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":3,"text":"PostgreSQL Backend (if applicable)","id":"postgresql-backend-if-applicable"},{"level":3,"text":"MySQL/MariaDB Backend (if applicable)","id":"mysqlmariadb-backend-if-applicable"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":3,"text":"Resource Limits","id":"resource-limits"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Prometheus Integration","id":"prometheus-integration"},{"level":3,"text":"Health Checks","id":"health-checks"},{"level":3,"text":"Log Monitoring","id":"log-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":3,"text":"Debug Mode","id":"debug-mode"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose","id":"docker-compose"},{"level":3,"text":"Kubernetes Deployment","id":"kubernetes-deployment"},{"level":3,"text":"Ansible Playbook","id":"ansible-playbook"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance Tasks","id":"regular-maintenance-tasks"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-09-30T18:17:38.445Z","metadataVersion":"2.0"},{"name":"freeswitch","displayName":"FreeSWITCH Installation Guide","slug":"freeswitch","description":"FreeSWITCH is a free and open-source Softswitch. Scalable softswitch platform","category":"pbx-systems","subcategory":"pbx-systems","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,2048,5060],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["pbx-systems","containerization","orchestration","observability","data-storage","networking","security","data-protection","communication"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/pbx-systems/freeswitch","documentationUrl":"https://howtomgr.github.io/pbx-systems/freeswitch","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/freeswitch","updatedAt":"2025-09-16T17:13:59Z","createdAt":"2025-09-16T02:38:55Z","readmeRaw":"# FreeSWITCH Installation Guide\n\nFreeSWITCH is a free and open-source Softswitch. Scalable softswitch platform\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2 cores minimum (4+ cores recommended)\n  - RAM: 2GB minimum (4GB+ recommended)\n  - Storage: 1GB for installation\n  - Network: 5060/5080 ports\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 5060/5080 (default freeswitch port)\n- **Dependencies**:\n  - freeswitch-meta-all\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install freeswitch\nsudo dnf install -y freeswitch freeswitch-meta-all\n\n# Enable and start service\nsudo systemctl enable --now freeswitch\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=freeswitch\nsudo firewall-cmd --reload\n\n# Verify installation\nfreeswitch --version || systemctl status freeswitch\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install freeswitch\nsudo apt install -y freeswitch freeswitch-meta-all\n\n# Enable and start service\nsudo systemctl enable --now freeswitch\n\n# Configure firewall\nsudo ufw allow 5060/5080\n\n# Verify installation\nfreeswitch --version || systemctl status freeswitch\n```\n\n### Arch Linux\n\n```bash\n# Install freeswitch\nsudo pacman -S freeswitch\n\n# Enable and start service\nsudo systemctl enable --now freeswitch\n\n# Verify installation\nfreeswitch --version || systemctl status freeswitch\n```\n\n### Alpine Linux\n\n```bash\n# Install freeswitch\napk add --no-cache freeswitch\n\n# Enable and start service\nrc-update add freeswitch default\nrc-service freeswitch start\n\n# Verify installation\nfreeswitch --version || rc-service freeswitch status\n```\n\n### openSUSE/SLES\n\n```bash\n# Install freeswitch\nsudo zypper install -y freeswitch freeswitch-meta-all\n\n# Enable and start service\nsudo systemctl enable --now freeswitch\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=freeswitch\nsudo firewall-cmd --reload\n\n# Verify installation\nfreeswitch --version || systemctl status freeswitch\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install freeswitch\n\n# Start service\nbrew services start freeswitch\n\n# Verify installation\nfreeswitch --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install freeswitch\n\n# Enable in rc.conf\necho 'freeswitch_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice freeswitch start\n\n# Verify installation\nfreeswitch --version || service freeswitch status\n```\n\n### Windows\n\n```powershell\n# Using Chocolatey\nchoco install freeswitch\n\n# Or using Scoop\nscoop install freeswitch\n\n# Verify installation\nfreeswitch --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory if needed\nsudo mkdir -p /etc/freeswitch\n\n# Set up basic configuration\nsudo tee /etc/freeswitch/freeswitch.conf << 'EOF'\n# FreeSWITCH Configuration\nmax-sessions=1000\nEOF\n\n# Test configuration\nsudo freeswitch -t || sudo freeswitch configtest\n\n# Reload service\nsudo systemctl reload freeswitch\n```\n\n### Security Hardening\n\n```bash\n# Set appropriate permissions\nsudo chown -R freeswitch:freeswitch /etc/freeswitch\nsudo chmod 750 /etc/freeswitch\n\n# Enable security features\n# See security section for detailed hardening steps\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable freeswitch\n\n# Start service\nsudo systemctl start freeswitch\n\n# Stop service\nsudo systemctl stop freeswitch\n\n# Restart service\nsudo systemctl restart freeswitch\n\n# Reload configuration\nsudo systemctl reload freeswitch\n\n# Check status\nsudo systemctl status freeswitch\n\n# View logs\nsudo journalctl -u freeswitch -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add freeswitch default\n\n# Start service\nrc-service freeswitch start\n\n# Stop service\nrc-service freeswitch stop\n\n# Restart service\nrc-service freeswitch restart\n\n# Check status\nrc-service freeswitch status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'freeswitch_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice freeswitch start\n\n# Stop service\nservice freeswitch stop\n\n# Restart service\nservice freeswitch restart\n\n# Check status\nservice freeswitch status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start freeswitch\nbrew services stop freeswitch\nbrew services restart freeswitch\n\n# Check status\nbrew services list | grep freeswitch\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start freeswitch\n\n# Stop service\nnet stop freeswitch\n\n# Using PowerShell\nStart-Service freeswitch\nStop-Service freeswitch\nRestart-Service freeswitch\n\n# Check status\nGet-Service freeswitch\n```\n\n## Advanced Configuration\n\n### Performance Optimization\n\n```bash\n# Configure performance settings\ncat >> /etc/freeswitch/freeswitch.conf << 'EOF'\nmax-sessions=1000\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart freeswitch\n```\n\n### Clustering and High Availability\n\n```bash\n# Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports\n```\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream freeswitch_backend {\n    server 127.0.0.1:5060/5080;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name freeswitch.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name freeswitch.example.com;\n\n    ssl_certificate /etc/ssl/certs/freeswitch.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/freeswitch.example.com.key;\n\n    location / {\n        proxy_pass http://freeswitch_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName freeswitch.example.com\n    Redirect permanent / https://freeswitch.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName freeswitch.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/freeswitch.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/freeswitch.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:5060/5080/\n    ProxyPassReverse / http://127.0.0.1:5060/5080/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) \"ws://127.0.0.1:5060/5080/$1\" [P,L]\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend freeswitch_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/freeswitch.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend freeswitch_backend\n\nbackend freeswitch_backend\n    balance roundrobin\n    option httpchk GET /health\n    server freeswitch1 127.0.0.1:5060/5080 check\n    server freeswitch2 127.0.0.1:{default_port}1 check backup\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R freeswitch:freeswitch /etc/freeswitch\nsudo chmod 750 /etc/freeswitch\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=freeswitch\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/freeswitch.conf << 'EOF'\n[freeswitch]\nenabled = true\nport = 5060/5080\nfilter = freeswitch\nlogpath = /var/log/freeswitch/*.log\nmaxretry = 5\nbantime = 3600\nEOF\n```\n\n### SSL/TLS Configuration\n\n```bash\n# Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/freeswitch.key \\\n    -out /etc/ssl/certs/freeswitch.crt\n\n# Configure SSL in freeswitch\n# See official documentation for SSL configuration\n```\n\n## Database Setup\n\n### PostgreSQL Backend (if applicable)\n\n```bash\n# Create database and user\nsudo -u postgres psql << EOF\nCREATE DATABASE freeswitch_db;\nCREATE USER freeswitch_user WITH ENCRYPTED PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE freeswitch_db TO freeswitch_user;\nEOF\n\n# Configure freeswitch to use PostgreSQL\n# See official documentation for database configuration\n```\n\n### MySQL/MariaDB Backend (if applicable)\n\n```bash\n# Create database and user\nsudo mysql << EOF\nCREATE DATABASE freeswitch_db;\nCREATE USER 'freeswitch_user'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON freeswitch_db.* TO 'freeswitch_user'@'localhost';\nFLUSH PRIVILEGES;\nEOF\n```\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Kernel parameters\nsudo tee -a /etc/sysctl.conf << EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# FreeSWITCH specific tuning\nmax-sessions=1000\n```\n\n### Resource Limits\n\n```bash\n# Configure system limits\nsudo tee -a /etc/security/limits.conf << EOF\nfreeswitch soft nofile 65535\nfreeswitch hard nofile 65535\nfreeswitch soft nproc 32768\nfreeswitch hard nproc 32768\nEOF\n```\n\n## Monitoring\n\n### Prometheus Integration\n\n```yaml\n# prometheus.yml configuration\nscrape_configs:\n  - job_name: 'freeswitch'\n    static_configs:\n      - targets: ['localhost:5060/5080']\n    metrics_path: '/metrics'\n```\n\n### Health Checks\n\n```bash\n# Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet freeswitch; then\n    echo \"FreeSWITCH is running\"\n    exit 0\nelse\n    echo \"FreeSWITCH is not running\"\n    exit 1\nfi\n```\n\n### Log Monitoring\n\n```bash\n# Configure log rotation\nsudo tee /etc/logrotate.d/freeswitch << 'EOF'\n/var/log/freeswitch/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 freeswitch freeswitch\n    postrotate\n        systemctl reload freeswitch > /dev/null 2>&1 || true\n    endscript\n}\nEOF\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# FreeSWITCH backup script\nBACKUP_DIR=\"/backup/freeswitch\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\n\n# Stop service (if required)\nsystemctl stop freeswitch\n\n# Backup configuration\ntar -czf \"$BACKUP_DIR/freeswitch-config-$DATE.tar.gz\" /etc/freeswitch\n\n# Backup data (adjust paths as needed)\ntar -czf \"$BACKUP_DIR/freeswitch-data-$DATE.tar.gz\" /var/lib/freeswitch\n\n# Start service\nsystemctl start freeswitch\n\n# Clean old backups (keep 30 days)\nfind \"$BACKUP_DIR\" -name \"*.tar.gz\" -mtime +30 -delete\n\necho \"Backup completed: $BACKUP_DIR\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop freeswitch\n\n# Restore configuration\nsudo tar -xzf /backup/freeswitch/freeswitch-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/freeswitch/freeswitch-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R freeswitch:freeswitch /etc/freeswitch\nsudo chown -R freeswitch:freeswitch /var/lib/freeswitch\n\n# Start service\nsudo systemctl start freeswitch\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u freeswitch -n 100\nsudo tail -f /var/log/freeswitch/*.log\n\n# Check configuration\nsudo freeswitch -t || sudo freeswitch configtest\n\n# Check permissions\nls -la /etc/freeswitch\nls -la /var/lib/freeswitch\n```\n\n2. **Connection refused**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 5060/5080\nsudo netstat -tlnp | grep 5060/5080\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 5060/5080\nnc -zv localhost 5060/5080\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep freeswitch)\nhtop -p $(pgrep freeswitch)\n\n# Check connections\nss -ant | grep :5060/5080 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep freeswitch)\n```\n\n### Debug Mode\n\n```bash\n# Run in debug mode\nsudo freeswitch -d\n# or\nsudo freeswitch debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging\n```\n\n## Integration Examples\n\n### Docker Compose\n\n```yaml\nversion: '3.8'\nservices:\n  freeswitch:\n    image: freeswitch:latest\n    container_name: freeswitch\n    ports:\n      - \"5060/5080:5060/5080\"\n    volumes:\n      - ./config:/etc/freeswitch\n      - ./data:/var/lib/freeswitch\n    environment:\n      - freeswitch_CONFIG=/etc/freeswitch/freeswitch.conf\n    restart: unless-stopped\n    networks:\n      - freeswitch_net\n\nnetworks:\n  freeswitch_net:\n    driver: bridge\n```\n\n### Kubernetes Deployment\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: freeswitch\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: freeswitch\n  template:\n    metadata:\n      labels:\n        app: freeswitch\n    spec:\n      containers:\n      - name: freeswitch\n        image: freeswitch:latest\n        ports:\n        - containerPort: 5060/5080\n        volumeMounts:\n        - name: config\n          mountPath: /etc/freeswitch\n      volumes:\n      - name: config\n        configMap:\n          name: freeswitch-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: freeswitch\nspec:\n  selector:\n    app: freeswitch\n  ports:\n  - port: 5060/5080\n    targetPort: 5060/5080\n  type: LoadBalancer\n```\n\n### Ansible Playbook\n\n```yaml\n---\n- name: Install and configure FreeSWITCH\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install freeswitch\n      package:\n        name: freeswitch\n        state: present\n    \n    - name: Configure freeswitch\n      template:\n        src: freeswitch.conf.j2\n        dest: /etc/freeswitch/freeswitch.conf\n        owner: freeswitch\n        group: freeswitch\n        mode: '0640'\n      notify: restart freeswitch\n    \n    - name: Start and enable freeswitch\n      systemd:\n        name: freeswitch\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart freeswitch\n      systemd:\n        name: freeswitch\n        state: restarted\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update freeswitch\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade freeswitch\n\n# Arch Linux\nsudo pacman -Syu freeswitch\n\n# Alpine Linux\napk update && apk upgrade freeswitch\n\n# openSUSE\nsudo zypper update freeswitch\n\n# FreeBSD\npkg update && pkg upgrade freeswitch\n\n# Always backup before updates\ntar -czf /backup/freeswitch-pre-update-$(date +%Y%m%d).tar.gz /etc/freeswitch\n\n# Restart after updates\nsudo systemctl restart freeswitch\n```\n\n### Regular Maintenance Tasks\n\n```bash\n# Clean logs\nfind /var/log/freeswitch -name \"*.log\" -mtime +30 -delete\n\n# Verify integrity\nsudo freeswitch --verify || sudo freeswitch check\n\n# Update databases (if applicable)\nsudo freeswitch-update-db\n\n# Optimize performance\nsudo freeswitch-optimize\n\n# Check for security updates\nsudo freeswitch --security-check\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.freeswitch.org/\n- GitHub Repository: https://github.com/freeswitch/freeswitch\n- Community Forum: https://forum.freeswitch.org/\n- Wiki: https://wiki.freeswitch.org/\n- Comparison vs Asterisk, Kamailio, OpenSIPS, 3CX: https://docs.freeswitch.org/comparison\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">FreeSWITCH is a free and open-source Softswitch. Scalable softswitch platform</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2 cores minimum (4+ cores recommended)</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum (4GB+ recommended)</li>\n<li class=\"mobile-list-item\">Storage: 1GB for installation</li>\n<li class=\"mobile-list-item\">Network: 5060/5080 ports</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 5060/5080 (default freeswitch port)</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">freeswitch-meta-all</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install freeswitch\nsudo dnf install -y freeswitch freeswitch-meta-all\n\n# Enable and start service\nsudo systemctl enable --now freeswitch\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=freeswitch\nsudo firewall-cmd --reload\n\n# Verify installation\nfreeswitch --version || systemctl status freeswitch</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install freeswitch\nsudo apt install -y freeswitch freeswitch-meta-all\n\n# Enable and start service\nsudo systemctl enable --now freeswitch\n\n# Configure firewall\nsudo ufw allow 5060/5080\n\n# Verify installation\nfreeswitch --version || systemctl status freeswitch</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install freeswitch\nsudo pacman -S freeswitch\n\n# Enable and start service\nsudo systemctl enable --now freeswitch\n\n# Verify installation\nfreeswitch --version || systemctl status freeswitch</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install freeswitch\napk add --no-cache freeswitch\n\n# Enable and start service\nrc-update add freeswitch default\nrc-service freeswitch start\n\n# Verify installation\nfreeswitch --version || rc-service freeswitch status</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install freeswitch\nsudo zypper install -y freeswitch freeswitch-meta-all\n\n# Enable and start service\nsudo systemctl enable --now freeswitch\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=freeswitch\nsudo firewall-cmd --reload\n\n# Verify installation\nfreeswitch --version || systemctl status freeswitch</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install freeswitch\n\n# Start service\nbrew services start freeswitch\n\n# Verify installation\nfreeswitch --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install freeswitch\n\n# Enable in rc.conf\necho &#039;freeswitch_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice freeswitch start\n\n# Verify installation\nfreeswitch --version || service freeswitch status</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Using Chocolatey\nchoco install freeswitch\n\n# Or using Scoop\nscoop install freeswitch\n\n# Verify installation\nfreeswitch --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory if needed\nsudo mkdir -p /etc/freeswitch\n\n# Set up basic configuration\nsudo tee /etc/freeswitch/freeswitch.conf &lt;&lt; &#039;EOF&#039;\n# FreeSWITCH Configuration\nmax-sessions=1000\nEOF\n\n# Test configuration\nsudo freeswitch -t || sudo freeswitch configtest\n\n# Reload service\nsudo systemctl reload freeswitch</code></pre>\n      </div>\n    </div>\n<h3 id=\"security-hardening\" class=\"mobile-header\">Security Hardening</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R freeswitch:freeswitch /etc/freeswitch\nsudo chmod 750 /etc/freeswitch\n\n# Enable security features\n# See security section for detailed hardening steps</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable freeswitch\n\n# Start service\nsudo systemctl start freeswitch\n\n# Stop service\nsudo systemctl stop freeswitch\n\n# Restart service\nsudo systemctl restart freeswitch\n\n# Reload configuration\nsudo systemctl reload freeswitch\n\n# Check status\nsudo systemctl status freeswitch\n\n# View logs\nsudo journalctl -u freeswitch -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add freeswitch default\n\n# Start service\nrc-service freeswitch start\n\n# Stop service\nrc-service freeswitch stop\n\n# Restart service\nrc-service freeswitch restart\n\n# Check status\nrc-service freeswitch status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;freeswitch_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice freeswitch start\n\n# Stop service\nservice freeswitch stop\n\n# Restart service\nservice freeswitch restart\n\n# Check status\nservice freeswitch status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start freeswitch\nbrew services stop freeswitch\nbrew services restart freeswitch\n\n# Check status\nbrew services list | grep freeswitch</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start freeswitch\n\n# Stop service\nnet stop freeswitch\n\n# Using PowerShell\nStart-Service freeswitch\nStop-Service freeswitch\nRestart-Service freeswitch\n\n# Check status\nGet-Service freeswitch</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<h3 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure performance settings\ncat &gt;&gt; /etc/freeswitch/freeswitch.conf &lt;&lt; &#039;EOF&#039;\nmax-sessions=1000\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart freeswitch</code></pre>\n      </div>\n    </div>\n<h3 id=\"clustering-and-high-availability\" class=\"mobile-header\">Clustering and High Availability</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports</code></pre>\n      </div>\n    </div>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream freeswitch_backend {\n    server 127.0.0.1:5060/5080;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name freeswitch.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name freeswitch.example.com;\n\n    ssl_certificate /etc/ssl/certs/freeswitch.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/freeswitch.example.com.key;\n\n    location / {\n        proxy_pass http://freeswitch_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName freeswitch.example.com\n    Redirect permanent / https://freeswitch.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName freeswitch.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/freeswitch.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/freeswitch.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:5060/5080/\n    ProxyPassReverse / http://127.0.0.1:5060/5080/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) &quot;ws://127.0.0.1:5060/5080/$1&quot; [P,L]\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend freeswitch_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/freeswitch.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend freeswitch_backend\n\nbackend freeswitch_backend\n    balance roundrobin\n    option httpchk GET /health\n    server freeswitch1 127.0.0.1:5060/5080 check\n    server freeswitch2 127.0.0.1:{default_port}1 check backup</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R freeswitch:freeswitch /etc/freeswitch\nsudo chmod 750 /etc/freeswitch\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=freeswitch\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/freeswitch.conf &lt;&lt; &#039;EOF&#039;\n[freeswitch]\nenabled = true\nport = 5060/5080\nfilter = freeswitch\nlogpath = /var/log/freeswitch/*.log\nmaxretry = 5\nbantime = 3600\nEOF</code></pre>\n      </div>\n    </div>\n<h3 id=\"ssltls-configuration\" class=\"mobile-header\">SSL/TLS Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/freeswitch.key \\\n    -out /etc/ssl/certs/freeswitch.crt\n\n# Configure SSL in freeswitch\n# See official documentation for SSL configuration</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<h3 id=\"postgresql-backend-if-applicable\" class=\"mobile-header\">PostgreSQL Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo -u postgres psql &lt;&lt; EOF\nCREATE DATABASE freeswitch_db;\nCREATE USER freeswitch_user WITH ENCRYPTED PASSWORD &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON DATABASE freeswitch_db TO freeswitch_user;\nEOF\n\n# Configure freeswitch to use PostgreSQL\n# See official documentation for database configuration</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysqlmariadb-backend-if-applicable\" class=\"mobile-header\">MySQL/MariaDB Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo mysql &lt;&lt; EOF\nCREATE DATABASE freeswitch_db;\nCREATE USER &#039;freeswitch_user&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON freeswitch_db.* TO &#039;freeswitch_user&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Kernel parameters\nsudo tee -a /etc/sysctl.conf &lt;&lt; EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# FreeSWITCH specific tuning\nmax-sessions=1000</code></pre>\n      </div>\n    </div>\n<h3 id=\"resource-limits\" class=\"mobile-header\">Resource Limits</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure system limits\nsudo tee -a /etc/security/limits.conf &lt;&lt; EOF\nfreeswitch soft nofile 65535\nfreeswitch hard nofile 65535\nfreeswitch soft nproc 32768\nfreeswitch hard nproc 32768\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"prometheus-integration\" class=\"mobile-header\">Prometheus Integration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># prometheus.yml configuration\nscrape_configs:\n  - job_name: &#039;freeswitch&#039;\n    static_configs:\n      - targets: [&#039;localhost:5060/5080&#039;]\n    metrics_path: &#039;/metrics&#039;</code></pre>\n      </div>\n    </div>\n<h3 id=\"health-checks\" class=\"mobile-header\">Health Checks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet freeswitch; then\n    echo &quot;FreeSWITCH is running&quot;\n    exit 0\nelse\n    echo &quot;FreeSWITCH is not running&quot;\n    exit 1\nfi</code></pre>\n      </div>\n    </div>\n<h3 id=\"log-monitoring\" class=\"mobile-header\">Log Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure log rotation\nsudo tee /etc/logrotate.d/freeswitch &lt;&lt; &#039;EOF&#039;\n/var/log/freeswitch/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 freeswitch freeswitch\n    postrotate\n        systemctl reload freeswitch &gt; /dev/null 2&gt;&amp;1 || true\n    endscript\n}\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# FreeSWITCH backup script\nBACKUP_DIR=&quot;/backup/freeswitch&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\n\n# Stop service (if required)\nsystemctl stop freeswitch\n\n# Backup configuration\ntar -czf &quot;$BACKUP_DIR/freeswitch-config-$DATE.tar.gz&quot; /etc/freeswitch\n\n# Backup data (adjust paths as needed)\ntar -czf &quot;$BACKUP_DIR/freeswitch-data-$DATE.tar.gz&quot; /var/lib/freeswitch\n\n# Start service\nsystemctl start freeswitch\n\n# Clean old backups (keep 30 days)\nfind &quot;$BACKUP_DIR&quot; -name &quot;*.tar.gz&quot; -mtime +30 -delete\n\necho &quot;Backup completed: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop freeswitch\n\n# Restore configuration\nsudo tar -xzf /backup/freeswitch/freeswitch-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/freeswitch/freeswitch-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R freeswitch:freeswitch /etc/freeswitch\nsudo chown -R freeswitch:freeswitch /var/lib/freeswitch\n\n# Start service\nsudo systemctl start freeswitch</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u freeswitch -n 100\nsudo tail -f /var/log/freeswitch/*.log\n\n# Check configuration\nsudo freeswitch -t || sudo freeswitch configtest\n\n# Check permissions\nls -la /etc/freeswitch\nls -la /var/lib/freeswitch</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection refused</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 5060/5080\nsudo netstat -tlnp | grep 5060/5080\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 5060/5080\nnc -zv localhost 5060/5080</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep freeswitch)\nhtop -p $(pgrep freeswitch)\n\n# Check connections\nss -ant | grep :5060/5080 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep freeswitch)</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode\" class=\"mobile-header\">Debug Mode</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Run in debug mode\nsudo freeswitch -d\n# or\nsudo freeswitch debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose\" class=\"mobile-header\">Docker Compose</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  freeswitch:\n    image: freeswitch:latest\n    container_name: freeswitch\n    ports:\n      - &quot;5060/5080:5060/5080&quot;\n    volumes:\n      - ./config:/etc/freeswitch\n      - ./data:/var/lib/freeswitch\n    environment:\n      - freeswitch_CONFIG=/etc/freeswitch/freeswitch.conf\n    restart: unless-stopped\n    networks:\n      - freeswitch_net\n\nnetworks:\n  freeswitch_net:\n    driver: bridge</code></pre>\n      </div>\n    </div>\n<h3 id=\"kubernetes-deployment\" class=\"mobile-header\">Kubernetes Deployment</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: freeswitch\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: freeswitch\n  template:\n    metadata:\n      labels:\n        app: freeswitch\n    spec:\n      containers:\n      - name: freeswitch\n        image: freeswitch:latest\n        ports:\n        - containerPort: 5060/5080\n        volumeMounts:\n        - name: config\n          mountPath: /etc/freeswitch\n      volumes:\n      - name: config\n        configMap:\n          name: freeswitch-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: freeswitch\nspec:\n  selector:\n    app: freeswitch\n  ports:\n  - port: 5060/5080\n    targetPort: 5060/5080\n  type: LoadBalancer</code></pre>\n      </div>\n    </div>\n<h3 id=\"ansible-playbook\" class=\"mobile-header\">Ansible Playbook</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">---\n- name: Install and configure FreeSWITCH\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install freeswitch\n      package:\n        name: freeswitch\n        state: present\n    \n    - name: Configure freeswitch\n      template:\n        src: freeswitch.conf.j2\n        dest: /etc/freeswitch/freeswitch.conf\n        owner: freeswitch\n        group: freeswitch\n        mode: &#039;0640&#039;\n      notify: restart freeswitch\n    \n    - name: Start and enable freeswitch\n      systemd:\n        name: freeswitch\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart freeswitch\n      systemd:\n        name: freeswitch\n        state: restarted</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update freeswitch\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade freeswitch\n\n# Arch Linux\nsudo pacman -Syu freeswitch\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade freeswitch\n\n# openSUSE\nsudo zypper update freeswitch\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade freeswitch\n\n# Always backup before updates\ntar -czf /backup/freeswitch-pre-update-$(date +%Y%m%d).tar.gz /etc/freeswitch\n\n# Restart after updates\nsudo systemctl restart freeswitch</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance-tasks\" class=\"mobile-header\">Regular Maintenance Tasks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clean logs\nfind /var/log/freeswitch -name &quot;*.log&quot; -mtime +30 -delete\n\n# Verify integrity\nsudo freeswitch --verify || sudo freeswitch check\n\n# Update databases (if applicable)\nsudo freeswitch-update-db\n\n# Optimize performance\nsudo freeswitch-optimize\n\n# Check for security updates\nsudo freeswitch --security-check</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.freeswitch.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/freeswitch/freeswitch</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.freeswitch.org/</li>\n<li class=\"mobile-list-item\">Wiki: https://wiki.freeswitch.org/</li>\n<li class=\"mobile-list-item\">Comparison vs Asterisk, Kamailio, OpenSIPS, 3CX: https://docs.freeswitch.org/comparison</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"10 min","wordCount":1974,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":3,"text":"Security Hardening","id":"security-hardening"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":3,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"Clustering and High Availability","id":"clustering-and-high-availability"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":3,"text":"SSL/TLS Configuration","id":"ssltls-configuration"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":3,"text":"PostgreSQL Backend (if applicable)","id":"postgresql-backend-if-applicable"},{"level":3,"text":"MySQL/MariaDB Backend (if applicable)","id":"mysqlmariadb-backend-if-applicable"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":3,"text":"Resource Limits","id":"resource-limits"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Prometheus Integration","id":"prometheus-integration"},{"level":3,"text":"Health Checks","id":"health-checks"},{"level":3,"text":"Log Monitoring","id":"log-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":3,"text":"Debug Mode","id":"debug-mode"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose","id":"docker-compose"},{"level":3,"text":"Kubernetes Deployment","id":"kubernetes-deployment"},{"level":3,"text":"Ansible Playbook","id":"ansible-playbook"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance Tasks","id":"regular-maintenance-tasks"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-09-30T18:16:49.229Z","metadataVersion":"2.0"}]},"__N_SSG":true}