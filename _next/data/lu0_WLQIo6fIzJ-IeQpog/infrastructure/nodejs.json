{"pageProps":{"guide":{"name":"nodejs","displayName":"Node.js","slug":"nodejs","description":"Repo for nodejs","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/nodejs","updatedAt":"2025-09-08T03:12:42Z","createdAt":"2023-08-28T03:49:17Z","readmeRaw":"# Node.js Installation Guide\n\nJavaScript runtime built on Chrome's V8 JavaScript engine. Essential for running JavaScript applications on servers.\n\n## Prerequisites\n\n- Linux system (Ubuntu/Debian, RHEL/CentOS/Fedora, or Arch)\n- curl or wget for downloading packages\n\n## Installation\n\n### Using NVM (Recommended)\n```bash\n# Install NVM\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\nsource ~/.bashrc\n\n# Install latest Node.js\nnvm install node\nnvm use node\n\n# Install LTS version\nnvm install --lts\nnvm use --lts\n\n# Install specific version\nnvm install v18.17.0\nnvm use v18.17.0\n```\n\n### System Package Installation\n\n#### Ubuntu/Debian\n```bash\n# Install build essentials\nsudo apt-get update\nsudo apt-get install -y build-essential\n\n# Add NodeSource repository\ncurl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -\nsudo apt-get install -y nodejs\n```\n\n#### RHEL/CentOS/Fedora\n```bash\n# Install development tools\nsudo yum groupinstall 'Development Tools'\n\n# Add NodeSource repository  \ncurl -sL https://rpm.nodesource.com/setup_18.x | sudo bash -\nsudo yum install -y nodejs npm\n```\n\n#### Arch Linux\n```bash\n# Install from official repositories\nsudo pacman -S nodejs npm\n```\n\n## Configuration\n\n### NGINX Proxy Setup\n```bash\n# Create NGINX configuration\nsudo tee /etc/nginx/sites-available/nodejs-app > /dev/null <<EOF\nserver {\n    listen 80;\n    server_name your-domain.com;\n    \n    location / {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade \\$http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host \\$host;\n        proxy_cache_bypass \\$http_upgrade;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n    }\n}\nEOF\n\n# Enable site\nsudo ln -s /etc/nginx/sites-available/nodejs-app /etc/nginx/sites-enabled/\nsudo nginx -t && sudo systemctl restart nginx\n```\n\n### SystemD Service\n```bash\n# Create systemd service for your app\nsudo tee /etc/systemd/system/myapp.service > /dev/null <<EOF\n[Unit]\nDescription=Node.js App\nAfter=network.target\n\n[Service]\nType=simple\nUser=www-data\nWorkingDirectory=/path/to/your/app\nExecStart=/usr/bin/node app.js\nRestart=on-failure\nRestartSec=10\nEnvironment=NODE_ENV=production\nEnvironment=PORT=3000\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Enable and start service\nsudo systemctl daemon-reload\nsudo systemctl enable --now myapp\n```\n\n## Verification\n\n```bash\n# Check Node.js version\nnode --version\nnpm --version\n\n# Test basic functionality\nnode -e \"console.log('Node.js is working!')\"\n\n# Check service status (if using systemd)\nsudo systemctl status myapp\n```\n\n## Usage\n\n1. Create your Node.js application\n2. Install dependencies with `npm install`\n3. Start development server with `npm start` or `node app.js`\n4. For production, use PM2 or systemd service\n5. Configure reverse proxy with NGINX\n\n## Additional Resources\n\n- [Official Documentation](https://nodejs.org/docs/)\n- [NPM Documentation](https://docs.npmjs.com/)\n- [NVM GitHub](https://github.com/nvm-sh/nvm)\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection.","readmeHtml":"<h1 id=\"nodejs-installation-guide\" class=\"mobile-header\">Node.js Installation Guide</h1>\n<p class=\"mobile-paragraph\">JavaScript runtime built on Chrome's V8 JavaScript engine. Essential for running JavaScript applications on servers.</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\">Linux system (Ubuntu/Debian, RHEL/CentOS/Fedora, or Arch)</li>\n<li class=\"mobile-list-item\">curl or wget for downloading packages</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"using-nvm-recommended\" class=\"mobile-header\">Using NVM (Recommended)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install NVM\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\nsource ~/.bashrc\n\n# Install latest Node.js\nnvm install node\nnvm use node\n\n# Install LTS version\nnvm install --lts\nnvm use --lts\n\n# Install specific version\nnvm install v18.17.0\nnvm use v18.17.0</code></pre>\n      </div>\n    </div>\n<h3 id=\"system-package-installation\" class=\"mobile-header\">System Package Installation</h3>\n<p class=\"mobile-paragraph\">#### Ubuntu/Debian</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install build essentials\nsudo apt-get update\nsudo apt-get install -y build-essential\n\n# Add NodeSource repository\ncurl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -\nsudo apt-get install -y nodejs</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### RHEL/CentOS/Fedora</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install development tools\nsudo yum groupinstall &#039;Development Tools&#039;\n\n# Add NodeSource repository  \ncurl -sL https://rpm.nodesource.com/setup_18.x | sudo bash -\nsudo yum install -y nodejs npm</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Arch Linux</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install from official repositories\nsudo pacman -S nodejs npm</code></pre>\n      </div>\n    </div>\n<h2 id=\"configuration\" class=\"mobile-header\">Configuration</h2>\n<h3 id=\"nginx-proxy-setup\" class=\"mobile-header\">NGINX Proxy Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create NGINX configuration\nsudo tee /etc/nginx/sites-available/nodejs-app &gt; /dev/null &lt;&lt;EOF\nserver {\n    listen 80;\n    server_name your-domain.com;\n    \n    location / {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade \\$http_upgrade;\n        proxy_set_header Connection &#039;upgrade&#039;;\n        proxy_set_header Host \\$host;\n        proxy_cache_bypass \\$http_upgrade;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n    }\n}\nEOF\n\n# Enable site\nsudo ln -s /etc/nginx/sites-available/nodejs-app /etc/nginx/sites-enabled/\nsudo nginx -t &amp;&amp; sudo systemctl restart nginx</code></pre>\n      </div>\n    </div>\n<h3 id=\"systemd-service\" class=\"mobile-header\">SystemD Service</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create systemd service for your app\nsudo tee /etc/systemd/system/myapp.service &gt; /dev/null &lt;&lt;EOF\n[Unit]\nDescription=Node.js App\nAfter=network.target\n\n[Service]\nType=simple\nUser=www-data\nWorkingDirectory=/path/to/your/app\nExecStart=/usr/bin/node app.js\nRestart=on-failure\nRestartSec=10\nEnvironment=NODE_ENV=production\nEnvironment=PORT=3000\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Enable and start service\nsudo systemctl daemon-reload\nsudo systemctl enable --now myapp</code></pre>\n      </div>\n    </div>\n<h2 id=\"verification\" class=\"mobile-header\">Verification</h2>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check Node.js version\nnode --version\nnpm --version\n\n# Test basic functionality\nnode -e &quot;console.log(&#039;Node.js is working!&#039;)&quot;\n\n# Check service status (if using systemd)\nsudo systemctl status myapp</code></pre>\n      </div>\n    </div>\n<h2 id=\"usage\" class=\"mobile-header\">Usage</h2>\n<p class=\"mobile-paragraph\">1. Create your Node.js application</p>\n<p class=\"mobile-paragraph\">2. Install dependencies with <code class=\"mobile-inline-code\">npm install</code></p>\n<p class=\"mobile-paragraph\">3. Start development server with <code class=\"mobile-inline-code\">npm start</code> or <code class=\"mobile-inline-code\">node app.js</code></p>\n<p class=\"mobile-paragraph\">4. For production, use PM2 or systemd service</p>\n<p class=\"mobile-paragraph\">5. Configure reverse proxy with NGINX</p>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\"><a href=\"https://nodejs.org/docs/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Official Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://docs.npmjs.com/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">NPM Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://github.com/nvm-sh/nvm\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">NVM GitHub</a></li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection.</p>","readTime":"2 min","wordCount":374,"lastBuilt":"2025-09-14T01:15:30.551Z"},"category":{"key":"infrastructure","name":"Infrastructure","description":"DevOps and infrastructure automation tools","icon":"🏗️","color":"#44475a","keywords":["ansible","terraform","gitlab","jenkins","consul","etcd"]},"relatedGuides":[{"name":".claude","displayName":".claude","slug":".claude","description":"Repo for .claude","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/.claude","updatedAt":"2025-09-08T03:05:59Z","createdAt":"2025-09-08T03:05:48Z","readmeRaw":"## 👋 Welcome to .claude 🚀  \n\n.claude README  \n  \n  \n## Author  \n\n🤖 casjay: [Github](https://github.com/casjay) 🤖  \n","readmeHtml":"<h2 id=\"welcome-to-claude\" class=\"mobile-header\">👋 Welcome to .claude 🚀  </h2>\n<p class=\"mobile-paragraph\">.claude README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">🤖 casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> 🤖  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-14T01:15:35.466Z"},{"name":"adguard-home","displayName":"Adguard Home","slug":"adguard-home","description":"Repo for adguard-home","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/adguard-home","updatedAt":"2025-09-08T03:04:18Z","createdAt":"2025-09-08T03:04:08Z","readmeRaw":"## 👋 Welcome to adguard-home 🚀  \n\nadguard-home README  \n  \n  \n## Author  \n\n🤖 casjay: [Github](https://github.com/casjay) 🤖  \n","readmeHtml":"<h2 id=\"welcome-to-adguard-home\" class=\"mobile-header\">👋 Welcome to adguard-home 🚀  </h2>\n<p class=\"mobile-paragraph\">adguard-home README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">🤖 casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> 🤖  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-14T01:15:36.477Z"},{"name":"adminer","displayName":"Adminer","slug":"adminer","description":"Repo for adminer","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/adminer","updatedAt":"2025-09-08T03:04:32Z","createdAt":"2025-09-08T03:04:22Z","readmeRaw":"## 👋 Welcome to adminer 🚀  \n\nadminer README  \n  \n  \n## Author  \n\n🤖 casjay: [Github](https://github.com/casjay) 🤖  \n","readmeHtml":"<h2 id=\"welcome-to-adminer\" class=\"mobile-header\">👋 Welcome to adminer 🚀  </h2>\n<p class=\"mobile-paragraph\">adminer README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">🤖 casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> 🤖  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-14T01:15:36.353Z"}]},"__N_SSG":true}