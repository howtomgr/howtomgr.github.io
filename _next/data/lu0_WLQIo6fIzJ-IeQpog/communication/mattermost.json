{"pageProps":{"guide":{"name":"mattermost","displayName":"Mattermost","slug":"mattermost","description":"Repo for mattermost","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/mattermost","updatedAt":"2025-09-08T03:10:50Z","createdAt":"2023-08-28T03:48:46Z","readmeRaw":"# Mattermost Installation Guide\n\nSelf-hosted team communication platform with features like team messaging, file sharing, and integrations. An open-source alternative to Slack.\n\n## Prerequisites\n\n- 64-bit Linux system (RHEL 7, CentOS 7, Oracle Linux 7, or Scientific Linux 7)\n- Database server (MySQL 5.7+ or PostgreSQL 9.4+)\n- NGINX proxy server (recommended for production)\n- 4GB RAM minimum, 8GB recommended\n\n## Quick Installation\n\n```bash\n# Download latest Mattermost server\nwget https://releases.mattermost.com/X.X.X/mattermost-X.X.X-linux-amd64.tar.gz\ntar -xvzf mattermost-*.tar.gz\nsudo mv mattermost /opt\n\n# Create storage directory\nsudo mkdir /opt/mattermost/data\n\n# Create system user\nsudo useradd --system --user-group mattermost\nsudo chown -R mattermost:mattermost /opt/mattermost\nsudo chmod -R g+w /opt/mattermost\n```\n\n## Database Setup\n\n### PostgreSQL (Recommended)\n```bash\n# Install PostgreSQL\nsudo yum install postgresql94-server postgresql94-contrib\nsudo /usr/pgsql-9.4/bin/postgresql94-setup initdb\nsudo systemctl enable --now postgresql-9.4\n\n# Create database and user\nsudo -u postgres psql\npostgres=# CREATE DATABASE mattermost;\npostgres=# CREATE USER mmuser WITH PASSWORD 'secure_password';\npostgres=# GRANT ALL PRIVILEGES ON DATABASE mattermost to mmuser;\npostgres=# \\q\n```\n\n### MySQL Alternative\n```bash\n# Install MySQL\nwget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm\nsudo yum localinstall mysql57-community-release-el7-9.noarch.rpm\nsudo yum install mysql-community-server\nsudo systemctl enable --now mysqld\n\n# Configure database\nmysql -u root -p\nmysql> CREATE DATABASE mattermost;\nmysql> CREATE USER 'mmuser'@'%' IDENTIFIED BY 'secure_password';\nmysql> GRANT ALL PRIVILEGES ON mattermost.* TO 'mmuser'@'%';\n```\n\n## Configuration\n\n```bash\n# Configure database connection in /opt/mattermost/config/config.json\n# For PostgreSQL:\n\"DriverName\": \"postgres\",\n\"DataSource\": \"postgres://mmuser:secure_password@localhost:5432/mattermost?sslmode=disable\"\n\n# For MySQL:\n\"DriverName\": \"mysql\",\n\"DataSource\": \"mmuser:secure_password@tcp(localhost:3306)/mattermost?charset=utf8mb4,utf8\"\n```\n\n## System Service Setup\n\n```bash\n# Create systemd service\nsudo tee /etc/systemd/system/mattermost.service > /dev/null <<EOF\n[Unit]\nDescription=Mattermost\nAfter=network.target postgresql-9.4.service\n\n[Service]\nType=notify\nWorkingDirectory=/opt/mattermost\nUser=mattermost\nExecStart=/opt/mattermost/bin/mattermost\nPIDFile=/var/spool/mattermost/pid/master.pid\nTimeoutStartSec=3600\nLimitNOFILE=49152\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Enable and start service\nsudo systemctl daemon-reload\nsudo systemctl enable --now mattermost\n```\n\n## NGINX Proxy Setup (Production)\n\n```bash\n# Install NGINX\nsudo yum install nginx\nsudo systemctl enable --now nginx\n\n# Configure proxy\nsudo tee /etc/nginx/conf.d/mattermost.conf > /dev/null <<'EOF'\nupstream backend {\n   server 127.0.0.1:8065;\n   keepalive 32;\n}\n\nserver {\n   listen 80;\n   server_name your-domain.com;\n   \n   location / {\n       proxy_pass http://backend;\n       proxy_set_header Host $http_host;\n       proxy_set_header X-Real-IP $remote_addr;\n       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n       proxy_set_header X-Forwarded-Proto $scheme;\n   }\n   \n   location ~ /api/v[0-9]+/(users/)?websocket$ {\n       proxy_pass http://backend;\n       proxy_set_header Upgrade $http_upgrade;\n       proxy_set_header Connection \"upgrade\";\n   }\n}\nEOF\n\nsudo nginx -t && sudo systemctl restart nginx\n```\n\n## Verification\n\n```bash\n# Test Mattermost is running\ncurl http://localhost:8065\nsudo systemctl status mattermost\n\n# Check logs if needed\nsudo journalctl -u mattermost -f\n```\n\n## Usage\n\n1. Open browser to `http://your-server-ip:8065` (or your domain if using NGINX)\n2. Create your admin account (first user becomes system admin)\n3. Configure team settings and invite users\n4. Set up integrations and customize as needed\n\n## Additional Resources\n\n- [Official Documentation](https://docs.mattermost.com/)\n- [Mattermost GitHub](https://github.com/mattermost/mattermost-server)\n- [Troubleshooting Guide](https://docs.mattermost.com/install/troubleshooting.html)\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection.","readmeHtml":"<h1 id=\"mattermost-installation-guide\" class=\"mobile-header\">Mattermost Installation Guide</h1>\n<p class=\"mobile-paragraph\">Self-hosted team communication platform with features like team messaging, file sharing, and integrations. An open-source alternative to Slack.</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\">64-bit Linux system (RHEL 7, CentOS 7, Oracle Linux 7, or Scientific Linux 7)</li>\n<li class=\"mobile-list-item\">Database server (MySQL 5.7+ or PostgreSQL 9.4+)</li>\n<li class=\"mobile-list-item\">NGINX proxy server (recommended for production)</li>\n<li class=\"mobile-list-item\">4GB RAM minimum, 8GB recommended</li>\n<h2 id=\"quick-installation\" class=\"mobile-header\">Quick Installation</h2>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Download latest Mattermost server\nwget https://releases.mattermost.com/X.X.X/mattermost-X.X.X-linux-amd64.tar.gz\ntar -xvzf mattermost-*.tar.gz\nsudo mv mattermost /opt\n\n# Create storage directory\nsudo mkdir /opt/mattermost/data\n\n# Create system user\nsudo useradd --system --user-group mattermost\nsudo chown -R mattermost:mattermost /opt/mattermost\nsudo chmod -R g+w /opt/mattermost</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<h3 id=\"postgresql-recommended\" class=\"mobile-header\">PostgreSQL (Recommended)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install PostgreSQL\nsudo yum install postgresql94-server postgresql94-contrib\nsudo /usr/pgsql-9.4/bin/postgresql94-setup initdb\nsudo systemctl enable --now postgresql-9.4\n\n# Create database and user\nsudo -u postgres psql\npostgres=# CREATE DATABASE mattermost;\npostgres=# CREATE USER mmuser WITH PASSWORD &#039;secure_password&#039;;\npostgres=# GRANT ALL PRIVILEGES ON DATABASE mattermost to mmuser;\npostgres=# \\q</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysql-alternative\" class=\"mobile-header\">MySQL Alternative</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install MySQL\nwget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm\nsudo yum localinstall mysql57-community-release-el7-9.noarch.rpm\nsudo yum install mysql-community-server\nsudo systemctl enable --now mysqld\n\n# Configure database\nmysql -u root -p\nmysql&gt; CREATE DATABASE mattermost;\nmysql&gt; CREATE USER &#039;mmuser&#039;@&#039;%&#039; IDENTIFIED BY &#039;secure_password&#039;;\nmysql&gt; GRANT ALL PRIVILEGES ON mattermost.* TO &#039;mmuser&#039;@&#039;%&#039;;</code></pre>\n      </div>\n    </div>\n<h2 id=\"configuration\" class=\"mobile-header\">Configuration</h2>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure database connection in /opt/mattermost/config/config.json\n# For PostgreSQL:\n&quot;DriverName&quot;: &quot;postgres&quot;,\n&quot;DataSource&quot;: &quot;postgres://mmuser:secure_password@localhost:5432/mattermost?sslmode=disable&quot;\n\n# For MySQL:\n&quot;DriverName&quot;: &quot;mysql&quot;,\n&quot;DataSource&quot;: &quot;mmuser:secure_password@tcp(localhost:3306)/mattermost?charset=utf8mb4,utf8&quot;</code></pre>\n      </div>\n    </div>\n<h2 id=\"system-service-setup\" class=\"mobile-header\">System Service Setup</h2>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create systemd service\nsudo tee /etc/systemd/system/mattermost.service &gt; /dev/null &lt;&lt;EOF\n[Unit]\nDescription=Mattermost\nAfter=network.target postgresql-9.4.service\n\n[Service]\nType=notify\nWorkingDirectory=/opt/mattermost\nUser=mattermost\nExecStart=/opt/mattermost/bin/mattermost\nPIDFile=/var/spool/mattermost/pid/master.pid\nTimeoutStartSec=3600\nLimitNOFILE=49152\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Enable and start service\nsudo systemctl daemon-reload\nsudo systemctl enable --now mattermost</code></pre>\n      </div>\n    </div>\n<h2 id=\"nginx-proxy-setup-production\" class=\"mobile-header\">NGINX Proxy Setup (Production)</h2>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install NGINX\nsudo yum install nginx\nsudo systemctl enable --now nginx\n\n# Configure proxy\nsudo tee /etc/nginx/conf.d/mattermost.conf &gt; /dev/null &lt;&lt;&#039;EOF&#039;\nupstream backend {\n   server 127.0.0.1:8065;\n   keepalive 32;\n}\n\nserver {\n   listen 80;\n   server_name your-domain.com;\n   \n   location / {\n       proxy_pass http://backend;\n       proxy_set_header Host $http_host;\n       proxy_set_header X-Real-IP $remote_addr;\n       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n       proxy_set_header X-Forwarded-Proto $scheme;\n   }\n   \n   location ~ /api/v[0-9]+/(users/)?websocket$ {\n       proxy_pass http://backend;\n       proxy_set_header Upgrade $http_upgrade;\n       proxy_set_header Connection &quot;upgrade&quot;;\n   }\n}\nEOF\n\nsudo nginx -t &amp;&amp; sudo systemctl restart nginx</code></pre>\n      </div>\n    </div>\n<h2 id=\"verification\" class=\"mobile-header\">Verification</h2>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Test Mattermost is running\ncurl http://localhost:8065\nsudo systemctl status mattermost\n\n# Check logs if needed\nsudo journalctl -u mattermost -f</code></pre>\n      </div>\n    </div>\n<h2 id=\"usage\" class=\"mobile-header\">Usage</h2>\n<p class=\"mobile-paragraph\">1. Open browser to <code class=\"mobile-inline-code\">http://your-server-ip:8065</code> (or your domain if using NGINX)</p>\n<p class=\"mobile-paragraph\">2. Create your admin account (first user becomes system admin)</p>\n<p class=\"mobile-paragraph\">3. Configure team settings and invite users</p>\n<p class=\"mobile-paragraph\">4. Set up integrations and customize as needed</p>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\"><a href=\"https://docs.mattermost.com/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Official Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://github.com/mattermost/mattermost-server\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Mattermost GitHub</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://docs.mattermost.com/install/troubleshooting.html\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Troubleshooting Guide</a></li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection.</p>","readTime":"3 min","wordCount":445,"lastBuilt":"2025-09-14T01:15:31.987Z"},"category":{"key":"communication","name":"Communication","description":"Team communication and collaboration platforms","icon":"ðŸ’¬","color":"#f1fa8c","keywords":["mattermost","rocketchat","matrix","mastodon","element","jitsi"]},"relatedGuides":[{"name":"element","displayName":"Element","slug":"element","description":"Repo for element","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/element","updatedAt":"2025-09-08T03:07:16Z","createdAt":"2025-09-08T03:07:06Z","readmeRaw":"## ðŸ‘‹ Welcome to element ðŸš€  \n\nelement README  \n  \n  \n## Author  \n\nðŸ¤– casjay: [Github](https://github.com/casjay) ðŸ¤–  \n","readmeHtml":"<h2 id=\"welcome-to-element\" class=\"mobile-header\">ðŸ‘‹ Welcome to element ðŸš€  </h2>\n<p class=\"mobile-paragraph\">element README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">ðŸ¤– casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> ðŸ¤–  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-14T01:15:34.499Z"},{"name":"jitsi","displayName":"Jitsi","slug":"jitsi","description":"Repo for jitsi","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/jitsi","updatedAt":"2025-09-08T03:09:26Z","createdAt":"2025-09-08T03:09:16Z","readmeRaw":"## ðŸ‘‹ Welcome to jitsi ðŸš€  \n\njitsi README  \n  \n  \n## Author  \n\nðŸ¤– casjay: [Github](https://github.com/casjay) ðŸ¤–  \n","readmeHtml":"<h2 id=\"welcome-to-jitsi\" class=\"mobile-header\">ðŸ‘‹ Welcome to jitsi ðŸš€  </h2>\n<p class=\"mobile-paragraph\">jitsi README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">ðŸ¤– casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> ðŸ¤–  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-14T01:15:32.924Z"},{"name":"mastodon","displayName":"Mastodon","slug":"mastodon","description":"Repo for mastodon","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/mastodon","updatedAt":"2025-09-08T03:10:44Z","createdAt":"2023-08-28T03:48:35Z","readmeRaw":"## Mastodon Install guide\n\n```shell\ncurl --silent --location https://rpm.nodesource.com/setup_8.x | bash -  \nwget https://dl.yarnpkg.com/rpm/yarn.repo -O /etc/yum.repos.d/yarn.repo  \nrpm -Uvh https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm  \n  \nwget https://github.com/CasjaysDev/packages/raw/main/rhel/mastodon.txt -O /tmp/mastodon.txt  \nyum install -y $(cat /tmp/mastodon.txt)  \n  \n/usr/pgsql-9.6/bin/postgresql96-setup initdb  \n  \nsystemctl start postgresql-9.6 redis  \nsystemctl enable postgresql-9.6 redis  \n  \nvim /var/lib/pgsql/9.6/data/pg_hba.conf  \n  \n# TYPE  DATABASE        USER            ADDRESS                 METHOD  \n  \n# \"local\" is for Unix domain socket connections only  \nlocal   all             all                                     trust  \n# IPv4 local connections:  \nhost    all             all             127.0.0.1/32            md5  \n# IPv6 local connections:  \nhost    all             all             ::1/128                 md5  \n  \nadduser mastodon  \nsu - mastodon  \ngpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB  \ncurl -sSL https://get.rvm.io | bash -s stable  \nsource /home/mastodon/.rvm/scripts/rvm  \nrvm install 2.5.1  \n  \ngem install bundler  \ncd ~  \ngit clone https://github.com/tootsuite/mastodon.git app  \ncd ~/app  \ngit checkout $(git describe --tags `git rev-list --tags --max-count=1`)  \nbundle config build.pg --with-pg-config=/usr/pgsql-9.6/bin/pg_config  \nbundle install --deployment --without development test  \nexit  \n  \npasswd postgres  \nsu - postgres -c psql  \nCREATE USER mastodon CREATEDB;  \nALTER USER mastodon WITH ENCRYPTED password 'YOURSECUREPASSWORD' CREATEDB;  \n\\q  \n  \nsu - mastodon  \ncd ~/app  \nRAILS_ENV=production bundle exec rake mastodon:setup  \n  \nsu -  \ngit clone https://github.com/casjay-base/howtos /tmp/howtos\ncp -Rfv /tmp/howtos/mastodon/{etc,usr}* /  \n  \nsystemctl daemon-reload  \nsystemctl enable mastodon-web mastodon-queue mastodon-api  \nsystemctl start mastodon-web mastodon-queue mastodon-api  \nsystemctl status mastodon-web mastodon-queue mastodon-api  \n```  \n","readmeHtml":"<h2 id=\"mastodon-install-guide\" class=\"mobile-header\">Mastodon Install guide</h2>\n<div class=\"mobile-code-block\" data-language=\"shell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">shell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-shell\">curl --silent --location https://rpm.nodesource.com/setup_8.x | bash -  \nwget https://dl.yarnpkg.com/rpm/yarn.repo -O /etc/yum.repos.d/yarn.repo  \nrpm -Uvh https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm  \n  \nwget https://github.com/CasjaysDev/packages/raw/main/rhel/mastodon.txt -O /tmp/mastodon.txt  \nyum install -y $(cat /tmp/mastodon.txt)  \n  \n/usr/pgsql-9.6/bin/postgresql96-setup initdb  \n  \nsystemctl start postgresql-9.6 redis  \nsystemctl enable postgresql-9.6 redis  \n  \nvim /var/lib/pgsql/9.6/data/pg_hba.conf  \n  \n# TYPE  DATABASE        USER            ADDRESS                 METHOD  \n  \n# &quot;local&quot; is for Unix domain socket connections only  \nlocal   all             all                                     trust  \n# IPv4 local connections:  \nhost    all             all             127.0.0.1/32            md5  \n# IPv6 local connections:  \nhost    all             all             ::1/128                 md5  \n  \nadduser mastodon  \nsu - mastodon  \ngpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB  \ncurl -sSL https://get.rvm.io | bash -s stable  \nsource /home/mastodon/.rvm/scripts/rvm  \nrvm install 2.5.1  \n  \ngem install bundler  \ncd ~  \ngit clone https://github.com/tootsuite/mastodon.git app  \ncd ~/app  \ngit checkout $(git describe --tags `git rev-list --tags --max-count=1`)  \nbundle config build.pg --with-pg-config=/usr/pgsql-9.6/bin/pg_config  \nbundle install --deployment --without development test  \nexit  \n  \npasswd postgres  \nsu - postgres -c psql  \nCREATE USER mastodon CREATEDB;  \nALTER USER mastodon WITH ENCRYPTED password &#039;YOURSECUREPASSWORD&#039; CREATEDB;  \n\\q  \n  \nsu - mastodon  \ncd ~/app  \nRAILS_ENV=production bundle exec rake mastodon:setup  \n  \nsu -  \ngit clone https://github.com/casjay-base/howtos /tmp/howtos\ncp -Rfv /tmp/howtos/mastodon/{etc,usr}* /  \n  \nsystemctl daemon-reload  \nsystemctl enable mastodon-web mastodon-queue mastodon-api  \nsystemctl start mastodon-web mastodon-queue mastodon-api  \nsystemctl status mastodon-web mastodon-queue mastodon-api  </code></pre>\n      </div>\n    </div>","readTime":"1 min","wordCount":190,"lastBuilt":"2025-09-14T01:15:32.096Z"}]},"__N_SSG":true}