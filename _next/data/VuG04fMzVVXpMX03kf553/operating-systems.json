{"pageProps":{"category":{"key":"operating-systems","name":"Operating systems","description":"Operating systems tools and applications","icon":"ðŸ”§","color":"#6272a4"},"guides":[{"name":"raspbian","displayName":"Raspberry Pi OS Installation Guide","slug":"raspbian","description":"Raspberry Pi OS (formerly Raspbian) is a free and open-source Debian-based operating system optimized for Raspberry Pi hardware. It provides a complete desktop environment and serves as a FOSS alternative to proprietary embedded operating systems, ideal for IoT, education, and hobbyist projects.","category":"operating-systems","subcategory":"arm-linux","difficultyLevel":"beginner","estimatedSetupTime":"30-45 minutes","supportedOS":["raspberry-pi"],"defaultPorts":[22,80,443,5900],"installationMethods":["imager-tool","dd-command","network-boot"],"features":["hardware-optimization","gpio-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["raspberry-pi","arm","debian","education","iot","gpio","embedded"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Various Open Source","websiteUrl":"https://howtomgr.github.io/operating-systems/raspbian","documentationUrl":"https://howtomgr.github.io/operating-systems/raspbian","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/raspbian","updatedAt":"2025-09-16T17:47:04Z","createdAt":"2023-08-28T03:49:55Z","readmeRaw":"# Raspberry Pi OS Installation Guide\n\nRaspberry Pi OS (formerly Raspbian) is a free and open-source operating system based on Debian, optimized for the Raspberry Pi hardware. It's the official operating system for all models of Raspberry Pi and serves as a FOSS alternative to proprietary embedded operating systems, providing a full desktop environment and development platform for ARM-based single-board computers.\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n### Hardware Requirements\n- **Raspberry Pi Models**: Pi 1, 2, 3, 4, 400, Zero, Zero W, Zero 2 W\n- **MicroSD Card**: 8GB minimum (16GB+ recommended)\n- **Power Supply**: \n  - Pi 4: 5V/3A USB-C\n  - Pi 3: 5V/2.5A Micro-USB\n  - Other models: 5V/2A Micro-USB\n- **Display**: HDMI monitor (or headless setup via SSH)\n- **Input**: USB keyboard and mouse (for desktop setup)\n\n### Software Requirements\n- **Raspberry Pi Imager**: Official imaging tool\n- **Alternative**: balenaEtcher, dd command\n- **Computer**: Windows, macOS, or Linux for creating SD card\n\n### Network Requirements\n- Ethernet cable (recommended for initial setup)\n- Or WiFi credentials for wireless setup\n- Internet connection for updates and packages\n\n## 2. Supported Operating Systems\n\nThis guide covers installing Raspberry Pi OS on:\n- Raspberry Pi 4 Model B (1GB, 2GB, 4GB, 8GB)\n- Raspberry Pi 400\n- Raspberry Pi 3 Model B/B+\n- Raspberry Pi 3 Model A+\n- Raspberry Pi 2 Model B\n- Raspberry Pi 1 Model B+/A+\n- Raspberry Pi Zero W/WH\n- Raspberry Pi Zero 2 W\n- Compute Module 3/3+/4\n\nAvailable editions:\n- **Raspberry Pi OS with desktop and recommended software** (Full)\n- **Raspberry Pi OS with desktop** (Standard)\n- **Raspberry Pi OS Lite** (Minimal, no desktop)\n- **Raspberry Pi OS (64-bit)** (For Pi 3/4/400/Zero 2)\n\n## 3. Installation\n\n### Method 1: Using Raspberry Pi Imager (Recommended)\n\n#### On Windows\n\n1. **Download Raspberry Pi Imager**:\n```powershell\n# Download from official website\nStart-Process \"https://www.raspberrypi.com/software/\"\n\n# Or using winget\nwinget install RaspberryPiFoundation.RaspberryPiImager\n```\n\n2. **Run Imager and write image**:\n   - Insert MicroSD card\n   - Choose OS â†’ Raspberry Pi OS (32/64-bit)\n   - Choose Storage â†’ Select your SD card\n   - Click Settings gear for advanced options\n   - Write the image\n\n#### On macOS\n\n```bash\n# Install using Homebrew\nbrew install --cask raspberry-pi-imager\n\n# Or download DMG from website\ncurl -L https://downloads.raspberrypi.org/imager/imager_latest.dmg -o rpi-imager.dmg\nopen rpi-imager.dmg\n```\n\n#### On Linux\n\n```bash\n# Debian/Ubuntu\nsudo apt update\nsudo apt install -y rpi-imager\n\n# Arch Linux\nyay -S rpi-imager\n\n# Fedora\nsudo dnf install -y rpi-imager\n\n# Or use AppImage\nwget https://downloads.raspberrypi.org/imager/imager_latest_amd64.AppImage\nchmod +x imager_latest_amd64.AppImage\n./imager_latest_amd64.AppImage\n```\n\n### Method 2: Manual Installation using dd\n\n1. **Download Raspberry Pi OS image**:\n```bash\n# Latest 32-bit with desktop\nwget https://downloads.raspberrypi.org/raspios_armhf/images/raspios_armhf-2024-03-15/2024-03-15-raspios-bookworm-armhf.img.xz\n\n# Latest 64-bit with desktop\nwget https://downloads.raspberrypi.org/raspios_arm64/images/raspios_arm64-2024-03-15/2024-03-15-raspios-bookworm-arm64.img.xz\n\n# Latest Lite version (no desktop)\nwget https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2024-03-15/2024-03-15-raspios-bookworm-armhf-lite.img.xz\n\n# Extract image\nxz -d *.img.xz\n```\n\n2. **Write image to SD card**:\n```bash\n# Find SD card device\nlsblk\n# or\nsudo fdisk -l\n\n# Write image (replace /dev/sdX with your device)\nsudo dd if=2024-03-15-raspios-bookworm-armhf.img of=/dev/sdX bs=4M status=progress conv=fsync\n\n# Sync and safely remove\nsync\nsudo eject /dev/sdX\n```\n\n### Pre-boot Configuration (Headless Setup)\n\n1. **Enable SSH**:\n```bash\n# Mount the boot partition\nmkdir -p /mnt/boot\nsudo mount /dev/sdX1 /mnt/boot\n\n# Enable SSH\nsudo touch /mnt/boot/ssh\n```\n\n2. **Configure WiFi**:\n```bash\n# Create wpa_supplicant.conf\ncat << 'EOF' | sudo tee /mnt/boot/wpa_supplicant.conf\ncountry=US\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nap_scan=1\nupdate_config=1\n\nnetwork={\n    ssid=\"YourWiFiSSID\"\n    psk=\"YourWiFiPassword\"\n    key_mgmt=WPA-PSK\n}\nEOF\n```\n\n3. **Configure user (Raspberry Pi OS Bookworm)**:\n```bash\n# Create userconf.txt with username:encrypted-password\necho 'myusername:$6$salt$encryptedpassword' | sudo tee /mnt/boot/userconf.txt\n\n# Generate encrypted password\nopenssl passwd -6\n```\n\n4. **Unmount**:\n```bash\nsudo umount /mnt/boot\n```\n\n## 4. Configuration\n\n### First Boot Setup\n\n1. **Connect and power on**:\n   - Insert SD card into Raspberry Pi\n   - Connect display, keyboard, mouse (or use SSH for headless)\n   - Connect Ethernet or ensure WiFi is configured\n   - Connect power supply\n\n2. **Initial configuration wizard** (Desktop version):\n   - Set country, language, timezone\n   - Change default password\n   - Select WiFi network\n   - Update software\n   - Restart when prompted\n\n3. **Headless SSH access**:\n```bash\n# Find Raspberry Pi IP address\n# From router DHCP list or:\nnmap -sn 192.168.1.0/24\n\n# SSH to Raspberry Pi\nssh pi@raspberrypi.local\n# or\nssh pi@192.168.1.XXX\n\n# Default credentials (older versions):\n# Username: pi\n# Password: raspberry\n```\n\n### System Configuration Tool\n\n```bash\n# Run configuration tool\nsudo raspi-config\n\n# Key settings:\n# 1. System Options\n#    - Hostname\n#    - Password\n#    - Boot/Auto Login\n# 2. Display Options\n#    - Resolution\n#    - Underscan\n# 3. Interface Options\n#    - SSH\n#    - VNC\n#    - SPI, I2C, Serial\n#    - Camera\n# 4. Performance Options\n#    - Overclock\n#    - GPU Memory Split\n# 5. Localization Options\n#    - Locale\n#    - Timezone\n#    - Keyboard\n# 6. Advanced Options\n#    - Expand Filesystem\n#    - Network Interface Names\n```\n\n### Network Configuration\n\n**Static IP Configuration**:\n```bash\n# Edit dhcpcd.conf\nsudo nano /etc/dhcpcd.conf\n\n# Add for eth0:\ninterface eth0\nstatic ip_address=192.168.1.100/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1 8.8.8.8\n\n# Add for wlan0:\ninterface wlan0\nstatic ip_address=192.168.1.101/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1 8.8.8.8\n\n# Restart networking\nsudo systemctl restart dhcpcd\n```\n\n### Update System\n\n```bash\n# Update package lists\nsudo apt update\n\n# Upgrade packages\nsudo apt full-upgrade -y\n\n# Update firmware\nsudo rpi-update\n\n# Clean up\nsudo apt autoremove -y\nsudo apt autoclean\n\n# Reboot if kernel was updated\nsudo reboot\n```\n\n## 5. Service Management\n\n### systemd Services\n\n```bash\n# Enable/disable services\nsudo systemctl enable ssh\nsudo systemctl enable vncserver-x11-serviced\nsudo systemctl disable bluetooth\n\n# Start/stop services\nsudo systemctl start ssh\nsudo systemctl stop bluetooth\n\n# Check service status\nsudo systemctl status ssh\n\n# List all services\nsystemctl list-units --type=service\n```\n\n### Common Services\n\n1. **SSH Server**:\n```bash\n# Enable SSH\nsudo systemctl enable --now ssh\n\n# Configure SSH\nsudo nano /etc/ssh/sshd_config\n# Change: PermitRootLogin no\n# Add: AllowUsers yourusername\n\nsudo systemctl restart ssh\n```\n\n2. **VNC Server**:\n```bash\n# Enable VNC\nsudo raspi-config\n# Navigate to: Interface Options â†’ VNC â†’ Yes\n\n# Or via command line\nsudo systemctl enable --now vncserver-x11-serviced\n```\n\n3. **GPIO Services**:\n```bash\n# Install GPIO tools\nsudo apt install -y python3-gpiozero pigpio\n\n# Enable pigpio daemon\nsudo systemctl enable --now pigpiod\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **No display output**:\n```bash\n# Edit config.txt on boot partition\n# Add or modify:\nhdmi_force_hotplug=1\nhdmi_drive=2\nhdmi_group=2\nhdmi_mode=82  # 1080p 60Hz\n\n# For Pi 4 with dual displays:\nhdmi_force_hotplug:0=1\nhdmi_force_hotplug:1=1\n```\n\n2. **SD card corruption**:\n```bash\n# Check filesystem\nsudo fsck /dev/mmcblk0p2\n\n# Enable filesystem check on boot\nsudo touch /forcefsck\n```\n\n3. **Network issues**:\n```bash\n# Check interfaces\nip addr show\nifconfig\n\n# Restart networking\nsudo systemctl restart dhcpcd\nsudo systemctl restart networking\n\n# Check WiFi\niwconfig\nsudo iwlist wlan0 scan\n```\n\n4. **Boot problems** (Rainbow screen):\n   - Insufficient power supply\n   - Corrupted boot files\n   - Incompatible SD card\n\n### Recovery Mode\n\n1. **Hold Shift during boot** for recovery menu\n2. **Edit cmdline.txt** on another computer:\n```bash\n# Add to end of line:\ninit=/bin/sh\n\n# Boot and remount root\nmount -o remount,rw /\n# Fix issues, then:\nsync\nreboot -f\n```\n\n### Debug Information\n\n```bash\n# System information\ncat /proc/cpuinfo\nvcgencmd measure_temp\nvcgencmd get_throttled\n\n# Boot messages\ndmesg | grep -i error\njournalctl -xe\n\n# Hardware info\nsudo hwinfo --short\nlsusb\nlsblk\n```\n\n## 7. Security Considerations\n\n### Basic Security\n\n1. **Change default password**:\n```bash\npasswd\n# Or for another user:\nsudo passwd username\n```\n\n2. **Create new user and disable pi user**:\n```bash\n# Add new user\nsudo adduser myusername\nsudo usermod -aG sudo,adm,dialout,cdrom,audio,video,plugdev,games,users,input,netdev,spi,i2c,gpio myusername\n\n# Test sudo access\nsu - myusername\nsudo whoami\n\n# Disable pi user\nsudo usermod -L pi\n# Or delete:\nsudo deluser --remove-home pi\n```\n\n3. **SSH security**:\n```bash\n# Generate SSH keys (on client)\nssh-keygen -t ed25519 -C \"pi@raspberrypi\"\n\n# Copy to Pi\nssh-copy-id myusername@raspberrypi.local\n\n# Disable password authentication\nsudo nano /etc/ssh/sshd_config\n# Set: PasswordAuthentication no\nsudo systemctl restart ssh\n```\n\n### Firewall Configuration\n\n```bash\n# Install ufw\nsudo apt install -y ufw\n\n# Configure rules\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nsudo ufw allow ssh\nsudo ufw allow 80/tcp\nsudo ufw allow 443/tcp\n\n# Enable firewall\nsudo ufw enable\nsudo ufw status\n```\n\n### Automatic Updates\n\n```bash\n# Install unattended-upgrades\nsudo apt install -y unattended-upgrades\n\n# Configure\nsudo dpkg-reconfigure --priority=low unattended-upgrades\n\n# Edit configuration\nsudo nano /etc/apt/apt.conf.d/50unattended-upgrades\n```\n\n## 8. Performance Tuning\n\n### Overclocking\n\n```bash\n# Edit config.txt\nsudo nano /boot/config.txt\n\n# Pi 4 example:\nover_voltage=6\narm_freq=2147\ngpu_freq=750\n\n# Pi 3B+ example:\narm_freq=1500\ngpu_freq=600\nover_voltage=4\nsdram_freq=560\n\n# Monitor temperature\nwatch -n 1 vcgencmd measure_temp\n```\n\n### Memory Split\n\n```bash\n# Configure GPU memory\nsudo raspi-config\n# Advanced Options â†’ Memory Split\n\n# Or edit directly:\ngpu_mem=128  # For headless\ngpu_mem=256  # For desktop use\ngpu_mem=512  # For GPU-intensive tasks\n```\n\n### Boot Optimization\n\n```bash\n# Disable unnecessary services\nsudo systemctl disable bluetooth\nsudo systemctl disable avahi-daemon\nsudo systemctl disable triggerhappy\nsudo systemctl disable rsyslog\n\n# For headless:\nsudo systemctl disable lightdm\nsudo systemctl disable plymouth\n```\n\n### Storage Optimization\n\n1. **Move to USB boot** (Pi 4):\n```bash\n# Update bootloader\nsudo rpi-eeprom-update -d -a\n\n# Enable USB boot\nsudo raspi-config\n# Advanced Options â†’ Boot Order â†’ USB Boot\n```\n\n2. **Use faster SD cards**: A1/A2 rated cards\n\n3. **Enable TRIM for SSDs**:\n```bash\nsudo systemctl enable fstrim.timer\n```\n\n## 9. Backup and Restore\n\n### Full SD Card Backup\n\n```bash\n#!/bin/bash\n# backup-pi.sh\n\n# On the Pi\nsudo dd if=/dev/mmcblk0 bs=4M | gzip | ssh user@backupserver 'cat > pi-backup-$(date +%Y%m%d).img.gz'\n\n# From another Linux system\nsudo dd if=/dev/sdX bs=4M | gzip > pi-backup-$(date +%Y%m%d).img.gz\n\n# Restore\ngunzip -c pi-backup.img.gz | sudo dd of=/dev/sdX bs=4M conv=fsync\n```\n\n### Incremental Backup with rsync\n\n```bash\n#!/bin/bash\n# Create backup script\ncat << 'EOF' > /home/pi/backup.sh\n#!/bin/bash\nBACKUP_DIR=\"/mnt/backup/pi-backup\"\nEXCLUDE_FILE=\"/home/pi/.backup-exclude\"\n\n# Create exclude file\ncat << 'EXCLUDES' > $EXCLUDE_FILE\n/proc/*\n/sys/*\n/dev/*\n/tmp/*\n/run/*\n/mnt/*\n/media/*\n/lost+found\nEXCLUDES\n\n# Run backup\nrsync -aAXv --delete \\\n    --exclude-from=$EXCLUDE_FILE \\\n    / $BACKUP_DIR/\n\n# Create timestamp\ndate > $BACKUP_DIR/last-backup.txt\nEOF\n\nchmod +x /home/pi/backup.sh\n\n# Add to crontab\n(crontab -l 2>/dev/null; echo \"0 2 * * * /home/pi/backup.sh\") | crontab -\n```\n\n### Using rpi-clone\n\n```bash\n# Install rpi-clone\ngit clone https://github.com/billw2/rpi-clone.git\ncd rpi-clone\nsudo cp rpi-clone /usr/local/sbin\n\n# Clone to another SD card\nsudo rpi-clone sda\n\n# Clone with options\nsudo rpi-clone -f -p 256M sda\n```\n\n## 10. System Requirements\n\n### By Model\n\n| Model | RAM | CPU | Recommended Use |\n|-------|-----|-----|-----------------|\n| Pi 4 B | 1-8GB | 4x 1.5GHz | Desktop, Server |\n| Pi 400 | 4GB | 4x 1.8GHz | Desktop |\n| Pi 3 B+ | 1GB | 4x 1.4GHz | IoT, Light Desktop |\n| Pi Zero 2 W | 512MB | 4x 1GHz | IoT, Embedded |\n| Pi Zero W | 512MB | 1x 1GHz | Basic IoT |\n\n### OS Requirements\n\n- **Full Desktop**: 2GB+ RAM, 16GB+ SD card\n- **Desktop**: 1GB+ RAM, 8GB+ SD card  \n- **Lite**: 512MB+ RAM, 4GB+ SD card\n\n## 11. Support\n\n### Official Resources\n- **Website**: https://www.raspberrypi.com/\n- **Documentation**: https://www.raspberrypi.com/documentation/\n- **Forums**: https://www.raspberrypi.org/forums/\n- **GitHub**: https://github.com/raspberrypi\n\n### Community Support\n- **Reddit**: r/raspberry_pi\n- **Discord**: Various Raspberry Pi servers\n- **Stack Exchange**: raspberrypi.stackexchange.com\n- **MagPi Magazine**: Free monthly magazine\n\n## 12. Contributing\n\n### How to Contribute\n1. Report issues on GitHub\n2. Submit pull requests\n3. Write documentation\n4. Create tutorials\n5. Help in forums\n\n### Development\n```bash\n# Clone documentation\ngit clone https://github.com/raspberrypi/documentation.git\n\n# Clone firmware\ngit clone https://github.com/raspberrypi/firmware.git\n\n# Clone kernel\ngit clone --depth=1 https://github.com/raspberrypi/linux.git\n```\n\n## 13. License\n\nRaspberry Pi OS is based on Debian and includes:\n- **Base System**: Various open source licenses\n- **Raspberry Pi Firmware**: Custom license\n- **Software Packages**: Individual licenses\n\nKey components:\n- Linux kernel: GPLv2\n- Debian packages: Various DFSG-compliant licenses\n- Raspberry Pi tools: BSD-3-Clause\n\n## 14. Acknowledgments\n\n### Credits\n- **Raspberry Pi Foundation**: Creating affordable computing\n- **Debian Project**: Base operating system\n- **Community Contributors**: Thousands of developers\n- **Educational Partners**: Schools and makers worldwide\n\n## 15. Version History\n\n### Current Releases\n- **Bookworm**: Based on Debian 12 (Current)\n- **Bullseye**: Based on Debian 11 (Legacy)\n- **Buster**: Based on Debian 10 (Old Stable)\n\n### Release Schedule\n- Major releases: Following Debian releases\n- Updates: Monthly security and bug fixes\n- Kernel updates: Regular updates via rpi-update\n\n## 16. Appendices\n\n### A. GPIO Pinout Reference\n\n```\n   3V3  (1) (2)  5V\n GPIO2  (3) (4)  5V\n GPIO3  (5) (6)  GND\n GPIO4  (7) (8)  GPIO14\n   GND  (9) (10) GPIO15\nGPIO17 (11) (12) GPIO18\nGPIO27 (13) (14) GND\nGPIO22 (15) (16) GPIO23\n   3V3 (17) (18) GPIO24\nGPIO10 (19) (20) GND\n GPIO9 (21) (22) GPIO25\nGPIO11 (23) (24) GPIO8\n   GND (25) (26) GPIO7\n GPIO0 (27) (28) GPIO1\n GPIO5 (29) (30) GND\n GPIO6 (31) (32) GPIO12\nGPIO13 (33) (34) GND\nGPIO19 (35) (36) GPIO16\nGPIO26 (37) (38) GPIO20\n   GND (39) (40) GPIO21\n```\n\n### B. Common Commands\n\n```bash\n# System info\nuname -a\ncat /etc/os-release\nvcgencmd version\n\n# Temperature and voltage\nvcgencmd measure_temp\nvcgencmd measure_volts\nvcgencmd get_throttled\n\n# Memory info\nfree -h\nvcgencmd get_mem arm\nvcgencmd get_mem gpu\n\n# GPIO control\ngpio readall\npinout\n\n# Camera module\nvcgencmd get_camera\nraspistill -o test.jpg\nraspivid -o test.h264 -t 10000\n```\n\n### C. Useful Tools\n\n```bash\n# Install development tools\nsudo apt install -y \\\n    build-essential \\\n    git \\\n    python3-dev \\\n    python3-pip \\\n    python3-gpiozero \\\n    python3-picamera2 \\\n    nodejs \\\n    npm\n\n# Install utility tools\nsudo apt install -y \\\n    htop \\\n    iotop \\\n    nmap \\\n    screen \\\n    tmux \\\n    vim \\\n    curl \\\n    wget\n```\n\n### D. Example Projects\n\n1. **GPIO LED Blink**:\n```python\n#!/usr/bin/env python3\nfrom gpiozero import LED\nfrom time import sleep\n\nled = LED(17)\nwhile True:\n    led.on()\n    sleep(1)\n    led.off()\n    sleep(1)\n```\n\n2. **Temperature Monitor**:\n```bash\n#!/bin/bash\nwhile true; do\n    temp=$(vcgencmd measure_temp | cut -d= -f2)\n    echo \"$(date): $temp\"\n    sleep 60\ndone\n```\n\n---\n\nFor more detailed information and updates, visit https://github.com/howtomgr/raspbian","readmeHtml":"<p class=\"mobile-paragraph\">Raspberry Pi OS (formerly Raspbian) is a free and open-source operating system based on Debian, optimized for the Raspberry Pi hardware. It's the official operating system for all models of Raspberry Pi and serves as a FOSS alternative to proprietary embedded operating systems, providing a full desktop environment and development platform for ARM-based single-board computers.</p>\n<h2 id=\"table-of-contents\" class=\"mobile-header\">Table of Contents</h2>\n<p class=\"mobile-paragraph\">1. <a href=\"#prerequisites\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Prerequisites</a></p>\n<p class=\"mobile-paragraph\">2. <a href=\"#supported-operating-systems\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Supported Operating Systems</a></p>\n<p class=\"mobile-paragraph\">3. <a href=\"#installation\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Installation</a></p>\n<p class=\"mobile-paragraph\">4. <a href=\"#configuration\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Configuration</a></p>\n<p class=\"mobile-paragraph\">5. <a href=\"#service-management\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Service Management</a></p>\n<p class=\"mobile-paragraph\">6. <a href=\"#troubleshooting\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Troubleshooting</a></p>\n<p class=\"mobile-paragraph\">7. <a href=\"#security-considerations\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Security Considerations</a></p>\n<p class=\"mobile-paragraph\">8. <a href=\"#performance-tuning\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Performance Tuning</a></p>\n<p class=\"mobile-paragraph\">9. <a href=\"#backup-and-restore\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Backup and Restore</a></p>\n<p class=\"mobile-paragraph\">10. <a href=\"#system-requirements\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">System Requirements</a></p>\n<p class=\"mobile-paragraph\">11. <a href=\"#support\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Support</a></p>\n<p class=\"mobile-paragraph\">12. <a href=\"#contributing\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Contributing</a></p>\n<p class=\"mobile-paragraph\">13. <a href=\"#license\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">License</a></p>\n<p class=\"mobile-paragraph\">14. <a href=\"#acknowledgments\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Acknowledgments</a></p>\n<p class=\"mobile-paragraph\">15. <a href=\"#version-history\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Version History</a></p>\n<p class=\"mobile-paragraph\">16. <a href=\"#appendices\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Appendices</a></p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<h3 id=\"hardware-requirements\" class=\"mobile-header\">Hardware Requirements</h3>\n<li class=\"mobile-list-item\"><strong>Raspberry Pi Models</strong>: Pi 1, 2, 3, 4, 400, Zero, Zero W, Zero 2 W</li>\n<li class=\"mobile-list-item\"><strong>MicroSD Card</strong>: 8GB minimum (16GB+ recommended)</li>\n<li class=\"mobile-list-item\"><strong>Power Supply</strong>: </li>\n<li class=\"mobile-list-item\">Pi 4: 5V/3A USB-C</li>\n<li class=\"mobile-list-item\">Pi 3: 5V/2.5A Micro-USB</li>\n<li class=\"mobile-list-item\">Other models: 5V/2A Micro-USB</li>\n<li class=\"mobile-list-item\"><strong>Display</strong>: HDMI monitor (or headless setup via SSH)</li>\n<li class=\"mobile-list-item\"><strong>Input</strong>: USB keyboard and mouse (for desktop setup)</li>\n<h3 id=\"software-requirements\" class=\"mobile-header\">Software Requirements</h3>\n<li class=\"mobile-list-item\"><strong>Raspberry Pi Imager</strong>: Official imaging tool</li>\n<li class=\"mobile-list-item\"><strong>Alternative</strong>: balenaEtcher, dd command</li>\n<li class=\"mobile-list-item\"><strong>Computer</strong>: Windows, macOS, or Linux for creating SD card</li>\n<h3 id=\"network-requirements\" class=\"mobile-header\">Network Requirements</h3>\n<li class=\"mobile-list-item\">Ethernet cable (recommended for initial setup)</li>\n<li class=\"mobile-list-item\">Or WiFi credentials for wireless setup</li>\n<li class=\"mobile-list-item\">Internet connection for updates and packages</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide covers installing Raspberry Pi OS on:</p>\n<li class=\"mobile-list-item\">Raspberry Pi 4 Model B (1GB, 2GB, 4GB, 8GB)</li>\n<li class=\"mobile-list-item\">Raspberry Pi 400</li>\n<li class=\"mobile-list-item\">Raspberry Pi 3 Model B/B+</li>\n<li class=\"mobile-list-item\">Raspberry Pi 3 Model A+</li>\n<li class=\"mobile-list-item\">Raspberry Pi 2 Model B</li>\n<li class=\"mobile-list-item\">Raspberry Pi 1 Model B+/A+</li>\n<li class=\"mobile-list-item\">Raspberry Pi Zero W/WH</li>\n<li class=\"mobile-list-item\">Raspberry Pi Zero 2 W</li>\n<li class=\"mobile-list-item\">Compute Module 3/3+/4</li>\n<p class=\"mobile-paragraph\">Available editions:</p>\n<li class=\"mobile-list-item\"><strong>Raspberry Pi OS with desktop and recommended software</strong> (Full)</li>\n<li class=\"mobile-list-item\"><strong>Raspberry Pi OS with desktop</strong> (Standard)</li>\n<li class=\"mobile-list-item\"><strong>Raspberry Pi OS Lite</strong> (Minimal, no desktop)</li>\n<li class=\"mobile-list-item\"><strong>Raspberry Pi OS (64-bit)</strong> (For Pi 3/4/400/Zero 2)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"method-1-using-raspberry-pi-imager-recommended\" class=\"mobile-header\">Method 1: Using Raspberry Pi Imager (Recommended)</h3>\n<p class=\"mobile-paragraph\">#### On Windows</p>\n<p class=\"mobile-paragraph\">1. <strong>Download Raspberry Pi Imager</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Download from official website\nStart-Process &quot;https://www.raspberrypi.com/software/&quot;\n\n# Or using winget\nwinget install RaspberryPiFoundation.RaspberryPiImager</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Run Imager and write image</strong>:</p>\n<li class=\"mobile-list-item\">Insert MicroSD card</li>\n<li class=\"mobile-list-item\">Choose OS â†’ Raspberry Pi OS (32/64-bit)</li>\n<li class=\"mobile-list-item\">Choose Storage â†’ Select your SD card</li>\n<li class=\"mobile-list-item\">Click Settings gear for advanced options</li>\n<li class=\"mobile-list-item\">Write the image</li>\n<p class=\"mobile-paragraph\">#### On macOS</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install using Homebrew\nbrew install --cask raspberry-pi-imager\n\n# Or download DMG from website\ncurl -L https://downloads.raspberrypi.org/imager/imager_latest.dmg -o rpi-imager.dmg\nopen rpi-imager.dmg</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### On Linux</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Debian/Ubuntu\nsudo apt update\nsudo apt install -y rpi-imager\n\n# Arch Linux\nyay -S rpi-imager\n\n# Fedora\nsudo dnf install -y rpi-imager\n\n# Or use AppImage\nwget https://downloads.raspberrypi.org/imager/imager_latest_amd64.AppImage\nchmod +x imager_latest_amd64.AppImage\n./imager_latest_amd64.AppImage</code></pre>\n      </div>\n    </div>\n<h3 id=\"method-2-manual-installation-using-dd\" class=\"mobile-header\">Method 2: Manual Installation using dd</h3>\n<p class=\"mobile-paragraph\">1. <strong>Download Raspberry Pi OS image</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Latest 32-bit with desktop\nwget https://downloads.raspberrypi.org/raspios_armhf/images/raspios_armhf-2024-03-15/2024-03-15-raspios-bookworm-armhf.img.xz\n\n# Latest 64-bit with desktop\nwget https://downloads.raspberrypi.org/raspios_arm64/images/raspios_arm64-2024-03-15/2024-03-15-raspios-bookworm-arm64.img.xz\n\n# Latest Lite version (no desktop)\nwget https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2024-03-15/2024-03-15-raspios-bookworm-armhf-lite.img.xz\n\n# Extract image\nxz -d *.img.xz</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Write image to SD card</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Find SD card device\nlsblk\n# or\nsudo fdisk -l\n\n# Write image (replace /dev/sdX with your device)\nsudo dd if=2024-03-15-raspios-bookworm-armhf.img of=/dev/sdX bs=4M status=progress conv=fsync\n\n# Sync and safely remove\nsync\nsudo eject /dev/sdX</code></pre>\n      </div>\n    </div>\n<h3 id=\"pre-boot-configuration-headless-setup\" class=\"mobile-header\">Pre-boot Configuration (Headless Setup)</h3>\n<p class=\"mobile-paragraph\">1. <strong>Enable SSH</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Mount the boot partition\nmkdir -p /mnt/boot\nsudo mount /dev/sdX1 /mnt/boot\n\n# Enable SSH\nsudo touch /mnt/boot/ssh</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Configure WiFi</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create wpa_supplicant.conf\ncat &lt;&lt; &#039;EOF&#039; | sudo tee /mnt/boot/wpa_supplicant.conf\ncountry=US\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nap_scan=1\nupdate_config=1\n\nnetwork={\n    ssid=&quot;YourWiFiSSID&quot;\n    psk=&quot;YourWiFiPassword&quot;\n    key_mgmt=WPA-PSK\n}\nEOF</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Configure user (Raspberry Pi OS Bookworm)</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create userconf.txt with username:encrypted-password\necho &#039;myusername:$6$salt$encryptedpassword&#039; | sudo tee /mnt/boot/userconf.txt\n\n# Generate encrypted password\nopenssl passwd -6</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">4. <strong>Unmount</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo umount /mnt/boot</code></pre>\n      </div>\n    </div>\n<h2 id=\"4-configuration\" class=\"mobile-header\">4. Configuration</h2>\n<h3 id=\"first-boot-setup\" class=\"mobile-header\">First Boot Setup</h3>\n<p class=\"mobile-paragraph\">1. <strong>Connect and power on</strong>:</p>\n<li class=\"mobile-list-item\">Insert SD card into Raspberry Pi</li>\n<li class=\"mobile-list-item\">Connect display, keyboard, mouse (or use SSH for headless)</li>\n<li class=\"mobile-list-item\">Connect Ethernet or ensure WiFi is configured</li>\n<li class=\"mobile-list-item\">Connect power supply</li>\n<p class=\"mobile-paragraph\">2. <strong>Initial configuration wizard</strong> (Desktop version):</p>\n<li class=\"mobile-list-item\">Set country, language, timezone</li>\n<li class=\"mobile-list-item\">Change default password</li>\n<li class=\"mobile-list-item\">Select WiFi network</li>\n<li class=\"mobile-list-item\">Update software</li>\n<li class=\"mobile-list-item\">Restart when prompted</li>\n<p class=\"mobile-paragraph\">3. <strong>Headless SSH access</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Find Raspberry Pi IP address\n# From router DHCP list or:\nnmap -sn 192.168.1.0/24\n\n# SSH to Raspberry Pi\nssh pi@raspberrypi.local\n# or\nssh pi@192.168.1.XXX\n\n# Default credentials (older versions):\n# Username: pi\n# Password: raspberry</code></pre>\n      </div>\n    </div>\n<h3 id=\"system-configuration-tool\" class=\"mobile-header\">System Configuration Tool</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Run configuration tool\nsudo raspi-config\n\n# Key settings:\n# 1. System Options\n#    - Hostname\n#    - Password\n#    - Boot/Auto Login\n# 2. Display Options\n#    - Resolution\n#    - Underscan\n# 3. Interface Options\n#    - SSH\n#    - VNC\n#    - SPI, I2C, Serial\n#    - Camera\n# 4. Performance Options\n#    - Overclock\n#    - GPU Memory Split\n# 5. Localization Options\n#    - Locale\n#    - Timezone\n#    - Keyboard\n# 6. Advanced Options\n#    - Expand Filesystem\n#    - Network Interface Names</code></pre>\n      </div>\n    </div>\n<h3 id=\"network-configuration\" class=\"mobile-header\">Network Configuration</h3>\n<p class=\"mobile-paragraph\"><strong>Static IP Configuration</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Edit dhcpcd.conf\nsudo nano /etc/dhcpcd.conf\n\n# Add for eth0:\ninterface eth0\nstatic ip_address=192.168.1.100/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1 8.8.8.8\n\n# Add for wlan0:\ninterface wlan0\nstatic ip_address=192.168.1.101/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1 8.8.8.8\n\n# Restart networking\nsudo systemctl restart dhcpcd</code></pre>\n      </div>\n    </div>\n<h3 id=\"update-system\" class=\"mobile-header\">Update System</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package lists\nsudo apt update\n\n# Upgrade packages\nsudo apt full-upgrade -y\n\n# Update firmware\nsudo rpi-update\n\n# Clean up\nsudo apt autoremove -y\nsudo apt autoclean\n\n# Reboot if kernel was updated\nsudo reboot</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-services\" class=\"mobile-header\">systemd Services</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable/disable services\nsudo systemctl enable ssh\nsudo systemctl enable vncserver-x11-serviced\nsudo systemctl disable bluetooth\n\n# Start/stop services\nsudo systemctl start ssh\nsudo systemctl stop bluetooth\n\n# Check service status\nsudo systemctl status ssh\n\n# List all services\nsystemctl list-units --type=service</code></pre>\n      </div>\n    </div>\n<h3 id=\"common-services\" class=\"mobile-header\">Common Services</h3>\n<p class=\"mobile-paragraph\">1. <strong>SSH Server</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable SSH\nsudo systemctl enable --now ssh\n\n# Configure SSH\nsudo nano /etc/ssh/sshd_config\n# Change: PermitRootLogin no\n# Add: AllowUsers yourusername\n\nsudo systemctl restart ssh</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>VNC Server</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable VNC\nsudo raspi-config\n# Navigate to: Interface Options â†’ VNC â†’ Yes\n\n# Or via command line\nsudo systemctl enable --now vncserver-x11-serviced</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>GPIO Services</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install GPIO tools\nsudo apt install -y python3-gpiozero pigpio\n\n# Enable pigpio daemon\nsudo systemctl enable --now pigpiod</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>No display output</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Edit config.txt on boot partition\n# Add or modify:\nhdmi_force_hotplug=1\nhdmi_drive=2\nhdmi_group=2\nhdmi_mode=82  # 1080p 60Hz\n\n# For Pi 4 with dual displays:\nhdmi_force_hotplug:0=1\nhdmi_force_hotplug:1=1</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>SD card corruption</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check filesystem\nsudo fsck /dev/mmcblk0p2\n\n# Enable filesystem check on boot\nsudo touch /forcefsck</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Network issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check interfaces\nip addr show\nifconfig\n\n# Restart networking\nsudo systemctl restart dhcpcd\nsudo systemctl restart networking\n\n# Check WiFi\niwconfig\nsudo iwlist wlan0 scan</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">4. <strong>Boot problems</strong> (Rainbow screen):</p>\n<li class=\"mobile-list-item\">Insufficient power supply</li>\n<li class=\"mobile-list-item\">Corrupted boot files</li>\n<li class=\"mobile-list-item\">Incompatible SD card</li>\n<h3 id=\"recovery-mode\" class=\"mobile-header\">Recovery Mode</h3>\n<p class=\"mobile-paragraph\">1. <strong>Hold Shift during boot</strong> for recovery menu</p>\n<p class=\"mobile-paragraph\">2. <strong>Edit cmdline.txt</strong> on another computer:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Add to end of line:\ninit=/bin/sh\n\n# Boot and remount root\nmount -o remount,rw /\n# Fix issues, then:\nsync\nreboot -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-information\" class=\"mobile-header\">Debug Information</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># System information\ncat /proc/cpuinfo\nvcgencmd measure_temp\nvcgencmd get_throttled\n\n# Boot messages\ndmesg | grep -i error\njournalctl -xe\n\n# Hardware info\nsudo hwinfo --short\nlsusb\nlsblk</code></pre>\n      </div>\n    </div>\n<h2 id=\"7-security-considerations\" class=\"mobile-header\">7. Security Considerations</h2>\n<h3 id=\"basic-security\" class=\"mobile-header\">Basic Security</h3>\n<p class=\"mobile-paragraph\">1. <strong>Change default password</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">passwd\n# Or for another user:\nsudo passwd username</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Create new user and disable pi user</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Add new user\nsudo adduser myusername\nsudo usermod -aG sudo,adm,dialout,cdrom,audio,video,plugdev,games,users,input,netdev,spi,i2c,gpio myusername\n\n# Test sudo access\nsu - myusername\nsudo whoami\n\n# Disable pi user\nsudo usermod -L pi\n# Or delete:\nsudo deluser --remove-home pi</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>SSH security</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate SSH keys (on client)\nssh-keygen -t ed25519 -C &quot;pi@raspberrypi&quot;\n\n# Copy to Pi\nssh-copy-id myusername@raspberrypi.local\n\n# Disable password authentication\nsudo nano /etc/ssh/sshd_config\n# Set: PasswordAuthentication no\nsudo systemctl restart ssh</code></pre>\n      </div>\n    </div>\n<h3 id=\"firewall-configuration\" class=\"mobile-header\">Firewall Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install ufw\nsudo apt install -y ufw\n\n# Configure rules\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nsudo ufw allow ssh\nsudo ufw allow 80/tcp\nsudo ufw allow 443/tcp\n\n# Enable firewall\nsudo ufw enable\nsudo ufw status</code></pre>\n      </div>\n    </div>\n<h3 id=\"automatic-updates\" class=\"mobile-header\">Automatic Updates</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install unattended-upgrades\nsudo apt install -y unattended-upgrades\n\n# Configure\nsudo dpkg-reconfigure --priority=low unattended-upgrades\n\n# Edit configuration\nsudo nano /etc/apt/apt.conf.d/50unattended-upgrades</code></pre>\n      </div>\n    </div>\n<h2 id=\"8-performance-tuning\" class=\"mobile-header\">8. Performance Tuning</h2>\n<h3 id=\"overclocking\" class=\"mobile-header\">Overclocking</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Edit config.txt\nsudo nano /boot/config.txt\n\n# Pi 4 example:\nover_voltage=6\narm_freq=2147\ngpu_freq=750\n\n# Pi 3B+ example:\narm_freq=1500\ngpu_freq=600\nover_voltage=4\nsdram_freq=560\n\n# Monitor temperature\nwatch -n 1 vcgencmd measure_temp</code></pre>\n      </div>\n    </div>\n<h3 id=\"memory-split\" class=\"mobile-header\">Memory Split</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure GPU memory\nsudo raspi-config\n# Advanced Options â†’ Memory Split\n\n# Or edit directly:\ngpu_mem=128  # For headless\ngpu_mem=256  # For desktop use\ngpu_mem=512  # For GPU-intensive tasks</code></pre>\n      </div>\n    </div>\n<h3 id=\"boot-optimization\" class=\"mobile-header\">Boot Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Disable unnecessary services\nsudo systemctl disable bluetooth\nsudo systemctl disable avahi-daemon\nsudo systemctl disable triggerhappy\nsudo systemctl disable rsyslog\n\n# For headless:\nsudo systemctl disable lightdm\nsudo systemctl disable plymouth</code></pre>\n      </div>\n    </div>\n<h3 id=\"storage-optimization\" class=\"mobile-header\">Storage Optimization</h3>\n<p class=\"mobile-paragraph\">1. <strong>Move to USB boot</strong> (Pi 4):</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update bootloader\nsudo rpi-eeprom-update -d -a\n\n# Enable USB boot\nsudo raspi-config\n# Advanced Options â†’ Boot Order â†’ USB Boot</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Use faster SD cards</strong>: A1/A2 rated cards</p>\n<p class=\"mobile-paragraph\">3. <strong>Enable TRIM for SSDs</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo systemctl enable fstrim.timer</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"full-sd-card-backup\" class=\"mobile-header\">Full SD Card Backup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# backup-pi.sh\n\n# On the Pi\nsudo dd if=/dev/mmcblk0 bs=4M | gzip | ssh user@backupserver &#039;cat &gt; pi-backup-$(date +%Y%m%d).img.gz&#039;\n\n# From another Linux system\nsudo dd if=/dev/sdX bs=4M | gzip &gt; pi-backup-$(date +%Y%m%d).img.gz\n\n# Restore\ngunzip -c pi-backup.img.gz | sudo dd of=/dev/sdX bs=4M conv=fsync</code></pre>\n      </div>\n    </div>\n<h3 id=\"incremental-backup-with-rsync\" class=\"mobile-header\">Incremental Backup with rsync</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Create backup script\ncat &lt;&lt; &#039;EOF&#039; &gt; /home/pi/backup.sh\n#!/bin/bash\nBACKUP_DIR=&quot;/mnt/backup/pi-backup&quot;\nEXCLUDE_FILE=&quot;/home/pi/.backup-exclude&quot;\n\n# Create exclude file\ncat &lt;&lt; &#039;EXCLUDES&#039; &gt; $EXCLUDE_FILE\n/proc/*\n/sys/*\n/dev/*\n/tmp/*\n/run/*\n/mnt/*\n/media/*\n/lost+found\nEXCLUDES\n\n# Run backup\nrsync -aAXv --delete \\\n    --exclude-from=$EXCLUDE_FILE \\\n    / $BACKUP_DIR/\n\n# Create timestamp\ndate &gt; $BACKUP_DIR/last-backup.txt\nEOF\n\nchmod +x /home/pi/backup.sh\n\n# Add to crontab\n(crontab -l 2&gt;/dev/null; echo &quot;0 2 * * * /home/pi/backup.sh&quot;) | crontab -</code></pre>\n      </div>\n    </div>\n<h3 id=\"using-rpi-clone\" class=\"mobile-header\">Using rpi-clone</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install rpi-clone\ngit clone https://github.com/billw2/rpi-clone.git\ncd rpi-clone\nsudo cp rpi-clone /usr/local/sbin\n\n# Clone to another SD card\nsudo rpi-clone sda\n\n# Clone with options\nsudo rpi-clone -f -p 256M sda</code></pre>\n      </div>\n    </div>\n<h2 id=\"10-system-requirements\" class=\"mobile-header\">10. System Requirements</h2>\n<h3 id=\"by-model\" class=\"mobile-header\">By Model</h3>\n<p class=\"mobile-paragraph\">| Model | RAM | CPU | Recommended Use |</p>\n<p class=\"mobile-paragraph\">|-------|-----|-----|-----------------|</p>\n<p class=\"mobile-paragraph\">| Pi 4 B | 1-8GB | 4x 1.5GHz | Desktop, Server |</p>\n<p class=\"mobile-paragraph\">| Pi 400 | 4GB | 4x 1.8GHz | Desktop |</p>\n<p class=\"mobile-paragraph\">| Pi 3 B+ | 1GB | 4x 1.4GHz | IoT, Light Desktop |</p>\n<p class=\"mobile-paragraph\">| Pi Zero 2 W | 512MB | 4x 1GHz | IoT, Embedded |</p>\n<p class=\"mobile-paragraph\">| Pi Zero W | 512MB | 1x 1GHz | Basic IoT |</p>\n<h3 id=\"os-requirements\" class=\"mobile-header\">OS Requirements</h3>\n<li class=\"mobile-list-item\"><strong>Full Desktop</strong>: 2GB+ RAM, 16GB+ SD card</li>\n<li class=\"mobile-list-item\"><strong>Desktop</strong>: 1GB+ RAM, 8GB+ SD card  </li>\n<li class=\"mobile-list-item\"><strong>Lite</strong>: 512MB+ RAM, 4GB+ SD card</li>\n<h2 id=\"11-support\" class=\"mobile-header\">11. Support</h2>\n<h3 id=\"official-resources\" class=\"mobile-header\">Official Resources</h3>\n<li class=\"mobile-list-item\"><strong>Website</strong>: https://www.raspberrypi.com/</li>\n<li class=\"mobile-list-item\"><strong>Documentation</strong>: https://www.raspberrypi.com/documentation/</li>\n<li class=\"mobile-list-item\"><strong>Forums</strong>: https://www.raspberrypi.org/forums/</li>\n<li class=\"mobile-list-item\"><strong>GitHub</strong>: https://github.com/raspberrypi</li>\n<h3 id=\"community-support\" class=\"mobile-header\">Community Support</h3>\n<li class=\"mobile-list-item\"><strong>Reddit</strong>: r/raspberry_pi</li>\n<li class=\"mobile-list-item\"><strong>Discord</strong>: Various Raspberry Pi servers</li>\n<li class=\"mobile-list-item\"><strong>Stack Exchange</strong>: raspberrypi.stackexchange.com</li>\n<li class=\"mobile-list-item\"><strong>MagPi Magazine</strong>: Free monthly magazine</li>\n<h2 id=\"12-contributing\" class=\"mobile-header\">12. Contributing</h2>\n<h3 id=\"how-to-contribute\" class=\"mobile-header\">How to Contribute</h3>\n<p class=\"mobile-paragraph\">1. Report issues on GitHub</p>\n<p class=\"mobile-paragraph\">2. Submit pull requests</p>\n<p class=\"mobile-paragraph\">3. Write documentation</p>\n<p class=\"mobile-paragraph\">4. Create tutorials</p>\n<p class=\"mobile-paragraph\">5. Help in forums</p>\n<h3 id=\"development\" class=\"mobile-header\">Development</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clone documentation\ngit clone https://github.com/raspberrypi/documentation.git\n\n# Clone firmware\ngit clone https://github.com/raspberrypi/firmware.git\n\n# Clone kernel\ngit clone --depth=1 https://github.com/raspberrypi/linux.git</code></pre>\n      </div>\n    </div>\n<h2 id=\"13-license\" class=\"mobile-header\">13. License</h2>\n<p class=\"mobile-paragraph\">Raspberry Pi OS is based on Debian and includes:</p>\n<li class=\"mobile-list-item\"><strong>Base System</strong>: Various open source licenses</li>\n<li class=\"mobile-list-item\"><strong>Raspberry Pi Firmware</strong>: Custom license</li>\n<li class=\"mobile-list-item\"><strong>Software Packages</strong>: Individual licenses</li>\n<p class=\"mobile-paragraph\">Key components:</p>\n<li class=\"mobile-list-item\">Linux kernel: GPLv2</li>\n<li class=\"mobile-list-item\">Debian packages: Various DFSG-compliant licenses</li>\n<li class=\"mobile-list-item\">Raspberry Pi tools: BSD-3-Clause</li>\n<h2 id=\"14-acknowledgments\" class=\"mobile-header\">14. Acknowledgments</h2>\n<h3 id=\"credits\" class=\"mobile-header\">Credits</h3>\n<li class=\"mobile-list-item\"><strong>Raspberry Pi Foundation</strong>: Creating affordable computing</li>\n<li class=\"mobile-list-item\"><strong>Debian Project</strong>: Base operating system</li>\n<li class=\"mobile-list-item\"><strong>Community Contributors</strong>: Thousands of developers</li>\n<li class=\"mobile-list-item\"><strong>Educational Partners</strong>: Schools and makers worldwide</li>\n<h2 id=\"15-version-history\" class=\"mobile-header\">15. Version History</h2>\n<h3 id=\"current-releases\" class=\"mobile-header\">Current Releases</h3>\n<li class=\"mobile-list-item\"><strong>Bookworm</strong>: Based on Debian 12 (Current)</li>\n<li class=\"mobile-list-item\"><strong>Bullseye</strong>: Based on Debian 11 (Legacy)</li>\n<li class=\"mobile-list-item\"><strong>Buster</strong>: Based on Debian 10 (Old Stable)</li>\n<h3 id=\"release-schedule\" class=\"mobile-header\">Release Schedule</h3>\n<li class=\"mobile-list-item\">Major releases: Following Debian releases</li>\n<li class=\"mobile-list-item\">Updates: Monthly security and bug fixes</li>\n<li class=\"mobile-list-item\">Kernel updates: Regular updates via rpi-update</li>\n<h2 id=\"16-appendices\" class=\"mobile-header\">16. Appendices</h2>\n<h3 id=\"a-gpio-pinout-reference\" class=\"mobile-header\">A. GPIO Pinout Reference</h3>\n<div class=\"mobile-code-block\" data-language=\"text\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">text</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-text\">   3V3  (1) (2)  5V\n GPIO2  (3) (4)  5V\n GPIO3  (5) (6)  GND\n GPIO4  (7) (8)  GPIO14\n   GND  (9) (10) GPIO15\nGPIO17 (11) (12) GPIO18\nGPIO27 (13) (14) GND\nGPIO22 (15) (16) GPIO23\n   3V3 (17) (18) GPIO24\nGPIO10 (19) (20) GND\n GPIO9 (21) (22) GPIO25\nGPIO11 (23) (24) GPIO8\n   GND (25) (26) GPIO7\n GPIO0 (27) (28) GPIO1\n GPIO5 (29) (30) GND\n GPIO6 (31) (32) GPIO12\nGPIO13 (33) (34) GND\nGPIO19 (35) (36) GPIO16\nGPIO26 (37) (38) GPIO20\n   GND (39) (40) GPIO21</code></pre>\n      </div>\n    </div>\n<h3 id=\"b-common-commands\" class=\"mobile-header\">B. Common Commands</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># System info\nuname -a\ncat /etc/os-release\nvcgencmd version\n\n# Temperature and voltage\nvcgencmd measure_temp\nvcgencmd measure_volts\nvcgencmd get_throttled\n\n# Memory info\nfree -h\nvcgencmd get_mem arm\nvcgencmd get_mem gpu\n\n# GPIO control\ngpio readall\npinout\n\n# Camera module\nvcgencmd get_camera\nraspistill -o test.jpg\nraspivid -o test.h264 -t 10000</code></pre>\n      </div>\n    </div>\n<h3 id=\"c-useful-tools\" class=\"mobile-header\">C. Useful Tools</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install development tools\nsudo apt install -y \\\n    build-essential \\\n    git \\\n    python3-dev \\\n    python3-pip \\\n    python3-gpiozero \\\n    python3-picamera2 \\\n    nodejs \\\n    npm\n\n# Install utility tools\nsudo apt install -y \\\n    htop \\\n    iotop \\\n    nmap \\\n    screen \\\n    tmux \\\n    vim \\\n    curl \\\n    wget</code></pre>\n      </div>\n    </div>\n<h3 id=\"d-example-projects\" class=\"mobile-header\">D. Example Projects</h3>\n<p class=\"mobile-paragraph\">1. <strong>GPIO LED Blink</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"python\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">python</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-python\">#!/usr/bin/env python3\nfrom gpiozero import LED\nfrom time import sleep\n\nled = LED(17)\nwhile True:\n    led.on()\n    sleep(1)\n    led.off()\n    sleep(1)</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Temperature Monitor</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\nwhile true; do\n    temp=$(vcgencmd measure_temp | cut -d= -f2)\n    echo &quot;$(date): $temp&quot;\n    sleep 60\ndone</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\">For more detailed information and updates, visit https://github.com/howtomgr/raspbian</p>","readTime":"12 min","wordCount":2336,"tableOfContents":[{"level":2,"text":"Table of Contents","id":"table-of-contents"},{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":3,"text":"Hardware Requirements","id":"hardware-requirements"},{"level":3,"text":"Software Requirements","id":"software-requirements"},{"level":3,"text":"Network Requirements","id":"network-requirements"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"Method 1: Using Raspberry Pi Imager (Recommended)","id":"method-1-using-raspberry-pi-imager-recommended"},{"level":1,"text":"Download from official website","id":"download-from-official-website"},{"level":1,"text":"Or using winget","id":"or-using-winget"},{"level":1,"text":"Install using Homebrew","id":"install-using-homebrew"},{"level":1,"text":"Or download DMG from website","id":"or-download-dmg-from-website"},{"level":1,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":1,"text":"Arch Linux","id":"arch-linux"},{"level":1,"text":"Fedora","id":"fedora"},{"level":1,"text":"Or use AppImage","id":"or-use-appimage"},{"level":3,"text":"Method 2: Manual Installation using dd","id":"method-2-manual-installation-using-dd"},{"level":1,"text":"Latest 32-bit with desktop","id":"latest-32-bit-with-desktop"},{"level":1,"text":"Latest 64-bit with desktop","id":"latest-64-bit-with-desktop"},{"level":1,"text":"Latest Lite version (no desktop)","id":"latest-lite-version-no-desktop"},{"level":1,"text":"Extract image","id":"extract-image"},{"level":1,"text":"Find SD card device","id":"find-sd-card-device"},{"level":1,"text":"or","id":"or"},{"level":1,"text":"Write image (replace /dev/sdX with your device)","id":"write-image-replace-devsdx-with-your-device"},{"level":1,"text":"Sync and safely remove","id":"sync-and-safely-remove"},{"level":3,"text":"Pre-boot Configuration (Headless Setup)","id":"pre-boot-configuration-headless-setup"},{"level":1,"text":"Mount the boot partition","id":"mount-the-boot-partition"},{"level":1,"text":"Enable SSH","id":"enable-ssh"},{"level":1,"text":"Create wpa_supplicant.conf","id":"create-wpa_supplicantconf"},{"level":1,"text":"Create userconf.txt with username:encrypted-password","id":"create-userconftxt-with-usernameencrypted-password"},{"level":1,"text":"Generate encrypted password","id":"generate-encrypted-password"},{"level":2,"text":"4. Configuration","id":"4-configuration"},{"level":3,"text":"First Boot Setup","id":"first-boot-setup"},{"level":1,"text":"Find Raspberry Pi IP address","id":"find-raspberry-pi-ip-address"},{"level":1,"text":"From router DHCP list or:","id":"from-router-dhcp-list-or"},{"level":1,"text":"SSH to Raspberry Pi","id":"ssh-to-raspberry-pi"},{"level":1,"text":"or","id":"or"},{"level":1,"text":"Default credentials (older versions):","id":"default-credentials-older-versions"},{"level":1,"text":"Username: pi","id":"username-pi"},{"level":1,"text":"Password: raspberry","id":"password-raspberry"},{"level":3,"text":"System Configuration Tool","id":"system-configuration-tool"},{"level":1,"text":"Run configuration tool","id":"run-configuration-tool"},{"level":1,"text":"Key settings:","id":"key-settings"},{"level":1,"text":"1. System Options","id":"1-system-options"},{"level":1,"text":"- Hostname","id":"hostname"},{"level":1,"text":"- Password","id":"password"},{"level":1,"text":"- Boot/Auto Login","id":"bootauto-login"},{"level":1,"text":"2. Display Options","id":"2-display-options"},{"level":1,"text":"- Resolution","id":"resolution"},{"level":1,"text":"- Underscan","id":"underscan"},{"level":1,"text":"3. Interface Options","id":"3-interface-options"},{"level":1,"text":"- SSH","id":"ssh"},{"level":1,"text":"- VNC","id":"vnc"},{"level":1,"text":"- SPI, I2C, Serial","id":"spi-i2c-serial"},{"level":1,"text":"- Camera","id":"camera"},{"level":1,"text":"4. Performance Options","id":"4-performance-options"},{"level":1,"text":"- Overclock","id":"overclock"},{"level":1,"text":"- GPU Memory Split","id":"gpu-memory-split"},{"level":1,"text":"5. Localization Options","id":"5-localization-options"},{"level":1,"text":"- Locale","id":"locale"},{"level":1,"text":"- Timezone","id":"timezone"},{"level":1,"text":"- Keyboard","id":"keyboard"},{"level":1,"text":"6. Advanced Options","id":"6-advanced-options"},{"level":1,"text":"- Expand Filesystem","id":"expand-filesystem"},{"level":1,"text":"- Network Interface Names","id":"network-interface-names"},{"level":3,"text":"Network Configuration","id":"network-configuration"},{"level":1,"text":"Edit dhcpcd.conf","id":"edit-dhcpcdconf"},{"level":1,"text":"Add for eth0:","id":"add-for-eth0"},{"level":1,"text":"Add for wlan0:","id":"add-for-wlan0"},{"level":1,"text":"Restart networking","id":"restart-networking"},{"level":3,"text":"Update System","id":"update-system"},{"level":1,"text":"Update package lists","id":"update-package-lists"},{"level":1,"text":"Upgrade packages","id":"upgrade-packages"},{"level":1,"text":"Update firmware","id":"update-firmware"},{"level":1,"text":"Clean up","id":"clean-up"},{"level":1,"text":"Reboot if kernel was updated","id":"reboot-if-kernel-was-updated"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd Services","id":"systemd-services"},{"level":1,"text":"Enable/disable services","id":"enabledisable-services"},{"level":1,"text":"Start/stop services","id":"startstop-services"},{"level":1,"text":"Check service status","id":"check-service-status"},{"level":1,"text":"List all services","id":"list-all-services"},{"level":3,"text":"Common Services","id":"common-services"},{"level":1,"text":"Enable SSH","id":"enable-ssh"},{"level":1,"text":"Configure SSH","id":"configure-ssh"},{"level":1,"text":"Change: PermitRootLogin no","id":"change-permitrootlogin-no"},{"level":1,"text":"Add: AllowUsers yourusername","id":"add-allowusers-yourusername"},{"level":1,"text":"Enable VNC","id":"enable-vnc"},{"level":1,"text":"Navigate to: Interface Options â†’ VNC â†’ Yes","id":"navigate-to-interface-options-vnc-yes"},{"level":1,"text":"Or via command line","id":"or-via-command-line"},{"level":1,"text":"Install GPIO tools","id":"install-gpio-tools"},{"level":1,"text":"Enable pigpio daemon","id":"enable-pigpio-daemon"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":1,"text":"Edit config.txt on boot partition","id":"edit-configtxt-on-boot-partition"},{"level":1,"text":"Add or modify:","id":"add-or-modify"},{"level":1,"text":"For Pi 4 with dual displays:","id":"for-pi-4-with-dual-displays"},{"level":1,"text":"Check filesystem","id":"check-filesystem"},{"level":1,"text":"Enable filesystem check on boot","id":"enable-filesystem-check-on-boot"},{"level":1,"text":"Check interfaces","id":"check-interfaces"},{"level":1,"text":"Restart networking","id":"restart-networking"},{"level":1,"text":"Check WiFi","id":"check-wifi"},{"level":3,"text":"Recovery Mode","id":"recovery-mode"},{"level":1,"text":"Add to end of line:","id":"add-to-end-of-line"},{"level":1,"text":"Boot and remount root","id":"boot-and-remount-root"},{"level":1,"text":"Fix issues, then:","id":"fix-issues-then"},{"level":3,"text":"Debug Information","id":"debug-information"},{"level":1,"text":"System information","id":"system-information"},{"level":1,"text":"Boot messages","id":"boot-messages"},{"level":1,"text":"Hardware info","id":"hardware-info"},{"level":2,"text":"7. Security Considerations","id":"7-security-considerations"},{"level":3,"text":"Basic Security","id":"basic-security"},{"level":1,"text":"Or for another user:","id":"or-for-another-user"},{"level":1,"text":"Add new user","id":"add-new-user"},{"level":1,"text":"Test sudo access","id":"test-sudo-access"},{"level":1,"text":"Disable pi user","id":"disable-pi-user"},{"level":1,"text":"Or delete:","id":"or-delete"},{"level":1,"text":"Generate SSH keys (on client)","id":"generate-ssh-keys-on-client"},{"level":1,"text":"Copy to Pi","id":"copy-to-pi"},{"level":1,"text":"Disable password authentication","id":"disable-password-authentication"},{"level":1,"text":"Set: PasswordAuthentication no","id":"set-passwordauthentication-no"},{"level":3,"text":"Firewall Configuration","id":"firewall-configuration"},{"level":1,"text":"Install ufw","id":"install-ufw"},{"level":1,"text":"Configure rules","id":"configure-rules"},{"level":1,"text":"Enable firewall","id":"enable-firewall"},{"level":3,"text":"Automatic Updates","id":"automatic-updates"},{"level":1,"text":"Install unattended-upgrades","id":"install-unattended-upgrades"},{"level":1,"text":"Configure","id":"configure"},{"level":1,"text":"Edit configuration","id":"edit-configuration"},{"level":2,"text":"8. Performance Tuning","id":"8-performance-tuning"},{"level":3,"text":"Overclocking","id":"overclocking"},{"level":1,"text":"Edit config.txt","id":"edit-configtxt"},{"level":1,"text":"Pi 4 example:","id":"pi-4-example"},{"level":1,"text":"Pi 3B+ example:","id":"pi-3b-example"},{"level":1,"text":"Monitor temperature","id":"monitor-temperature"},{"level":3,"text":"Memory Split","id":"memory-split"},{"level":1,"text":"Configure GPU memory","id":"configure-gpu-memory"},{"level":1,"text":"Advanced Options â†’ Memory Split","id":"advanced-options-memory-split"},{"level":1,"text":"Or edit directly:","id":"or-edit-directly"},{"level":3,"text":"Boot Optimization","id":"boot-optimization"},{"level":1,"text":"Disable unnecessary services","id":"disable-unnecessary-services"},{"level":1,"text":"For headless:","id":"for-headless"},{"level":3,"text":"Storage Optimization","id":"storage-optimization"},{"level":1,"text":"Update bootloader","id":"update-bootloader"},{"level":1,"text":"Enable USB boot","id":"enable-usb-boot"},{"level":1,"text":"Advanced Options â†’ Boot Order â†’ USB Boot","id":"advanced-options-boot-order-usb-boot"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Full SD Card Backup","id":"full-sd-card-backup"},{"level":1,"text":"backup-pi.sh","id":"backup-pish"},{"level":1,"text":"On the Pi","id":"on-the-pi"},{"level":1,"text":"From another Linux system","id":"from-another-linux-system"},{"level":1,"text":"Restore","id":"restore"},{"level":3,"text":"Incremental Backup with rsync","id":"incremental-backup-with-rsync"},{"level":1,"text":"Create backup script","id":"create-backup-script"},{"level":1,"text":"Create exclude file","id":"create-exclude-file"},{"level":1,"text":"Run backup","id":"run-backup"},{"level":1,"text":"Create timestamp","id":"create-timestamp"},{"level":1,"text":"Add to crontab","id":"add-to-crontab"},{"level":3,"text":"Using rpi-clone","id":"using-rpi-clone"},{"level":1,"text":"Install rpi-clone","id":"install-rpi-clone"},{"level":1,"text":"Clone to another SD card","id":"clone-to-another-sd-card"},{"level":1,"text":"Clone with options","id":"clone-with-options"},{"level":2,"text":"10. System Requirements","id":"10-system-requirements"},{"level":3,"text":"By Model","id":"by-model"},{"level":3,"text":"OS Requirements","id":"os-requirements"},{"level":2,"text":"11. Support","id":"11-support"},{"level":3,"text":"Official Resources","id":"official-resources"},{"level":3,"text":"Community Support","id":"community-support"},{"level":2,"text":"12. Contributing","id":"12-contributing"},{"level":3,"text":"How to Contribute","id":"how-to-contribute"},{"level":3,"text":"Development","id":"development"},{"level":1,"text":"Clone documentation","id":"clone-documentation"},{"level":1,"text":"Clone firmware","id":"clone-firmware"},{"level":1,"text":"Clone kernel","id":"clone-kernel"},{"level":2,"text":"13. License","id":"13-license"},{"level":2,"text":"14. Acknowledgments","id":"14-acknowledgments"},{"level":3,"text":"Credits","id":"credits"},{"level":2,"text":"15. Version History","id":"15-version-history"},{"level":3,"text":"Current Releases","id":"current-releases"},{"level":3,"text":"Release Schedule","id":"release-schedule"},{"level":2,"text":"16. Appendices","id":"16-appendices"},{"level":3,"text":"A. GPIO Pinout Reference","id":"a-gpio-pinout-reference"},{"level":3,"text":"B. Common Commands","id":"b-common-commands"},{"level":1,"text":"System info","id":"system-info"},{"level":1,"text":"Temperature and voltage","id":"temperature-and-voltage"},{"level":1,"text":"Memory info","id":"memory-info"},{"level":1,"text":"GPIO control","id":"gpio-control"},{"level":1,"text":"Camera module","id":"camera-module"},{"level":3,"text":"C. Useful Tools","id":"c-useful-tools"},{"level":1,"text":"Install development tools","id":"install-development-tools"},{"level":1,"text":"Install utility tools","id":"install-utility-tools"},{"level":3,"text":"D. Example Projects","id":"d-example-projects"}],"lastBuilt":"2025-09-22T18:15:28.390Z","metadataVersion":"2.0"}]},"__N_SSG":true}