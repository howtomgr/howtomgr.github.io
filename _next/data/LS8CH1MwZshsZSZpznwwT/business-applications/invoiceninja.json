{"pageProps":{"guide":{"name":"invoiceninja","displayName":"Invoice Ninja Installation Guide","slug":"invoiceninja","description":"Invoice Ninja is a powerful open-source invoicing and billing platform designed for freelancers and businesses. It provides features for creating invoices, quotes, managing clients, tracking payments, time tracking, and expense management.","category":"business-applications","subcategory":"business-applications","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[5,10,80,443,9000],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["business-applications","containerization","observability","data-storage","web-services","security","data-protection","communication","multimedia","networking"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/business-applications/invoiceninja","documentationUrl":"https://howtomgr.github.io/business-applications/invoiceninja","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/invoiceninja","updatedAt":"2025-09-16T17:20:42Z","createdAt":"2025-09-16T03:23:18Z","readmeRaw":"# Invoice Ninja Installation Guide\n\nInvoice Ninja is a powerful open-source invoicing and billing platform designed for freelancers and businesses. It provides features for creating invoices, quotes, managing clients, tracking payments, time tracking, and expense management.\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- Linux-based operating system (Ubuntu 20.04+ or Debian 11+ recommended)\n- Minimum 2GB RAM (4GB recommended for production)\n- 10GB disk space minimum\n- Domain name with DNS configured\n- SSL certificate (Let's Encrypt recommended)\n- PHP 8.1+ with required extensions\n- MySQL 5.7+ or MariaDB 10.3+\n- Redis for caching and queues\n- nginx or Apache web server\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### Docker Installation (Recommended)\n\n1. **Create directory structure**:\n```bash\n# Create base directory\nsudo mkdir -p /opt/invoiceninja\ncd /opt/invoiceninja\n\n# Create required directories\nmkdir -p docker/app/public docker/app/storage nginx/conf.d\n```\n\n2. **Create docker-compose.yml**:\n```yaml\nversion: '3.7'\n\nservices:\n  nginx:\n    image: nginx:alpine\n    restart: always\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/conf.d:/etc/nginx/conf.d:ro\n      - ./docker/app/public:/var/www/app/public:ro\n      - ./ssl:/etc/nginx/ssl:ro\n    depends_on:\n      - app\n    networks:\n      - invoiceninja\n\n  app:\n    image: invoiceninja/invoiceninja:5\n    restart: always\n    env_file: .env\n    volumes:\n      - ./docker/app/public:/var/www/app/public\n      - ./docker/app/storage:/var/www/app/storage\n    depends_on:\n      - db\n      - redis\n    networks:\n      - invoiceninja\n\n  db:\n    image: mariadb:10.6\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}\n      MYSQL_DATABASE: ${MYSQL_DATABASE}\n      MYSQL_USER: ${MYSQL_USER}\n      MYSQL_PASSWORD: ${MYSQL_PASSWORD}\n    volumes:\n      - db_data:/var/lib/mysql\n    networks:\n      - invoiceninja\n\n  redis:\n    image: redis:alpine\n    restart: always\n    volumes:\n      - redis_data:/data\n    networks:\n      - invoiceninja\n\nvolumes:\n  db_data:\n  redis_data:\n\nnetworks:\n  invoiceninja:\n    driver: bridge\n```\n\n3. **Create environment file**:\n```bash\n# Create .env file\ncat > .env << 'EOF'\n# Application\nAPP_ENV=production\nAPP_DEBUG=false\nAPP_URL=https://invoice.example.com\nAPP_KEY=base64:$(openssl rand -base64 32)\nAPP_CIPHER=AES-256-CBC\n\n# Database\nDB_CONNECTION=mysql\nDB_HOST=db\nDB_PORT=3306\nDB_DATABASE=invoiceninja\nDB_USERNAME=invoiceninja\nDB_PASSWORD=$(openssl rand -base64 32)\n\n# MySQL Root\nMYSQL_ROOT_PASSWORD=$(openssl rand -base64 32)\nMYSQL_DATABASE=invoiceninja\nMYSQL_USER=invoiceninja\nMYSQL_PASSWORD=${DB_PASSWORD}\n\n# Cache and Queue\nCACHE_DRIVER=redis\nSESSION_DRIVER=redis\nQUEUE_CONNECTION=redis\nREDIS_HOST=redis\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\n# Mail\nMAIL_MAILER=smtp\nMAIL_HOST=smtp.gmail.com\nMAIL_PORT=587\nMAIL_USERNAME=your-email@gmail.com\nMAIL_PASSWORD=your-app-password\nMAIL_ENCRYPTION=tls\nMAIL_FROM_ADDRESS=noreply@invoice.example.com\nMAIL_FROM_NAME=\"Invoice Ninja\"\n\n# Additional settings\nREQUIRE_HTTPS=true\nTRUSTED_PROXIES=\"*\"\nPDF_GENERATOR=snappdf\nPHANTOMJS_PDF_GENERATION=false\nEOF\n```\n\n4. **Configure nginx**:\n```bash\n# Create nginx configuration\ncat > nginx/conf.d/invoiceninja.conf << 'EOF'\nserver {\n    listen 80;\n    server_name invoice.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name invoice.example.com;\n    \n    ssl_certificate /etc/nginx/ssl/cert.pem;\n    ssl_certificate_key /etc/nginx/ssl/key.pem;\n    \n    root /var/www/app/public;\n    index index.php;\n    \n    client_max_body_size 50M;\n    \n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n    \n    location ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass app:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_param PATH_INFO $fastcgi_path_info;\n        fastcgi_buffer_size 32k;\n        fastcgi_buffers 8 16k;\n    }\n    \n    location ~ /\\.ht {\n        deny all;\n    }\n}\nEOF\n```\n\n5. **Start Invoice Ninja**:\n```bash\n# Start services\ndocker-compose up -d\n\n# Run migrations\ndocker-compose exec app php artisan migrate:fresh --seed\n\n# Generate app key (if not set)\ndocker-compose exec app php artisan key:generate\n\n# Optimize application\ndocker-compose exec app php artisan optimize\n```\n\n### Manual Installation\n\n1. **Install system dependencies**:\n```bash\n# Ubuntu/Debian\nsudo apt update\nsudo apt install -y \\\n  nginx \\\n  mariadb-server \\\n  redis-server \\\n  php8.1-fpm \\\n  php8.1-mysql \\\n  php8.1-curl \\\n  php8.1-gd \\\n  php8.1-mbstring \\\n  php8.1-xml \\\n  php8.1-zip \\\n  php8.1-bcmath \\\n  php8.1-intl \\\n  php8.1-redis \\\n  php8.1-imagick \\\n  php8.1-gmp \\\n  composer \\\n  git \\\n  curl \\\n  unzip\n```\n\n2. **Create database**:\n```bash\n# Secure MariaDB\nsudo mysql_secure_installation\n\n# Create database and user\nsudo mysql -u root -p << EOF\nCREATE DATABASE invoiceninja;\nCREATE USER 'invoiceninja'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON invoiceninja.* TO 'invoiceninja'@'localhost';\nFLUSH PRIVILEGES;\nEXIT;\nEOF\n```\n\n3. **Download Invoice Ninja**:\n```bash\n# Create directory\nsudo mkdir -p /var/www/invoiceninja\ncd /var/www/invoiceninja\n\n# Download latest release\nwget https://github.com/invoiceninja/invoiceninja/releases/latest/download/invoiceninja.zip\nunzip invoiceninja.zip\nrm invoiceninja.zip\n\n# Set permissions\nsudo chown -R www-data:www-data /var/www/invoiceninja\nsudo chmod -R 755 /var/www/invoiceninja\nsudo chmod -R 775 /var/www/invoiceninja/storage\nsudo chmod -R 775 /var/www/invoiceninja/bootstrap/cache\n```\n\n4. **Configure application**:\n```bash\n# Copy environment file\ncp .env.example .env\n\n# Edit configuration\nnano .env\n\n# Generate application key\nphp artisan key:generate\n\n# Run migrations\nphp artisan migrate:fresh --seed\n\n# Optimize application\nphp artisan optimize\n```\n\n## 4. Configuration\n\n### Nginx Configuration\n\nCreate `/etc/nginx/sites-available/invoiceninja`:\n```nginx\nserver {\n    listen 80;\n    server_name invoice.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name invoice.example.com;\n    \n    ssl_certificate /etc/letsencrypt/live/invoice.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/invoice.example.com/privkey.pem;\n    \n    root /var/www/invoiceninja/public;\n    index index.php;\n    \n    client_max_body_size 50M;\n    \n    # Security headers\n    add_header X-Frame-Options \"SAMEORIGIN\" always;\n    add_header X-Content-Type-Options \"nosniff\" always;\n    add_header X-XSS-Protection \"1; mode=block\" always;\n    add_header Referrer-Policy \"no-referrer-when-downgrade\" always;\n    \n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n    \n    location ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_intercept_errors off;\n        fastcgi_buffer_size 16k;\n        fastcgi_buffers 4 16k;\n    }\n    \n    location ~ /\\.ht {\n        deny all;\n    }\n    \n    location ~ /\\.(?!well-known).* {\n        deny all;\n    }\n}\n```\n\nEnable site:\n```bash\nsudo ln -s /etc/nginx/sites-available/invoiceninja /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl reload nginx\n```\n\n### Queue Worker\n\nCreate `/etc/systemd/system/invoiceninja-queue.service`:\n```ini\n[Unit]\nDescription=Invoice Ninja Queue Worker\nAfter=network.target\n\n[Service]\nType=simple\nUser=www-data\nGroup=www-data\nWorkingDirectory=/var/www/invoiceninja\nExecStart=/usr/bin/php /var/www/invoiceninja/artisan queue:work --sleep=3 --tries=3 --timeout=90\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n```\n\nEnable service:\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now invoiceninja-queue.service\n```\n\n### Cron Jobs\n\nAdd to crontab:\n```bash\nsudo crontab -e -u www-data\n\n# Add this line\n* * * * * cd /var/www/invoiceninja && php artisan schedule:run >> /dev/null 2>&1\n```\n\n### Email Configuration\n\nConfigure in `.env`:\n```bash\n# SMTP Settings\nMAIL_MAILER=smtp\nMAIL_HOST=smtp.gmail.com\nMAIL_PORT=587\nMAIL_USERNAME=your-email@gmail.com\nMAIL_PASSWORD=your-app-password\nMAIL_ENCRYPTION=tls\nMAIL_FROM_ADDRESS=noreply@invoice.example.com\nMAIL_FROM_NAME=\"Invoice Ninja\"\n\n# Alternative: Mailgun\nMAIL_MAILER=mailgun\nMAILGUN_DOMAIN=mg.example.com\nMAILGUN_SECRET=key-xxxxxxxxxxxxxxxxxxxxxxxx\nMAILGUN_ENDPOINT=api.mailgun.net\n\n# Alternative: SendGrid\nMAIL_MAILER=sendgrid\nSENDGRID_API_KEY=SG.xxxxxxxxxxxxxxxxxxxxxxxx\n```\n\n### Payment Gateways\n\n1. **Stripe**:\n```bash\n# In .env\nSTRIPE_PUBLIC_KEY=pk_live_xxxxx\nSTRIPE_SECRET_KEY=sk_live_xxxxx\nSTRIPE_WEBHOOK_SECRET=whsec_xxxxx\n```\n\n2. **PayPal**:\n```bash\n# In .env\nPAYPAL_CLIENT_ID=xxxxx\nPAYPAL_SECRET=xxxxx\nPAYPAL_MODE=live  # or sandbox\n```\n\n3. **Square**:\n```bash\n# In .env\nSQUARE_APPLICATION_ID=xxxxx\nSQUARE_ACCESS_TOKEN=xxxxx\nSQUARE_LOCATION_ID=xxxxx\n```\n\n## Advanced Configuration\n\n### Multi-Company Setup\n\n```bash\n# Enable multi-company\nMULTI_DB_ENABLED=true\n\n# Configure per-company databases\nDB_HOST1=db1.example.com\nDB_DATABASE1=company1\nDB_USERNAME1=user1\nDB_PASSWORD1=pass1\n\nDB_HOST2=db2.example.com\nDB_DATABASE2=company2\nDB_USERNAME2=user2\nDB_PASSWORD2=pass2\n```\n\n### Custom PDF Templates\n\n1. **Create custom design**:\n```php\n// resources/views/pdf/custom_invoice.blade.php\n<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        /* Custom CSS */\n    </style>\n</head>\n<body>\n    <!-- Custom HTML template -->\n</body>\n</html>\n```\n\n2. **Register design**:\n```bash\nphp artisan make:design CustomInvoice\n```\n\n### API Configuration\n\n```bash\n# Enable API\nAPI_SECRET=your-api-secret\n\n# Rate limiting\nRATE_LIMIT_PER_MINUTE=60\n\n# API version\nAPI_VERSION=v1\n```\n\n### Webhook Configuration\n\n```bash\n# Webhook URL\nWEBHOOK_URL=https://your-app.com/webhooks/invoiceninja\n\n# Webhook events\nWEBHOOK_EVENTS=invoice.created,payment.completed,client.created\n```\n\n## Security Configuration\n\n### Two-Factor Authentication\n\n```bash\n# Enable 2FA\nENABLE_2FA=true\n\n# 2FA methods\nTWO_FACTOR_METHODS=google,sms,email\n```\n\n### IP Whitelisting\n\n```bash\n# Whitelist IPs\nIP_WHITELIST=192.168.1.0/24,10.0.0.0/8\n\n# Blacklist IPs\nIP_BLACKLIST=1.2.3.4,5.6.7.8\n```\n\n### Security Headers\n\nAdd to nginx configuration:\n```nginx\n# Security headers\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;\nadd_header Content-Security-Policy \"default-src 'self' 'unsafe-inline' 'unsafe-eval' https: data: blob: wss:;\" always;\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header X-XSS-Protection \"1; mode=block\" always;\nadd_header Referrer-Policy \"strict-origin-when-cross-origin\" always;\nadd_header Permissions-Policy \"camera=(), microphone=(), geolocation=()\" always;\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# backup-invoiceninja.sh\n\nBACKUP_DIR=\"/backup/invoiceninja/$(date +%Y%m%d_%H%M%S)\"\nmkdir -p \"$BACKUP_DIR\"\n\n# Backup database\nmysqldump -u invoiceninja -p invoiceninja > \"$BACKUP_DIR/database.sql\"\n\n# Backup files\ntar czf \"$BACKUP_DIR/files.tar.gz\" \\\n  -C /var/www/invoiceninja \\\n  storage/app \\\n  public/storage \\\n  .env\n\n# Backup nginx config\ncp /etc/nginx/sites-available/invoiceninja \"$BACKUP_DIR/\"\n\necho \"Backup completed: $BACKUP_DIR\"\n```\n\n### Restore Script\n\n```bash\n#!/bin/bash\n# restore-invoiceninja.sh\n\nBACKUP_DIR=\"/backup/invoiceninja/20231201_120000\"\n\n# Stop services\nsudo systemctl stop nginx php8.1-fpm invoiceninja-queue\n\n# Restore database\nmysql -u invoiceninja -p invoiceninja < \"$BACKUP_DIR/database.sql\"\n\n# Restore files\ntar xzf \"$BACKUP_DIR/files.tar.gz\" -C /var/www/invoiceninja/\n\n# Set permissions\nsudo chown -R www-data:www-data /var/www/invoiceninja\nsudo chmod -R 755 /var/www/invoiceninja\nsudo chmod -R 775 /var/www/invoiceninja/storage\nsudo chmod -R 775 /var/www/invoiceninja/bootstrap/cache\n\n# Clear cache\ncd /var/www/invoiceninja\nphp artisan cache:clear\nphp artisan config:clear\nphp artisan view:clear\n\n# Start services\nsudo systemctl start nginx php8.1-fpm invoiceninja-queue\n\necho \"Restore completed from: $BACKUP_DIR\"\n```\n\n## Performance Optimization\n\n### PHP-FPM Tuning\n\nEdit `/etc/php/8.1/fpm/pool.d/www.conf`:\n```ini\npm = dynamic\npm.max_children = 50\npm.start_servers = 10\npm.min_spare_servers = 5\npm.max_spare_servers = 20\npm.max_requests = 500\n\n; Increase memory and execution limits\nphp_admin_value[memory_limit] = 256M\nphp_admin_value[max_execution_time] = 300\nphp_admin_value[post_max_size] = 50M\nphp_admin_value[upload_max_filesize] = 50M\n```\n\n### Redis Optimization\n\n```bash\n# Configure Redis\nsudo nano /etc/redis/redis.conf\n\n# Add/modify:\nmaxmemory 1gb\nmaxmemory-policy allkeys-lru\nsave \"\"  # Disable persistence for cache\n```\n\n### Database Optimization\n\n```sql\n-- Optimize tables\nOPTIMIZE TABLE clients, invoices, payments, products;\n\n-- Add indexes\nCREATE INDEX idx_invoices_client_id ON invoices(client_id);\nCREATE INDEX idx_invoices_date ON invoices(invoice_date);\nCREATE INDEX idx_payments_invoice_id ON payments(invoice_id);\n```\n\n### Laravel Optimization\n\n```bash\n# Cache configuration\nphp artisan config:cache\nphp artisan route:cache\nphp artisan view:cache\n\n# Optimize autoloader\ncomposer install --optimize-autoloader --no-dev\n\n# Enable OPcache\nsudo phpenmod opcache\n```\n\n## Monitoring\n\n### Health Checks\n\n```bash\n# Check application health\ncurl https://invoice.example.com/api/v1/health\n\n# Check queue status\nphp artisan queue:monitor\n\n# Check failed jobs\nphp artisan queue:failed\n```\n\n### Logging\n\nConfigure in `.env`:\n```bash\n# Log channel\nLOG_CHANNEL=daily\n\n# Log level\nLOG_LEVEL=error\n\n# Log retention\nLOG_DEPRECATIONS_CHANNEL=null\nLOG_DAYS=14\n```\n\n### Application Monitoring\n\n```bash\n# Enable Laravel Telescope (development)\ncomposer require laravel/telescope --dev\nphp artisan telescope:install\nphp artisan migrate\n\n# Enable Sentry (production)\nSENTRY_LARAVEL_DSN=https://xxxxx@sentry.io/xxxxx\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **500 Internal Server Error**:\n```bash\n# Check permissions\nsudo chown -R www-data:www-data /var/www/invoiceninja\nsudo chmod -R 755 /var/www/invoiceninja\nsudo chmod -R 775 /var/www/invoiceninja/storage\nsudo chmod -R 775 /var/www/invoiceninja/bootstrap/cache\n\n# Clear cache\nphp artisan cache:clear\nphp artisan config:clear\nphp artisan view:clear\n```\n\n2. **PDF generation issues**:\n```bash\n# Install required packages\nsudo apt install -y chromium-browser\n\n# Configure in .env\nPDF_GENERATOR=snappdf\nSNAPPDF_EXECUTABLE_PATH=/usr/bin/chromium-browser\n```\n\n3. **Email not sending**:\n```bash\n# Test email configuration\nphp artisan tinker\n>>> Mail::raw('Test email', function($message) {\n...     $message->to('test@example.com')->subject('Test');\n... });\n\n# Check queue\nphp artisan queue:work --once\n```\n\n### Debug Mode\n\nEnable debug mode (development only):\n```bash\n# In .env\nAPP_DEBUG=true\nAPP_ENV=local\n\n# View logs\ntail -f storage/logs/laravel.log\n```\n\n## Upgrade Process\n\n```bash\n# Backup first!\n./backup-invoiceninja.sh\n\n# Put application in maintenance mode\nphp artisan down\n\n# Pull latest code\ngit fetch --tags\ngit checkout tags/v5.x.x\n\n# Update dependencies\ncomposer install --no-dev\nnpm install\nnpm run production\n\n# Run migrations\nphp artisan migrate --force\n\n# Clear caches\nphp artisan cache:clear\nphp artisan config:cache\nphp artisan view:cache\n\n# Bring application back online\nphp artisan up\n```\n\n## Additional Resources\n\n- [Official Documentation](https://invoiceninja.github.io/docs/)\n- [GitHub Repository](https://github.com/invoiceninja/invoiceninja)\n- [Community Forum](https://forum.invoiceninja.com/)\n- [API Documentation](https://api-docs.invoiceninja.com/)\n- [Slack Community](https://invoiceninja.slack.com/)\n- [Video Tutorials](https://www.youtube.com/channel/UCXAHcBvhW05PDtWYIq7WDFA)\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.","readmeHtml":"<p class=\"mobile-paragraph\">Invoice Ninja is a powerful open-source invoicing and billing platform designed for freelancers and businesses. It provides features for creating invoices, quotes, managing clients, tracking payments, time tracking, and expense management.</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\">Linux-based operating system (Ubuntu 20.04+ or Debian 11+ recommended)</li>\n<li class=\"mobile-list-item\">Minimum 2GB RAM (4GB recommended for production)</li>\n<li class=\"mobile-list-item\">10GB disk space minimum</li>\n<li class=\"mobile-list-item\">Domain name with DNS configured</li>\n<li class=\"mobile-list-item\">SSL certificate (Let's Encrypt recommended)</li>\n<li class=\"mobile-list-item\">PHP 8.1+ with required extensions</li>\n<li class=\"mobile-list-item\">MySQL 5.7+ or MariaDB 10.3+</li>\n<li class=\"mobile-list-item\">Redis for caching and queues</li>\n<li class=\"mobile-list-item\">nginx or Apache web server</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"docker-installation-recommended\" class=\"mobile-header\">Docker Installation (Recommended)</h3>\n<p class=\"mobile-paragraph\">1. <strong>Create directory structure</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create base directory\nsudo mkdir -p /opt/invoiceninja\ncd /opt/invoiceninja\n\n# Create required directories\nmkdir -p docker/app/public docker/app/storage nginx/conf.d</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Create docker-compose.yml</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.7&#039;\n\nservices:\n  nginx:\n    image: nginx:alpine\n    restart: always\n    ports:\n      - &quot;80:80&quot;\n      - &quot;443:443&quot;\n    volumes:\n      - ./nginx/conf.d:/etc/nginx/conf.d:ro\n      - ./docker/app/public:/var/www/app/public:ro\n      - ./ssl:/etc/nginx/ssl:ro\n    depends_on:\n      - app\n    networks:\n      - invoiceninja\n\n  app:\n    image: invoiceninja/invoiceninja:5\n    restart: always\n    env_file: .env\n    volumes:\n      - ./docker/app/public:/var/www/app/public\n      - ./docker/app/storage:/var/www/app/storage\n    depends_on:\n      - db\n      - redis\n    networks:\n      - invoiceninja\n\n  db:\n    image: mariadb:10.6\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}\n      MYSQL_DATABASE: ${MYSQL_DATABASE}\n      MYSQL_USER: ${MYSQL_USER}\n      MYSQL_PASSWORD: ${MYSQL_PASSWORD}\n    volumes:\n      - db_data:/var/lib/mysql\n    networks:\n      - invoiceninja\n\n  redis:\n    image: redis:alpine\n    restart: always\n    volumes:\n      - redis_data:/data\n    networks:\n      - invoiceninja\n\nvolumes:\n  db_data:\n  redis_data:\n\nnetworks:\n  invoiceninja:\n    driver: bridge</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Create environment file</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create .env file\ncat &gt; .env &lt;&lt; &#039;EOF&#039;\n# Application\nAPP_ENV=production\nAPP_DEBUG=false\nAPP_URL=https://invoice.example.com\nAPP_KEY=base64:$(openssl rand -base64 32)\nAPP_CIPHER=AES-256-CBC\n\n# Database\nDB_CONNECTION=mysql\nDB_HOST=db\nDB_PORT=3306\nDB_DATABASE=invoiceninja\nDB_USERNAME=invoiceninja\nDB_PASSWORD=$(openssl rand -base64 32)\n\n# MySQL Root\nMYSQL_ROOT_PASSWORD=$(openssl rand -base64 32)\nMYSQL_DATABASE=invoiceninja\nMYSQL_USER=invoiceninja\nMYSQL_PASSWORD=${DB_PASSWORD}\n\n# Cache and Queue\nCACHE_DRIVER=redis\nSESSION_DRIVER=redis\nQUEUE_CONNECTION=redis\nREDIS_HOST=redis\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\n# Mail\nMAIL_MAILER=smtp\nMAIL_HOST=smtp.gmail.com\nMAIL_PORT=587\nMAIL_USERNAME=your-email@gmail.com\nMAIL_PASSWORD=your-app-password\nMAIL_ENCRYPTION=tls\nMAIL_FROM_ADDRESS=noreply@invoice.example.com\nMAIL_FROM_NAME=&quot;Invoice Ninja&quot;\n\n# Additional settings\nREQUIRE_HTTPS=true\nTRUSTED_PROXIES=&quot;*&quot;\nPDF_GENERATOR=snappdf\nPHANTOMJS_PDF_GENERATION=false\nEOF</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">4. <strong>Configure nginx</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create nginx configuration\ncat &gt; nginx/conf.d/invoiceninja.conf &lt;&lt; &#039;EOF&#039;\nserver {\n    listen 80;\n    server_name invoice.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name invoice.example.com;\n    \n    ssl_certificate /etc/nginx/ssl/cert.pem;\n    ssl_certificate_key /etc/nginx/ssl/key.pem;\n    \n    root /var/www/app/public;\n    index index.php;\n    \n    client_max_body_size 50M;\n    \n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n    \n    location ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass app:9000;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_param PATH_INFO $fastcgi_path_info;\n        fastcgi_buffer_size 32k;\n        fastcgi_buffers 8 16k;\n    }\n    \n    location ~ /\\.ht {\n        deny all;\n    }\n}\nEOF</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">5. <strong>Start Invoice Ninja</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Start services\ndocker-compose up -d\n\n# Run migrations\ndocker-compose exec app php artisan migrate:fresh --seed\n\n# Generate app key (if not set)\ndocker-compose exec app php artisan key:generate\n\n# Optimize application\ndocker-compose exec app php artisan optimize</code></pre>\n      </div>\n    </div>\n<h3 id=\"manual-installation\" class=\"mobile-header\">Manual Installation</h3>\n<p class=\"mobile-paragraph\">1. <strong>Install system dependencies</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Ubuntu/Debian\nsudo apt update\nsudo apt install -y \\\n  nginx \\\n  mariadb-server \\\n  redis-server \\\n  php8.1-fpm \\\n  php8.1-mysql \\\n  php8.1-curl \\\n  php8.1-gd \\\n  php8.1-mbstring \\\n  php8.1-xml \\\n  php8.1-zip \\\n  php8.1-bcmath \\\n  php8.1-intl \\\n  php8.1-redis \\\n  php8.1-imagick \\\n  php8.1-gmp \\\n  composer \\\n  git \\\n  curl \\\n  unzip</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Create database</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Secure MariaDB\nsudo mysql_secure_installation\n\n# Create database and user\nsudo mysql -u root -p &lt;&lt; EOF\nCREATE DATABASE invoiceninja;\nCREATE USER &#039;invoiceninja&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON invoiceninja.* TO &#039;invoiceninja&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;\nEXIT;\nEOF</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Download Invoice Ninja</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create directory\nsudo mkdir -p /var/www/invoiceninja\ncd /var/www/invoiceninja\n\n# Download latest release\nwget https://github.com/invoiceninja/invoiceninja/releases/latest/download/invoiceninja.zip\nunzip invoiceninja.zip\nrm invoiceninja.zip\n\n# Set permissions\nsudo chown -R www-data:www-data /var/www/invoiceninja\nsudo chmod -R 755 /var/www/invoiceninja\nsudo chmod -R 775 /var/www/invoiceninja/storage\nsudo chmod -R 775 /var/www/invoiceninja/bootstrap/cache</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">4. <strong>Configure application</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Copy environment file\ncp .env.example .env\n\n# Edit configuration\nnano .env\n\n# Generate application key\nphp artisan key:generate\n\n# Run migrations\nphp artisan migrate:fresh --seed\n\n# Optimize application\nphp artisan optimize</code></pre>\n      </div>\n    </div>\n<h2 id=\"4-configuration\" class=\"mobile-header\">4. Configuration</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">Nginx Configuration</h3>\n<p class=\"mobile-paragraph\">Create <code class=\"mobile-inline-code\">/etc/nginx/sites-available/invoiceninja</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">server {\n    listen 80;\n    server_name invoice.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name invoice.example.com;\n    \n    ssl_certificate /etc/letsencrypt/live/invoice.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/invoice.example.com/privkey.pem;\n    \n    root /var/www/invoiceninja/public;\n    index index.php;\n    \n    client_max_body_size 50M;\n    \n    # Security headers\n    add_header X-Frame-Options &quot;SAMEORIGIN&quot; always;\n    add_header X-Content-Type-Options &quot;nosniff&quot; always;\n    add_header X-XSS-Protection &quot;1; mode=block&quot; always;\n    add_header Referrer-Policy &quot;no-referrer-when-downgrade&quot; always;\n    \n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n    \n    location ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_intercept_errors off;\n        fastcgi_buffer_size 16k;\n        fastcgi_buffers 4 16k;\n    }\n    \n    location ~ /\\.ht {\n        deny all;\n    }\n    \n    location ~ /\\.(?!well-known).* {\n        deny all;\n    }\n}</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">Enable site:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo ln -s /etc/nginx/sites-available/invoiceninja /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl reload nginx</code></pre>\n      </div>\n    </div>\n<h3 id=\"queue-worker\" class=\"mobile-header\">Queue Worker</h3>\n<p class=\"mobile-paragraph\">Create <code class=\"mobile-inline-code\">/etc/systemd/system/invoiceninja-queue.service</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"ini\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">ini</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-ini\">[Unit]\nDescription=Invoice Ninja Queue Worker\nAfter=network.target\n\n[Service]\nType=simple\nUser=www-data\nGroup=www-data\nWorkingDirectory=/var/www/invoiceninja\nExecStart=/usr/bin/php /var/www/invoiceninja/artisan queue:work --sleep=3 --tries=3 --timeout=90\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">Enable service:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo systemctl daemon-reload\nsudo systemctl enable --now invoiceninja-queue.service</code></pre>\n      </div>\n    </div>\n<h3 id=\"cron-jobs\" class=\"mobile-header\">Cron Jobs</h3>\n<p class=\"mobile-paragraph\">Add to crontab:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo crontab -e -u www-data\n\n# Add this line\n* * * * * cd /var/www/invoiceninja &amp;&amp; php artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1</code></pre>\n      </div>\n    </div>\n<h3 id=\"email-configuration\" class=\"mobile-header\">Email Configuration</h3>\n<p class=\"mobile-paragraph\">Configure in <code class=\"mobile-inline-code\">.env</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># SMTP Settings\nMAIL_MAILER=smtp\nMAIL_HOST=smtp.gmail.com\nMAIL_PORT=587\nMAIL_USERNAME=your-email@gmail.com\nMAIL_PASSWORD=your-app-password\nMAIL_ENCRYPTION=tls\nMAIL_FROM_ADDRESS=noreply@invoice.example.com\nMAIL_FROM_NAME=&quot;Invoice Ninja&quot;\n\n# Alternative: Mailgun\nMAIL_MAILER=mailgun\nMAILGUN_DOMAIN=mg.example.com\nMAILGUN_SECRET=key-xxxxxxxxxxxxxxxxxxxxxxxx\nMAILGUN_ENDPOINT=api.mailgun.net\n\n# Alternative: SendGrid\nMAIL_MAILER=sendgrid\nSENDGRID_API_KEY=SG.xxxxxxxxxxxxxxxxxxxxxxxx</code></pre>\n      </div>\n    </div>\n<h3 id=\"payment-gateways\" class=\"mobile-header\">Payment Gateways</h3>\n<p class=\"mobile-paragraph\">1. <strong>Stripe</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># In .env\nSTRIPE_PUBLIC_KEY=pk_live_xxxxx\nSTRIPE_SECRET_KEY=sk_live_xxxxx\nSTRIPE_WEBHOOK_SECRET=whsec_xxxxx</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>PayPal</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># In .env\nPAYPAL_CLIENT_ID=xxxxx\nPAYPAL_SECRET=xxxxx\nPAYPAL_MODE=live  # or sandbox</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Square</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># In .env\nSQUARE_APPLICATION_ID=xxxxx\nSQUARE_ACCESS_TOKEN=xxxxx\nSQUARE_LOCATION_ID=xxxxx</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<h3 id=\"multi-company-setup\" class=\"mobile-header\">Multi-Company Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable multi-company\nMULTI_DB_ENABLED=true\n\n# Configure per-company databases\nDB_HOST1=db1.example.com\nDB_DATABASE1=company1\nDB_USERNAME1=user1\nDB_PASSWORD1=pass1\n\nDB_HOST2=db2.example.com\nDB_DATABASE2=company2\nDB_USERNAME2=user2\nDB_PASSWORD2=pass2</code></pre>\n      </div>\n    </div>\n<h3 id=\"custom-pdf-templates\" class=\"mobile-header\">Custom PDF Templates</h3>\n<p class=\"mobile-paragraph\">1. <strong>Create custom design</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"php\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">php</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-php\">// resources/views/pdf/custom_invoice.blade.php\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;style&gt;\n        /* Custom CSS */\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;!-- Custom HTML template --&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Register design</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">php artisan make:design CustomInvoice</code></pre>\n      </div>\n    </div>\n<h3 id=\"api-configuration\" class=\"mobile-header\">API Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable API\nAPI_SECRET=your-api-secret\n\n# Rate limiting\nRATE_LIMIT_PER_MINUTE=60\n\n# API version\nAPI_VERSION=v1</code></pre>\n      </div>\n    </div>\n<h3 id=\"webhook-configuration\" class=\"mobile-header\">Webhook Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Webhook URL\nWEBHOOK_URL=https://your-app.com/webhooks/invoiceninja\n\n# Webhook events\nWEBHOOK_EVENTS=invoice.created,payment.completed,client.created</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"two-factor-authentication\" class=\"mobile-header\">Two-Factor Authentication</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable 2FA\nENABLE_2FA=true\n\n# 2FA methods\nTWO_FACTOR_METHODS=google,sms,email</code></pre>\n      </div>\n    </div>\n<h3 id=\"ip-whitelisting\" class=\"mobile-header\">IP Whitelisting</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Whitelist IPs\nIP_WHITELIST=192.168.1.0/24,10.0.0.0/8\n\n# Blacklist IPs\nIP_BLACKLIST=1.2.3.4,5.6.7.8</code></pre>\n      </div>\n    </div>\n<h3 id=\"security-headers\" class=\"mobile-header\">Security Headers</h3>\n<p class=\"mobile-paragraph\">Add to nginx configuration:</p>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\"># Security headers\nadd_header Strict-Transport-Security &quot;max-age=31536000; includeSubDomains&quot; always;\nadd_header Content-Security-Policy &quot;default-src &#039;self&#039; &#039;unsafe-inline&#039; &#039;unsafe-eval&#039; https: data: blob: wss:;&quot; always;\nadd_header X-Frame-Options &quot;SAMEORIGIN&quot; always;\nadd_header X-Content-Type-Options &quot;nosniff&quot; always;\nadd_header X-XSS-Protection &quot;1; mode=block&quot; always;\nadd_header Referrer-Policy &quot;strict-origin-when-cross-origin&quot; always;\nadd_header Permissions-Policy &quot;camera=(), microphone=(), geolocation=()&quot; always;</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# backup-invoiceninja.sh\n\nBACKUP_DIR=&quot;/backup/invoiceninja/$(date +%Y%m%d_%H%M%S)&quot;\nmkdir -p &quot;$BACKUP_DIR&quot;\n\n# Backup database\nmysqldump -u invoiceninja -p invoiceninja &gt; &quot;$BACKUP_DIR/database.sql&quot;\n\n# Backup files\ntar czf &quot;$BACKUP_DIR/files.tar.gz&quot; \\\n  -C /var/www/invoiceninja \\\n  storage/app \\\n  public/storage \\\n  .env\n\n# Backup nginx config\ncp /etc/nginx/sites-available/invoiceninja &quot;$BACKUP_DIR/&quot;\n\necho &quot;Backup completed: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-script\" class=\"mobile-header\">Restore Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# restore-invoiceninja.sh\n\nBACKUP_DIR=&quot;/backup/invoiceninja/20231201_120000&quot;\n\n# Stop services\nsudo systemctl stop nginx php8.1-fpm invoiceninja-queue\n\n# Restore database\nmysql -u invoiceninja -p invoiceninja &lt; &quot;$BACKUP_DIR/database.sql&quot;\n\n# Restore files\ntar xzf &quot;$BACKUP_DIR/files.tar.gz&quot; -C /var/www/invoiceninja/\n\n# Set permissions\nsudo chown -R www-data:www-data /var/www/invoiceninja\nsudo chmod -R 755 /var/www/invoiceninja\nsudo chmod -R 775 /var/www/invoiceninja/storage\nsudo chmod -R 775 /var/www/invoiceninja/bootstrap/cache\n\n# Clear cache\ncd /var/www/invoiceninja\nphp artisan cache:clear\nphp artisan config:clear\nphp artisan view:clear\n\n# Start services\nsudo systemctl start nginx php8.1-fpm invoiceninja-queue\n\necho &quot;Restore completed from: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"php-fpm-tuning\" class=\"mobile-header\">PHP-FPM Tuning</h3>\n<p class=\"mobile-paragraph\">Edit <code class=\"mobile-inline-code\">/etc/php/8.1/fpm/pool.d/www.conf</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"ini\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">ini</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-ini\">pm = dynamic\npm.max_children = 50\npm.start_servers = 10\npm.min_spare_servers = 5\npm.max_spare_servers = 20\npm.max_requests = 500\n\n; Increase memory and execution limits\nphp_admin_value[memory_limit] = 256M\nphp_admin_value[max_execution_time] = 300\nphp_admin_value[post_max_size] = 50M\nphp_admin_value[upload_max_filesize] = 50M</code></pre>\n      </div>\n    </div>\n<h3 id=\"redis-optimization\" class=\"mobile-header\">Redis Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure Redis\nsudo nano /etc/redis/redis.conf\n\n# Add/modify:\nmaxmemory 1gb\nmaxmemory-policy allkeys-lru\nsave &quot;&quot;  # Disable persistence for cache</code></pre>\n      </div>\n    </div>\n<h3 id=\"database-optimization\" class=\"mobile-header\">Database Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"sql\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">sql</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-sql\">-- Optimize tables\nOPTIMIZE TABLE clients, invoices, payments, products;\n\n-- Add indexes\nCREATE INDEX idx_invoices_client_id ON invoices(client_id);\nCREATE INDEX idx_invoices_date ON invoices(invoice_date);\nCREATE INDEX idx_payments_invoice_id ON payments(invoice_id);</code></pre>\n      </div>\n    </div>\n<h3 id=\"laravel-optimization\" class=\"mobile-header\">Laravel Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Cache configuration\nphp artisan config:cache\nphp artisan route:cache\nphp artisan view:cache\n\n# Optimize autoloader\ncomposer install --optimize-autoloader --no-dev\n\n# Enable OPcache\nsudo phpenmod opcache</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"health-checks\" class=\"mobile-header\">Health Checks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check application health\ncurl https://invoice.example.com/api/v1/health\n\n# Check queue status\nphp artisan queue:monitor\n\n# Check failed jobs\nphp artisan queue:failed</code></pre>\n      </div>\n    </div>\n<h3 id=\"logging\" class=\"mobile-header\">Logging</h3>\n<p class=\"mobile-paragraph\">Configure in <code class=\"mobile-inline-code\">.env</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log channel\nLOG_CHANNEL=daily\n\n# Log level\nLOG_LEVEL=error\n\n# Log retention\nLOG_DEPRECATIONS_CHANNEL=null\nLOG_DAYS=14</code></pre>\n      </div>\n    </div>\n<h3 id=\"application-monitoring\" class=\"mobile-header\">Application Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable Laravel Telescope (development)\ncomposer require laravel/telescope --dev\nphp artisan telescope:install\nphp artisan migrate\n\n# Enable Sentry (production)\nSENTRY_LARAVEL_DSN=https://xxxxx@sentry.io/xxxxx</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>500 Internal Server Error</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check permissions\nsudo chown -R www-data:www-data /var/www/invoiceninja\nsudo chmod -R 755 /var/www/invoiceninja\nsudo chmod -R 775 /var/www/invoiceninja/storage\nsudo chmod -R 775 /var/www/invoiceninja/bootstrap/cache\n\n# Clear cache\nphp artisan cache:clear\nphp artisan config:clear\nphp artisan view:clear</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>PDF generation issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install required packages\nsudo apt install -y chromium-browser\n\n# Configure in .env\nPDF_GENERATOR=snappdf\nSNAPPDF_EXECUTABLE_PATH=/usr/bin/chromium-browser</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Email not sending</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Test email configuration\nphp artisan tinker\n&gt;&gt;&gt; Mail::raw(&#039;Test email&#039;, function($message) {\n...     $message-&gt;to(&#039;test@example.com&#039;)-&gt;subject(&#039;Test&#039;);\n... });\n\n# Check queue\nphp artisan queue:work --once</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode\" class=\"mobile-header\">Debug Mode</h3>\n<p class=\"mobile-paragraph\">Enable debug mode (development only):</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># In .env\nAPP_DEBUG=true\nAPP_ENV=local\n\n# View logs\ntail -f storage/logs/laravel.log</code></pre>\n      </div>\n    </div>\n<h2 id=\"upgrade-process\" class=\"mobile-header\">Upgrade Process</h2>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Backup first!\n./backup-invoiceninja.sh\n\n# Put application in maintenance mode\nphp artisan down\n\n# Pull latest code\ngit fetch --tags\ngit checkout tags/v5.x.x\n\n# Update dependencies\ncomposer install --no-dev\nnpm install\nnpm run production\n\n# Run migrations\nphp artisan migrate --force\n\n# Clear caches\nphp artisan cache:clear\nphp artisan config:cache\nphp artisan view:cache\n\n# Bring application back online\nphp artisan up</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\"><a href=\"https://invoiceninja.github.io/docs/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Official Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://github.com/invoiceninja/invoiceninja\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">GitHub Repository</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://forum.invoiceninja.com/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Community Forum</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://api-docs.invoiceninja.com/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">API Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://invoiceninja.slack.com/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Slack Community</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://www.youtube.com/channel/UCXAHcBvhW05PDtWYIq7WDFA\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Video Tutorials</a></li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"9 min","wordCount":1717,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"Docker Installation (Recommended)","id":"docker-installation-recommended"},{"level":3,"text":"Manual Installation","id":"manual-installation"},{"level":2,"text":"4. Configuration","id":"4-configuration"},{"level":3,"text":"Nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Queue Worker","id":"queue-worker"},{"level":3,"text":"Cron Jobs","id":"cron-jobs"},{"level":3,"text":"Email Configuration","id":"email-configuration"},{"level":3,"text":"Payment Gateways","id":"payment-gateways"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":3,"text":"Multi-Company Setup","id":"multi-company-setup"},{"level":3,"text":"Custom PDF Templates","id":"custom-pdf-templates"},{"level":3,"text":"API Configuration","id":"api-configuration"},{"level":3,"text":"Webhook Configuration","id":"webhook-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Two-Factor Authentication","id":"two-factor-authentication"},{"level":3,"text":"IP Whitelisting","id":"ip-whitelisting"},{"level":3,"text":"Security Headers","id":"security-headers"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Script","id":"restore-script"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"PHP-FPM Tuning","id":"php-fpm-tuning"},{"level":3,"text":"Redis Optimization","id":"redis-optimization"},{"level":3,"text":"Database Optimization","id":"database-optimization"},{"level":3,"text":"Laravel Optimization","id":"laravel-optimization"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Health Checks","id":"health-checks"},{"level":3,"text":"Logging","id":"logging"},{"level":3,"text":"Application Monitoring","id":"application-monitoring"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":3,"text":"Debug Mode","id":"debug-mode"},{"level":2,"text":"Upgrade Process","id":"upgrade-process"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-09-28T06:15:48.059Z","metadataVersion":"2.0"},"category":{"key":"business-applications","name":"Business applications","description":"Business applications tools and applications","icon":"📝","color":"#ff79c6"},"relatedGuides":[{"name":"akaunting","displayName":"akaunting Installation Guide","slug":"akaunting","description":"akaunting is a free and open-source accounting software. Akaunting provides free accounting software for small businesses","category":"business-applications","subcategory":"business-applications","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["business-applications","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/business-applications/akaunting","documentationUrl":"https://howtomgr.github.io/business-applications/akaunting","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/akaunting","updatedAt":"2025-09-16T16:56:22Z","createdAt":"2025-09-16T02:17:13Z","readmeRaw":"# akaunting Installation Guide\n\nakaunting is a free and open-source accounting software. Akaunting provides free accounting software for small businesses\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 1 core minimum\n  - RAM: 1GB minimum\n  - Storage: 2GB for data\n  - Network: HTTP/HTTPS access\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 80 (default akaunting port)\n  - None\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install akaunting\nsudo dnf install -y akaunting\n\n# Enable and start service\nsudo systemctl enable --now akaunting\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nakaunting --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install akaunting\nsudo apt install -y akaunting\n\n# Enable and start service\nsudo systemctl enable --now akaunting\n\n# Configure firewall\nsudo ufw allow 80\n\n# Verify installation\nakaunting --version\n```\n\n### Arch Linux\n\n```bash\n# Install akaunting\nsudo pacman -S akaunting\n\n# Enable and start service\nsudo systemctl enable --now akaunting\n\n# Verify installation\nakaunting --version\n```\n\n### Alpine Linux\n\n```bash\n# Install akaunting\napk add --no-cache akaunting\n\n# Enable and start service\nrc-update add akaunting default\nrc-service akaunting start\n\n# Verify installation\nakaunting --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install akaunting\nsudo zypper install -y akaunting\n\n# Enable and start service\nsudo systemctl enable --now akaunting\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nakaunting --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install akaunting\n\n# Start service\nbrew services start akaunting\n\n# Verify installation\nakaunting --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install akaunting\n\n# Enable in rc.conf\necho 'akaunting_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice akaunting start\n\n# Verify installation\nakaunting --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install akaunting\n\n# Or using Scoop\nscoop install akaunting\n\n# Verify installation\nakaunting --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/akaunting\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nakaunting --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable akaunting\n\n# Start service\nsudo systemctl start akaunting\n\n# Stop service\nsudo systemctl stop akaunting\n\n# Restart service\nsudo systemctl restart akaunting\n\n# Check status\nsudo systemctl status akaunting\n\n# View logs\nsudo journalctl -u akaunting -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add akaunting default\n\n# Start service\nrc-service akaunting start\n\n# Stop service\nrc-service akaunting stop\n\n# Restart service\nrc-service akaunting restart\n\n# Check status\nrc-service akaunting status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'akaunting_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice akaunting start\n\n# Stop service\nservice akaunting stop\n\n# Restart service\nservice akaunting restart\n\n# Check status\nservice akaunting status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start akaunting\nbrew services stop akaunting\nbrew services restart akaunting\n\n# Check status\nbrew services list | grep akaunting\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start akaunting\n\n# Stop service\nnet stop akaunting\n\n# Using PowerShell\nStart-Service akaunting\nStop-Service akaunting\nRestart-Service akaunting\n\n# Check status\nGet-Service akaunting\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream akaunting_backend {\n    server 127.0.0.1:80;\n}\n\nserver {\n    listen 80;\n    server_name akaunting.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name akaunting.example.com;\n\n    ssl_certificate /etc/ssl/certs/akaunting.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/akaunting.example.com.key;\n\n    location / {\n        proxy_pass http://akaunting_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName akaunting.example.com\n    Redirect permanent / https://akaunting.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName akaunting.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/akaunting.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/akaunting.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:80/\n    ProxyPassReverse / http://127.0.0.1:80/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend akaunting_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/akaunting.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend akaunting_backend\n\nbackend akaunting_backend\n    balance roundrobin\n    server akaunting1 127.0.0.1:80 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R akaunting:akaunting /etc/akaunting\nsudo chmod 750 /etc/akaunting\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status akaunting\n\n# View logs\nsudo journalctl -u akaunting -f\n\n# Monitor resource usage\ntop -p $(pgrep akaunting)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/akaunting\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/akaunting-backup-$DATE.tar.gz\" /etc/akaunting /var/lib/akaunting\n\necho \"Backup completed: $BACKUP_DIR/akaunting-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop akaunting\n\n# Restore from backup\ntar -xzf /backup/akaunting/akaunting-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start akaunting\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u akaunting -n 100\nsudo tail -f /var/log/akaunting/akaunting.log\n\n# Check configuration\nakaunting --version\n\n# Check permissions\nls -la /etc/akaunting\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 80\n\n# Test connectivity\ntelnet localhost 80\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep akaunting)\n\n# Check disk I/O\niotop -p $(pgrep akaunting)\n\n# Check connections\nss -an | grep 80\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  akaunting:\n    image: akaunting:latest\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./config:/etc/akaunting\n      - ./data:/var/lib/akaunting\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update akaunting\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade akaunting\n\n# Arch Linux\nsudo pacman -Syu akaunting\n\n# Alpine Linux\napk update && apk upgrade akaunting\n\n# openSUSE\nsudo zypper update akaunting\n\n# FreeBSD\npkg update && pkg upgrade akaunting\n\n# Always backup before updates\ntar -czf /backup/akaunting-pre-update-$(date +%Y%m%d).tar.gz /etc/akaunting\n\n# Restart after updates\nsudo systemctl restart akaunting\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/akaunting\n\n# Clean old logs\nfind /var/log/akaunting -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/akaunting\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.akaunting.org/\n- GitHub Repository: https://github.com/akaunting/akaunting\n- Community Forum: https://forum.akaunting.org/\n- Best Practices Guide: https://docs.akaunting.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">akaunting is a free and open-source accounting software. Akaunting provides free accounting software for small businesses</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 1 core minimum</li>\n<li class=\"mobile-list-item\">RAM: 1GB minimum</li>\n<li class=\"mobile-list-item\">Storage: 2GB for data</li>\n<li class=\"mobile-list-item\">Network: HTTP/HTTPS access</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 80 (default akaunting port)</li>\n<li class=\"mobile-list-item\">None</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install akaunting\nsudo dnf install -y akaunting\n\n# Enable and start service\nsudo systemctl enable --now akaunting\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nakaunting --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install akaunting\nsudo apt install -y akaunting\n\n# Enable and start service\nsudo systemctl enable --now akaunting\n\n# Configure firewall\nsudo ufw allow 80\n\n# Verify installation\nakaunting --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install akaunting\nsudo pacman -S akaunting\n\n# Enable and start service\nsudo systemctl enable --now akaunting\n\n# Verify installation\nakaunting --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install akaunting\napk add --no-cache akaunting\n\n# Enable and start service\nrc-update add akaunting default\nrc-service akaunting start\n\n# Verify installation\nakaunting --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install akaunting\nsudo zypper install -y akaunting\n\n# Enable and start service\nsudo systemctl enable --now akaunting\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nakaunting --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install akaunting\n\n# Start service\nbrew services start akaunting\n\n# Verify installation\nakaunting --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install akaunting\n\n# Enable in rc.conf\necho &#039;akaunting_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice akaunting start\n\n# Verify installation\nakaunting --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install akaunting\n\n# Or using Scoop\nscoop install akaunting\n\n# Verify installation\nakaunting --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/akaunting\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nakaunting --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable akaunting\n\n# Start service\nsudo systemctl start akaunting\n\n# Stop service\nsudo systemctl stop akaunting\n\n# Restart service\nsudo systemctl restart akaunting\n\n# Check status\nsudo systemctl status akaunting\n\n# View logs\nsudo journalctl -u akaunting -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add akaunting default\n\n# Start service\nrc-service akaunting start\n\n# Stop service\nrc-service akaunting stop\n\n# Restart service\nrc-service akaunting restart\n\n# Check status\nrc-service akaunting status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;akaunting_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice akaunting start\n\n# Stop service\nservice akaunting stop\n\n# Restart service\nservice akaunting restart\n\n# Check status\nservice akaunting status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start akaunting\nbrew services stop akaunting\nbrew services restart akaunting\n\n# Check status\nbrew services list | grep akaunting</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start akaunting\n\n# Stop service\nnet stop akaunting\n\n# Using PowerShell\nStart-Service akaunting\nStop-Service akaunting\nRestart-Service akaunting\n\n# Check status\nGet-Service akaunting</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream akaunting_backend {\n    server 127.0.0.1:80;\n}\n\nserver {\n    listen 80;\n    server_name akaunting.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name akaunting.example.com;\n\n    ssl_certificate /etc/ssl/certs/akaunting.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/akaunting.example.com.key;\n\n    location / {\n        proxy_pass http://akaunting_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName akaunting.example.com\n    Redirect permanent / https://akaunting.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName akaunting.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/akaunting.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/akaunting.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:80/\n    ProxyPassReverse / http://127.0.0.1:80/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend akaunting_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/akaunting.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend akaunting_backend\n\nbackend akaunting_backend\n    balance roundrobin\n    server akaunting1 127.0.0.1:80 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R akaunting:akaunting /etc/akaunting\nsudo chmod 750 /etc/akaunting\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status akaunting\n\n# View logs\nsudo journalctl -u akaunting -f\n\n# Monitor resource usage\ntop -p $(pgrep akaunting)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/akaunting&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/akaunting-backup-$DATE.tar.gz&quot; /etc/akaunting /var/lib/akaunting\n\necho &quot;Backup completed: $BACKUP_DIR/akaunting-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop akaunting\n\n# Restore from backup\ntar -xzf /backup/akaunting/akaunting-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start akaunting</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u akaunting -n 100\nsudo tail -f /var/log/akaunting/akaunting.log\n\n# Check configuration\nakaunting --version\n\n# Check permissions\nls -la /etc/akaunting</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 80\n\n# Test connectivity\ntelnet localhost 80\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep akaunting)\n\n# Check disk I/O\niotop -p $(pgrep akaunting)\n\n# Check connections\nss -an | grep 80</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  akaunting:\n    image: akaunting:latest\n    ports:\n      - &quot;80:80&quot;\n    volumes:\n      - ./config:/etc/akaunting\n      - ./data:/var/lib/akaunting\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update akaunting\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade akaunting\n\n# Arch Linux\nsudo pacman -Syu akaunting\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade akaunting\n\n# openSUSE\nsudo zypper update akaunting\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade akaunting\n\n# Always backup before updates\ntar -czf /backup/akaunting-pre-update-$(date +%Y%m%d).tar.gz /etc/akaunting\n\n# Restart after updates\nsudo systemctl restart akaunting</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/akaunting\n\n# Clean old logs\nfind /var/log/akaunting -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/akaunting</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.akaunting.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/akaunting/akaunting</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.akaunting.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.akaunting.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1268,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-09-28T06:16:56.600Z","metadataVersion":"2.0"},{"name":"dolibarr","displayName":"dolibarr Installation Guide","slug":"dolibarr","description":"dolibarr is a free and open-source ERP/CRM system. Dolibarr provides ERP/CRM for small and medium businesses","category":"business-applications","subcategory":"business-applications","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["business-applications","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/business-applications/dolibarr","documentationUrl":"https://howtomgr.github.io/business-applications/dolibarr","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/dolibarr","updatedAt":"2025-09-16T17:08:38Z","createdAt":"2025-09-16T02:32:20Z","readmeRaw":"# dolibarr Installation Guide\n\ndolibarr is a free and open-source ERP/CRM system. Dolibarr provides ERP/CRM for small and medium businesses\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 1 core minimum\n  - RAM: 1GB minimum\n  - Storage: 5GB for data\n  - Network: HTTP/HTTPS access\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 80 (default dolibarr port)\n  - None\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install dolibarr\nsudo dnf install -y dolibarr\n\n# Enable and start service\nsudo systemctl enable --now dolibarr\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\ndolibarr --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install dolibarr\nsudo apt install -y dolibarr\n\n# Enable and start service\nsudo systemctl enable --now dolibarr\n\n# Configure firewall\nsudo ufw allow 80\n\n# Verify installation\ndolibarr --version\n```\n\n### Arch Linux\n\n```bash\n# Install dolibarr\nsudo pacman -S dolibarr\n\n# Enable and start service\nsudo systemctl enable --now dolibarr\n\n# Verify installation\ndolibarr --version\n```\n\n### Alpine Linux\n\n```bash\n# Install dolibarr\napk add --no-cache dolibarr\n\n# Enable and start service\nrc-update add dolibarr default\nrc-service dolibarr start\n\n# Verify installation\ndolibarr --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install dolibarr\nsudo zypper install -y dolibarr\n\n# Enable and start service\nsudo systemctl enable --now dolibarr\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\ndolibarr --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install dolibarr\n\n# Start service\nbrew services start dolibarr\n\n# Verify installation\ndolibarr --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install dolibarr\n\n# Enable in rc.conf\necho 'dolibarr_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice dolibarr start\n\n# Verify installation\ndolibarr --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install dolibarr\n\n# Or using Scoop\nscoop install dolibarr\n\n# Verify installation\ndolibarr --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/dolibarr\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\ndolibarr --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable dolibarr\n\n# Start service\nsudo systemctl start dolibarr\n\n# Stop service\nsudo systemctl stop dolibarr\n\n# Restart service\nsudo systemctl restart dolibarr\n\n# Check status\nsudo systemctl status dolibarr\n\n# View logs\nsudo journalctl -u dolibarr -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add dolibarr default\n\n# Start service\nrc-service dolibarr start\n\n# Stop service\nrc-service dolibarr stop\n\n# Restart service\nrc-service dolibarr restart\n\n# Check status\nrc-service dolibarr status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'dolibarr_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice dolibarr start\n\n# Stop service\nservice dolibarr stop\n\n# Restart service\nservice dolibarr restart\n\n# Check status\nservice dolibarr status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start dolibarr\nbrew services stop dolibarr\nbrew services restart dolibarr\n\n# Check status\nbrew services list | grep dolibarr\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start dolibarr\n\n# Stop service\nnet stop dolibarr\n\n# Using PowerShell\nStart-Service dolibarr\nStop-Service dolibarr\nRestart-Service dolibarr\n\n# Check status\nGet-Service dolibarr\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream dolibarr_backend {\n    server 127.0.0.1:80;\n}\n\nserver {\n    listen 80;\n    server_name dolibarr.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name dolibarr.example.com;\n\n    ssl_certificate /etc/ssl/certs/dolibarr.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/dolibarr.example.com.key;\n\n    location / {\n        proxy_pass http://dolibarr_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName dolibarr.example.com\n    Redirect permanent / https://dolibarr.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName dolibarr.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/dolibarr.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/dolibarr.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:80/\n    ProxyPassReverse / http://127.0.0.1:80/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend dolibarr_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/dolibarr.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend dolibarr_backend\n\nbackend dolibarr_backend\n    balance roundrobin\n    server dolibarr1 127.0.0.1:80 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R dolibarr:dolibarr /etc/dolibarr\nsudo chmod 750 /etc/dolibarr\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status dolibarr\n\n# View logs\nsudo journalctl -u dolibarr -f\n\n# Monitor resource usage\ntop -p $(pgrep dolibarr)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/dolibarr\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/dolibarr-backup-$DATE.tar.gz\" /etc/dolibarr /var/lib/dolibarr\n\necho \"Backup completed: $BACKUP_DIR/dolibarr-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop dolibarr\n\n# Restore from backup\ntar -xzf /backup/dolibarr/dolibarr-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start dolibarr\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u dolibarr -n 100\nsudo tail -f /var/log/dolibarr/dolibarr.log\n\n# Check configuration\ndolibarr --version\n\n# Check permissions\nls -la /etc/dolibarr\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 80\n\n# Test connectivity\ntelnet localhost 80\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep dolibarr)\n\n# Check disk I/O\niotop -p $(pgrep dolibarr)\n\n# Check connections\nss -an | grep 80\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  dolibarr:\n    image: dolibarr:latest\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./config:/etc/dolibarr\n      - ./data:/var/lib/dolibarr\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update dolibarr\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade dolibarr\n\n# Arch Linux\nsudo pacman -Syu dolibarr\n\n# Alpine Linux\napk update && apk upgrade dolibarr\n\n# openSUSE\nsudo zypper update dolibarr\n\n# FreeBSD\npkg update && pkg upgrade dolibarr\n\n# Always backup before updates\ntar -czf /backup/dolibarr-pre-update-$(date +%Y%m%d).tar.gz /etc/dolibarr\n\n# Restart after updates\nsudo systemctl restart dolibarr\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/dolibarr\n\n# Clean old logs\nfind /var/log/dolibarr -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/dolibarr\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.dolibarr.org/\n- GitHub Repository: https://github.com/dolibarr/dolibarr\n- Community Forum: https://forum.dolibarr.org/\n- Best Practices Guide: https://docs.dolibarr.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">dolibarr is a free and open-source ERP/CRM system. Dolibarr provides ERP/CRM for small and medium businesses</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 1 core minimum</li>\n<li class=\"mobile-list-item\">RAM: 1GB minimum</li>\n<li class=\"mobile-list-item\">Storage: 5GB for data</li>\n<li class=\"mobile-list-item\">Network: HTTP/HTTPS access</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 80 (default dolibarr port)</li>\n<li class=\"mobile-list-item\">None</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install dolibarr\nsudo dnf install -y dolibarr\n\n# Enable and start service\nsudo systemctl enable --now dolibarr\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\ndolibarr --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install dolibarr\nsudo apt install -y dolibarr\n\n# Enable and start service\nsudo systemctl enable --now dolibarr\n\n# Configure firewall\nsudo ufw allow 80\n\n# Verify installation\ndolibarr --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install dolibarr\nsudo pacman -S dolibarr\n\n# Enable and start service\nsudo systemctl enable --now dolibarr\n\n# Verify installation\ndolibarr --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install dolibarr\napk add --no-cache dolibarr\n\n# Enable and start service\nrc-update add dolibarr default\nrc-service dolibarr start\n\n# Verify installation\ndolibarr --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install dolibarr\nsudo zypper install -y dolibarr\n\n# Enable and start service\nsudo systemctl enable --now dolibarr\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\ndolibarr --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install dolibarr\n\n# Start service\nbrew services start dolibarr\n\n# Verify installation\ndolibarr --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install dolibarr\n\n# Enable in rc.conf\necho &#039;dolibarr_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice dolibarr start\n\n# Verify installation\ndolibarr --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install dolibarr\n\n# Or using Scoop\nscoop install dolibarr\n\n# Verify installation\ndolibarr --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/dolibarr\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\ndolibarr --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable dolibarr\n\n# Start service\nsudo systemctl start dolibarr\n\n# Stop service\nsudo systemctl stop dolibarr\n\n# Restart service\nsudo systemctl restart dolibarr\n\n# Check status\nsudo systemctl status dolibarr\n\n# View logs\nsudo journalctl -u dolibarr -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add dolibarr default\n\n# Start service\nrc-service dolibarr start\n\n# Stop service\nrc-service dolibarr stop\n\n# Restart service\nrc-service dolibarr restart\n\n# Check status\nrc-service dolibarr status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;dolibarr_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice dolibarr start\n\n# Stop service\nservice dolibarr stop\n\n# Restart service\nservice dolibarr restart\n\n# Check status\nservice dolibarr status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start dolibarr\nbrew services stop dolibarr\nbrew services restart dolibarr\n\n# Check status\nbrew services list | grep dolibarr</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start dolibarr\n\n# Stop service\nnet stop dolibarr\n\n# Using PowerShell\nStart-Service dolibarr\nStop-Service dolibarr\nRestart-Service dolibarr\n\n# Check status\nGet-Service dolibarr</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream dolibarr_backend {\n    server 127.0.0.1:80;\n}\n\nserver {\n    listen 80;\n    server_name dolibarr.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name dolibarr.example.com;\n\n    ssl_certificate /etc/ssl/certs/dolibarr.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/dolibarr.example.com.key;\n\n    location / {\n        proxy_pass http://dolibarr_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName dolibarr.example.com\n    Redirect permanent / https://dolibarr.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName dolibarr.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/dolibarr.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/dolibarr.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:80/\n    ProxyPassReverse / http://127.0.0.1:80/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend dolibarr_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/dolibarr.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend dolibarr_backend\n\nbackend dolibarr_backend\n    balance roundrobin\n    server dolibarr1 127.0.0.1:80 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R dolibarr:dolibarr /etc/dolibarr\nsudo chmod 750 /etc/dolibarr\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status dolibarr\n\n# View logs\nsudo journalctl -u dolibarr -f\n\n# Monitor resource usage\ntop -p $(pgrep dolibarr)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/dolibarr&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/dolibarr-backup-$DATE.tar.gz&quot; /etc/dolibarr /var/lib/dolibarr\n\necho &quot;Backup completed: $BACKUP_DIR/dolibarr-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop dolibarr\n\n# Restore from backup\ntar -xzf /backup/dolibarr/dolibarr-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start dolibarr</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u dolibarr -n 100\nsudo tail -f /var/log/dolibarr/dolibarr.log\n\n# Check configuration\ndolibarr --version\n\n# Check permissions\nls -la /etc/dolibarr</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 80\n\n# Test connectivity\ntelnet localhost 80\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep dolibarr)\n\n# Check disk I/O\niotop -p $(pgrep dolibarr)\n\n# Check connections\nss -an | grep 80</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  dolibarr:\n    image: dolibarr:latest\n    ports:\n      - &quot;80:80&quot;\n    volumes:\n      - ./config:/etc/dolibarr\n      - ./data:/var/lib/dolibarr\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update dolibarr\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade dolibarr\n\n# Arch Linux\nsudo pacman -Syu dolibarr\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade dolibarr\n\n# openSUSE\nsudo zypper update dolibarr\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade dolibarr\n\n# Always backup before updates\ntar -czf /backup/dolibarr-pre-update-$(date +%Y%m%d).tar.gz /etc/dolibarr\n\n# Restart after updates\nsudo systemctl restart dolibarr</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/dolibarr\n\n# Clean old logs\nfind /var/log/dolibarr -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/dolibarr</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.dolibarr.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/dolibarr/dolibarr</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.dolibarr.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.dolibarr.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1268,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-09-28T06:16:21.615Z","metadataVersion":"2.0"},{"name":"odoo","displayName":"odoo Installation Guide","slug":"odoo","description":"odoo is a free and open-source business management software. Odoo provides all-in-one business software including CRM, eCommerce, accounting","category":"business-applications","subcategory":"business-applications","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,8069],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["business-applications","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/business-applications/odoo","documentationUrl":"https://howtomgr.github.io/business-applications/odoo","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/odoo","updatedAt":"2025-09-16T17:37:07Z","createdAt":"2025-09-08T03:12:44Z","readmeRaw":"# odoo Installation Guide\n\nodoo is a free and open-source business management software. Odoo provides all-in-one business software including CRM, eCommerce, accounting\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2+ cores\n  - RAM: 2GB minimum\n  - Storage: 10GB for data\n  - Network: HTTP/HTTPS access\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 8069 (default odoo port)\n  - Longpolling on 8072\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install odoo\nsudo dnf install -y odoo\n\n# Enable and start service\nsudo systemctl enable --now odoo\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8069/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nodoo --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install odoo\nsudo apt install -y odoo\n\n# Enable and start service\nsudo systemctl enable --now odoo\n\n# Configure firewall\nsudo ufw allow 8069\n\n# Verify installation\nodoo --version\n```\n\n### Arch Linux\n\n```bash\n# Install odoo\nsudo pacman -S odoo\n\n# Enable and start service\nsudo systemctl enable --now odoo\n\n# Verify installation\nodoo --version\n```\n\n### Alpine Linux\n\n```bash\n# Install odoo\napk add --no-cache odoo\n\n# Enable and start service\nrc-update add odoo default\nrc-service odoo start\n\n# Verify installation\nodoo --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install odoo\nsudo zypper install -y odoo\n\n# Enable and start service\nsudo systemctl enable --now odoo\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8069/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nodoo --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install odoo\n\n# Start service\nbrew services start odoo\n\n# Verify installation\nodoo --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install odoo\n\n# Enable in rc.conf\necho 'odoo_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice odoo start\n\n# Verify installation\nodoo --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install odoo\n\n# Or using Scoop\nscoop install odoo\n\n# Verify installation\nodoo --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/odoo\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nodoo --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable odoo\n\n# Start service\nsudo systemctl start odoo\n\n# Stop service\nsudo systemctl stop odoo\n\n# Restart service\nsudo systemctl restart odoo\n\n# Check status\nsudo systemctl status odoo\n\n# View logs\nsudo journalctl -u odoo -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add odoo default\n\n# Start service\nrc-service odoo start\n\n# Stop service\nrc-service odoo stop\n\n# Restart service\nrc-service odoo restart\n\n# Check status\nrc-service odoo status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'odoo_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice odoo start\n\n# Stop service\nservice odoo stop\n\n# Restart service\nservice odoo restart\n\n# Check status\nservice odoo status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start odoo\nbrew services stop odoo\nbrew services restart odoo\n\n# Check status\nbrew services list | grep odoo\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start odoo\n\n# Stop service\nnet stop odoo\n\n# Using PowerShell\nStart-Service odoo\nStop-Service odoo\nRestart-Service odoo\n\n# Check status\nGet-Service odoo\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream odoo_backend {\n    server 127.0.0.1:8069;\n}\n\nserver {\n    listen 80;\n    server_name odoo.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name odoo.example.com;\n\n    ssl_certificate /etc/ssl/certs/odoo.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/odoo.example.com.key;\n\n    location / {\n        proxy_pass http://odoo_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName odoo.example.com\n    Redirect permanent / https://odoo.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName odoo.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/odoo.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/odoo.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:8069/\n    ProxyPassReverse / http://127.0.0.1:8069/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend odoo_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/odoo.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend odoo_backend\n\nbackend odoo_backend\n    balance roundrobin\n    server odoo1 127.0.0.1:8069 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R odoo:odoo /etc/odoo\nsudo chmod 750 /etc/odoo\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8069/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status odoo\n\n# View logs\nsudo journalctl -u odoo -f\n\n# Monitor resource usage\ntop -p $(pgrep odoo)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/odoo\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/odoo-backup-$DATE.tar.gz\" /etc/odoo /var/lib/odoo\n\necho \"Backup completed: $BACKUP_DIR/odoo-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop odoo\n\n# Restore from backup\ntar -xzf /backup/odoo/odoo-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start odoo\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u odoo -n 100\nsudo tail -f /var/log/odoo/odoo.log\n\n# Check configuration\nodoo --version\n\n# Check permissions\nls -la /etc/odoo\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 8069\n\n# Test connectivity\ntelnet localhost 8069\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep odoo)\n\n# Check disk I/O\niotop -p $(pgrep odoo)\n\n# Check connections\nss -an | grep 8069\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  odoo:\n    image: odoo:latest\n    ports:\n      - \"8069:8069\"\n    volumes:\n      - ./config:/etc/odoo\n      - ./data:/var/lib/odoo\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update odoo\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade odoo\n\n# Arch Linux\nsudo pacman -Syu odoo\n\n# Alpine Linux\napk update && apk upgrade odoo\n\n# openSUSE\nsudo zypper update odoo\n\n# FreeBSD\npkg update && pkg upgrade odoo\n\n# Always backup before updates\ntar -czf /backup/odoo-pre-update-$(date +%Y%m%d).tar.gz /etc/odoo\n\n# Restart after updates\nsudo systemctl restart odoo\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/odoo\n\n# Clean old logs\nfind /var/log/odoo -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/odoo\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.odoo.org/\n- GitHub Repository: https://github.com/odoo/odoo\n- Community Forum: https://forum.odoo.org/\n- Best Practices Guide: https://docs.odoo.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">odoo is a free and open-source business management software. Odoo provides all-in-one business software including CRM, eCommerce, accounting</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2+ cores</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum</li>\n<li class=\"mobile-list-item\">Storage: 10GB for data</li>\n<li class=\"mobile-list-item\">Network: HTTP/HTTPS access</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 8069 (default odoo port)</li>\n<li class=\"mobile-list-item\">Longpolling on 8072</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install odoo\nsudo dnf install -y odoo\n\n# Enable and start service\nsudo systemctl enable --now odoo\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8069/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nodoo --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install odoo\nsudo apt install -y odoo\n\n# Enable and start service\nsudo systemctl enable --now odoo\n\n# Configure firewall\nsudo ufw allow 8069\n\n# Verify installation\nodoo --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install odoo\nsudo pacman -S odoo\n\n# Enable and start service\nsudo systemctl enable --now odoo\n\n# Verify installation\nodoo --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install odoo\napk add --no-cache odoo\n\n# Enable and start service\nrc-update add odoo default\nrc-service odoo start\n\n# Verify installation\nodoo --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install odoo\nsudo zypper install -y odoo\n\n# Enable and start service\nsudo systemctl enable --now odoo\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8069/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nodoo --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install odoo\n\n# Start service\nbrew services start odoo\n\n# Verify installation\nodoo --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install odoo\n\n# Enable in rc.conf\necho &#039;odoo_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice odoo start\n\n# Verify installation\nodoo --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install odoo\n\n# Or using Scoop\nscoop install odoo\n\n# Verify installation\nodoo --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/odoo\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nodoo --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable odoo\n\n# Start service\nsudo systemctl start odoo\n\n# Stop service\nsudo systemctl stop odoo\n\n# Restart service\nsudo systemctl restart odoo\n\n# Check status\nsudo systemctl status odoo\n\n# View logs\nsudo journalctl -u odoo -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add odoo default\n\n# Start service\nrc-service odoo start\n\n# Stop service\nrc-service odoo stop\n\n# Restart service\nrc-service odoo restart\n\n# Check status\nrc-service odoo status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;odoo_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice odoo start\n\n# Stop service\nservice odoo stop\n\n# Restart service\nservice odoo restart\n\n# Check status\nservice odoo status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start odoo\nbrew services stop odoo\nbrew services restart odoo\n\n# Check status\nbrew services list | grep odoo</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start odoo\n\n# Stop service\nnet stop odoo\n\n# Using PowerShell\nStart-Service odoo\nStop-Service odoo\nRestart-Service odoo\n\n# Check status\nGet-Service odoo</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream odoo_backend {\n    server 127.0.0.1:8069;\n}\n\nserver {\n    listen 80;\n    server_name odoo.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name odoo.example.com;\n\n    ssl_certificate /etc/ssl/certs/odoo.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/odoo.example.com.key;\n\n    location / {\n        proxy_pass http://odoo_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName odoo.example.com\n    Redirect permanent / https://odoo.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName odoo.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/odoo.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/odoo.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:8069/\n    ProxyPassReverse / http://127.0.0.1:8069/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend odoo_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/odoo.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend odoo_backend\n\nbackend odoo_backend\n    balance roundrobin\n    server odoo1 127.0.0.1:8069 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R odoo:odoo /etc/odoo\nsudo chmod 750 /etc/odoo\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8069/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status odoo\n\n# View logs\nsudo journalctl -u odoo -f\n\n# Monitor resource usage\ntop -p $(pgrep odoo)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/odoo&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/odoo-backup-$DATE.tar.gz&quot; /etc/odoo /var/lib/odoo\n\necho &quot;Backup completed: $BACKUP_DIR/odoo-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop odoo\n\n# Restore from backup\ntar -xzf /backup/odoo/odoo-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start odoo</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u odoo -n 100\nsudo tail -f /var/log/odoo/odoo.log\n\n# Check configuration\nodoo --version\n\n# Check permissions\nls -la /etc/odoo</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 8069\n\n# Test connectivity\ntelnet localhost 8069\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep odoo)\n\n# Check disk I/O\niotop -p $(pgrep odoo)\n\n# Check connections\nss -an | grep 8069</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  odoo:\n    image: odoo:latest\n    ports:\n      - &quot;8069:8069&quot;\n    volumes:\n      - ./config:/etc/odoo\n      - ./data:/var/lib/odoo\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update odoo\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade odoo\n\n# Arch Linux\nsudo pacman -Syu odoo\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade odoo\n\n# openSUSE\nsudo zypper update odoo\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade odoo\n\n# Always backup before updates\ntar -czf /backup/odoo-pre-update-$(date +%Y%m%d).tar.gz /etc/odoo\n\n# Restart after updates\nsudo systemctl restart odoo</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/odoo\n\n# Clean old logs\nfind /var/log/odoo -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/odoo</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.odoo.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/odoo/odoo</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.odoo.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.odoo.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1271,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-09-28T06:15:00.610Z","metadataVersion":"2.0"}]},"__N_SSG":true}