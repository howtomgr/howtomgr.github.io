{"pageProps":{"guide":{"name":"orangefs","displayName":"orangefs Installation Guide","slug":"orangefs","description":"orangefs is a free and open-source parallel file system. OrangeFS provides scale-out parallel file system","category":"distributed-storage","subcategory":"distributed-storage","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,3334],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["distributed-storage","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/distributed-storage/orangefs","documentationUrl":"https://howtomgr.github.io/distributed-storage/orangefs","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/orangefs","updatedAt":"2025-09-16T17:39:25Z","createdAt":"2025-09-16T07:56:10Z","readmeRaw":"# orangefs Installation Guide\n\norangefs is a free and open-source parallel file system. OrangeFS provides scale-out parallel file system\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2+ cores\n  - RAM: 2GB minimum\n  - Storage: 100GB+ per server\n  - Network: Native protocol\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 3334 (default orangefs port)\n  - None\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install orangefs\nsudo dnf install -y orangefs\n\n# Enable and start service\nsudo systemctl enable --now orangefs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3334/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\norangefs --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install orangefs\nsudo apt install -y orangefs\n\n# Enable and start service\nsudo systemctl enable --now orangefs\n\n# Configure firewall\nsudo ufw allow 3334\n\n# Verify installation\norangefs --version\n```\n\n### Arch Linux\n\n```bash\n# Install orangefs\nsudo pacman -S orangefs\n\n# Enable and start service\nsudo systemctl enable --now orangefs\n\n# Verify installation\norangefs --version\n```\n\n### Alpine Linux\n\n```bash\n# Install orangefs\napk add --no-cache orangefs\n\n# Enable and start service\nrc-update add orangefs default\nrc-service orangefs start\n\n# Verify installation\norangefs --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install orangefs\nsudo zypper install -y orangefs\n\n# Enable and start service\nsudo systemctl enable --now orangefs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3334/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\norangefs --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install orangefs\n\n# Start service\nbrew services start orangefs\n\n# Verify installation\norangefs --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install orangefs\n\n# Enable in rc.conf\necho 'orangefs_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice orangefs start\n\n# Verify installation\norangefs --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install orangefs\n\n# Or using Scoop\nscoop install orangefs\n\n# Verify installation\norangefs --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/orangefs\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\norangefs --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable orangefs\n\n# Start service\nsudo systemctl start orangefs\n\n# Stop service\nsudo systemctl stop orangefs\n\n# Restart service\nsudo systemctl restart orangefs\n\n# Check status\nsudo systemctl status orangefs\n\n# View logs\nsudo journalctl -u orangefs -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add orangefs default\n\n# Start service\nrc-service orangefs start\n\n# Stop service\nrc-service orangefs stop\n\n# Restart service\nrc-service orangefs restart\n\n# Check status\nrc-service orangefs status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'orangefs_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice orangefs start\n\n# Stop service\nservice orangefs stop\n\n# Restart service\nservice orangefs restart\n\n# Check status\nservice orangefs status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start orangefs\nbrew services stop orangefs\nbrew services restart orangefs\n\n# Check status\nbrew services list | grep orangefs\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start orangefs\n\n# Stop service\nnet stop orangefs\n\n# Using PowerShell\nStart-Service orangefs\nStop-Service orangefs\nRestart-Service orangefs\n\n# Check status\nGet-Service orangefs\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream orangefs_backend {\n    server 127.0.0.1:3334;\n}\n\nserver {\n    listen 80;\n    server_name orangefs.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name orangefs.example.com;\n\n    ssl_certificate /etc/ssl/certs/orangefs.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/orangefs.example.com.key;\n\n    location / {\n        proxy_pass http://orangefs_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName orangefs.example.com\n    Redirect permanent / https://orangefs.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName orangefs.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/orangefs.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/orangefs.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:3334/\n    ProxyPassReverse / http://127.0.0.1:3334/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend orangefs_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/orangefs.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend orangefs_backend\n\nbackend orangefs_backend\n    balance roundrobin\n    server orangefs1 127.0.0.1:3334 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R orangefs:orangefs /etc/orangefs\nsudo chmod 750 /etc/orangefs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3334/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status orangefs\n\n# View logs\nsudo journalctl -u orangefs -f\n\n# Monitor resource usage\ntop -p $(pgrep orangefs)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/orangefs\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/orangefs-backup-$DATE.tar.gz\" /etc/orangefs /var/lib/orangefs\n\necho \"Backup completed: $BACKUP_DIR/orangefs-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop orangefs\n\n# Restore from backup\ntar -xzf /backup/orangefs/orangefs-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start orangefs\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u orangefs -n 100\nsudo tail -f /var/log/orangefs/orangefs.log\n\n# Check configuration\norangefs --version\n\n# Check permissions\nls -la /etc/orangefs\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 3334\n\n# Test connectivity\ntelnet localhost 3334\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep orangefs)\n\n# Check disk I/O\niotop -p $(pgrep orangefs)\n\n# Check connections\nss -an | grep 3334\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  orangefs:\n    image: orangefs:latest\n    ports:\n      - \"3334:3334\"\n    volumes:\n      - ./config:/etc/orangefs\n      - ./data:/var/lib/orangefs\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update orangefs\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade orangefs\n\n# Arch Linux\nsudo pacman -Syu orangefs\n\n# Alpine Linux\napk update && apk upgrade orangefs\n\n# openSUSE\nsudo zypper update orangefs\n\n# FreeBSD\npkg update && pkg upgrade orangefs\n\n# Always backup before updates\ntar -czf /backup/orangefs-pre-update-$(date +%Y%m%d).tar.gz /etc/orangefs\n\n# Restart after updates\nsudo systemctl restart orangefs\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/orangefs\n\n# Clean old logs\nfind /var/log/orangefs -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/orangefs\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.orangefs.org/\n- GitHub Repository: https://github.com/orangefs/orangefs\n- Community Forum: https://forum.orangefs.org/\n- Best Practices Guide: https://docs.orangefs.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">orangefs is a free and open-source parallel file system. OrangeFS provides scale-out parallel file system</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2+ cores</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum</li>\n<li class=\"mobile-list-item\">Storage: 100GB+ per server</li>\n<li class=\"mobile-list-item\">Network: Native protocol</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 3334 (default orangefs port)</li>\n<li class=\"mobile-list-item\">None</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install orangefs\nsudo dnf install -y orangefs\n\n# Enable and start service\nsudo systemctl enable --now orangefs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3334/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\norangefs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install orangefs\nsudo apt install -y orangefs\n\n# Enable and start service\nsudo systemctl enable --now orangefs\n\n# Configure firewall\nsudo ufw allow 3334\n\n# Verify installation\norangefs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install orangefs\nsudo pacman -S orangefs\n\n# Enable and start service\nsudo systemctl enable --now orangefs\n\n# Verify installation\norangefs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install orangefs\napk add --no-cache orangefs\n\n# Enable and start service\nrc-update add orangefs default\nrc-service orangefs start\n\n# Verify installation\norangefs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install orangefs\nsudo zypper install -y orangefs\n\n# Enable and start service\nsudo systemctl enable --now orangefs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3334/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\norangefs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install orangefs\n\n# Start service\nbrew services start orangefs\n\n# Verify installation\norangefs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install orangefs\n\n# Enable in rc.conf\necho &#039;orangefs_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice orangefs start\n\n# Verify installation\norangefs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install orangefs\n\n# Or using Scoop\nscoop install orangefs\n\n# Verify installation\norangefs --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/orangefs\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\norangefs --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable orangefs\n\n# Start service\nsudo systemctl start orangefs\n\n# Stop service\nsudo systemctl stop orangefs\n\n# Restart service\nsudo systemctl restart orangefs\n\n# Check status\nsudo systemctl status orangefs\n\n# View logs\nsudo journalctl -u orangefs -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add orangefs default\n\n# Start service\nrc-service orangefs start\n\n# Stop service\nrc-service orangefs stop\n\n# Restart service\nrc-service orangefs restart\n\n# Check status\nrc-service orangefs status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;orangefs_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice orangefs start\n\n# Stop service\nservice orangefs stop\n\n# Restart service\nservice orangefs restart\n\n# Check status\nservice orangefs status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start orangefs\nbrew services stop orangefs\nbrew services restart orangefs\n\n# Check status\nbrew services list | grep orangefs</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start orangefs\n\n# Stop service\nnet stop orangefs\n\n# Using PowerShell\nStart-Service orangefs\nStop-Service orangefs\nRestart-Service orangefs\n\n# Check status\nGet-Service orangefs</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream orangefs_backend {\n    server 127.0.0.1:3334;\n}\n\nserver {\n    listen 80;\n    server_name orangefs.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name orangefs.example.com;\n\n    ssl_certificate /etc/ssl/certs/orangefs.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/orangefs.example.com.key;\n\n    location / {\n        proxy_pass http://orangefs_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName orangefs.example.com\n    Redirect permanent / https://orangefs.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName orangefs.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/orangefs.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/orangefs.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:3334/\n    ProxyPassReverse / http://127.0.0.1:3334/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend orangefs_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/orangefs.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend orangefs_backend\n\nbackend orangefs_backend\n    balance roundrobin\n    server orangefs1 127.0.0.1:3334 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R orangefs:orangefs /etc/orangefs\nsudo chmod 750 /etc/orangefs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3334/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status orangefs\n\n# View logs\nsudo journalctl -u orangefs -f\n\n# Monitor resource usage\ntop -p $(pgrep orangefs)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/orangefs&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/orangefs-backup-$DATE.tar.gz&quot; /etc/orangefs /var/lib/orangefs\n\necho &quot;Backup completed: $BACKUP_DIR/orangefs-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop orangefs\n\n# Restore from backup\ntar -xzf /backup/orangefs/orangefs-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start orangefs</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u orangefs -n 100\nsudo tail -f /var/log/orangefs/orangefs.log\n\n# Check configuration\norangefs --version\n\n# Check permissions\nls -la /etc/orangefs</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 3334\n\n# Test connectivity\ntelnet localhost 3334\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep orangefs)\n\n# Check disk I/O\niotop -p $(pgrep orangefs)\n\n# Check connections\nss -an | grep 3334</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  orangefs:\n    image: orangefs:latest\n    ports:\n      - &quot;3334:3334&quot;\n    volumes:\n      - ./config:/etc/orangefs\n      - ./data:/var/lib/orangefs\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update orangefs\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade orangefs\n\n# Arch Linux\nsudo pacman -Syu orangefs\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade orangefs\n\n# openSUSE\nsudo zypper update orangefs\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade orangefs\n\n# Always backup before updates\ntar -czf /backup/orangefs-pre-update-$(date +%Y%m%d).tar.gz /etc/orangefs\n\n# Restart after updates\nsudo systemctl restart orangefs</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/orangefs\n\n# Clean old logs\nfind /var/log/orangefs -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/orangefs</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.orangefs.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/orangefs/orangefs</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.orangefs.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.orangefs.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1266,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-10-24T18:16:44.216Z","metadataVersion":"2.0"},"category":{"key":"distributed-storage","name":"Distributed storage","description":"Distributed storage tools and applications","icon":"🗄️","color":"#8be9fd"},"relatedGuides":[{"name":"beegfs","displayName":"beegfs Installation Guide","slug":"beegfs","description":"beegfs is a free and open-source parallel file system. BeeGFS provides parallel file system for performance-critical environments","category":"distributed-storage","subcategory":"distributed-storage","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,8000],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["distributed-storage","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/distributed-storage/beegfs","documentationUrl":"https://howtomgr.github.io/distributed-storage/beegfs","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/beegfs","updatedAt":"2025-09-16T16:59:55Z","createdAt":"2025-09-16T02:21:32Z","readmeRaw":"# beegfs Installation Guide\n\nbeegfs is a free and open-source parallel file system. BeeGFS provides parallel file system for performance-critical environments\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2+ cores\n  - RAM: 4GB minimum\n  - Storage: 100GB+ per target\n  - Network: Native protocol\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 8000 (default beegfs port)\n  - Various services\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install beegfs\nsudo dnf install -y beegfs\n\n# Enable and start service\nsudo systemctl enable --now beegfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8000/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nbeegfs --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install beegfs\nsudo apt install -y beegfs\n\n# Enable and start service\nsudo systemctl enable --now beegfs\n\n# Configure firewall\nsudo ufw allow 8000\n\n# Verify installation\nbeegfs --version\n```\n\n### Arch Linux\n\n```bash\n# Install beegfs\nsudo pacman -S beegfs\n\n# Enable and start service\nsudo systemctl enable --now beegfs\n\n# Verify installation\nbeegfs --version\n```\n\n### Alpine Linux\n\n```bash\n# Install beegfs\napk add --no-cache beegfs\n\n# Enable and start service\nrc-update add beegfs default\nrc-service beegfs start\n\n# Verify installation\nbeegfs --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install beegfs\nsudo zypper install -y beegfs\n\n# Enable and start service\nsudo systemctl enable --now beegfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8000/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nbeegfs --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install beegfs\n\n# Start service\nbrew services start beegfs\n\n# Verify installation\nbeegfs --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install beegfs\n\n# Enable in rc.conf\necho 'beegfs_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice beegfs start\n\n# Verify installation\nbeegfs --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install beegfs\n\n# Or using Scoop\nscoop install beegfs\n\n# Verify installation\nbeegfs --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/beegfs\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nbeegfs --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable beegfs\n\n# Start service\nsudo systemctl start beegfs\n\n# Stop service\nsudo systemctl stop beegfs\n\n# Restart service\nsudo systemctl restart beegfs\n\n# Check status\nsudo systemctl status beegfs\n\n# View logs\nsudo journalctl -u beegfs -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add beegfs default\n\n# Start service\nrc-service beegfs start\n\n# Stop service\nrc-service beegfs stop\n\n# Restart service\nrc-service beegfs restart\n\n# Check status\nrc-service beegfs status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'beegfs_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice beegfs start\n\n# Stop service\nservice beegfs stop\n\n# Restart service\nservice beegfs restart\n\n# Check status\nservice beegfs status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start beegfs\nbrew services stop beegfs\nbrew services restart beegfs\n\n# Check status\nbrew services list | grep beegfs\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start beegfs\n\n# Stop service\nnet stop beegfs\n\n# Using PowerShell\nStart-Service beegfs\nStop-Service beegfs\nRestart-Service beegfs\n\n# Check status\nGet-Service beegfs\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream beegfs_backend {\n    server 127.0.0.1:8000;\n}\n\nserver {\n    listen 80;\n    server_name beegfs.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name beegfs.example.com;\n\n    ssl_certificate /etc/ssl/certs/beegfs.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/beegfs.example.com.key;\n\n    location / {\n        proxy_pass http://beegfs_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName beegfs.example.com\n    Redirect permanent / https://beegfs.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName beegfs.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/beegfs.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/beegfs.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:8000/\n    ProxyPassReverse / http://127.0.0.1:8000/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend beegfs_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/beegfs.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend beegfs_backend\n\nbackend beegfs_backend\n    balance roundrobin\n    server beegfs1 127.0.0.1:8000 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R beegfs:beegfs /etc/beegfs\nsudo chmod 750 /etc/beegfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8000/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status beegfs\n\n# View logs\nsudo journalctl -u beegfs -f\n\n# Monitor resource usage\ntop -p $(pgrep beegfs)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/beegfs\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/beegfs-backup-$DATE.tar.gz\" /etc/beegfs /var/lib/beegfs\n\necho \"Backup completed: $BACKUP_DIR/beegfs-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop beegfs\n\n# Restore from backup\ntar -xzf /backup/beegfs/beegfs-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start beegfs\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u beegfs -n 100\nsudo tail -f /var/log/beegfs/beegfs.log\n\n# Check configuration\nbeegfs --version\n\n# Check permissions\nls -la /etc/beegfs\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 8000\n\n# Test connectivity\ntelnet localhost 8000\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep beegfs)\n\n# Check disk I/O\niotop -p $(pgrep beegfs)\n\n# Check connections\nss -an | grep 8000\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  beegfs:\n    image: beegfs:latest\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - ./config:/etc/beegfs\n      - ./data:/var/lib/beegfs\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update beegfs\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade beegfs\n\n# Arch Linux\nsudo pacman -Syu beegfs\n\n# Alpine Linux\napk update && apk upgrade beegfs\n\n# openSUSE\nsudo zypper update beegfs\n\n# FreeBSD\npkg update && pkg upgrade beegfs\n\n# Always backup before updates\ntar -czf /backup/beegfs-pre-update-$(date +%Y%m%d).tar.gz /etc/beegfs\n\n# Restart after updates\nsudo systemctl restart beegfs\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/beegfs\n\n# Clean old logs\nfind /var/log/beegfs -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/beegfs\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.beegfs.org/\n- GitHub Repository: https://github.com/beegfs/beegfs\n- Community Forum: https://forum.beegfs.org/\n- Best Practices Guide: https://docs.beegfs.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">beegfs is a free and open-source parallel file system. BeeGFS provides parallel file system for performance-critical environments</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2+ cores</li>\n<li class=\"mobile-list-item\">RAM: 4GB minimum</li>\n<li class=\"mobile-list-item\">Storage: 100GB+ per target</li>\n<li class=\"mobile-list-item\">Network: Native protocol</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 8000 (default beegfs port)</li>\n<li class=\"mobile-list-item\">Various services</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install beegfs\nsudo dnf install -y beegfs\n\n# Enable and start service\nsudo systemctl enable --now beegfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8000/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nbeegfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install beegfs\nsudo apt install -y beegfs\n\n# Enable and start service\nsudo systemctl enable --now beegfs\n\n# Configure firewall\nsudo ufw allow 8000\n\n# Verify installation\nbeegfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install beegfs\nsudo pacman -S beegfs\n\n# Enable and start service\nsudo systemctl enable --now beegfs\n\n# Verify installation\nbeegfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install beegfs\napk add --no-cache beegfs\n\n# Enable and start service\nrc-update add beegfs default\nrc-service beegfs start\n\n# Verify installation\nbeegfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install beegfs\nsudo zypper install -y beegfs\n\n# Enable and start service\nsudo systemctl enable --now beegfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8000/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nbeegfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install beegfs\n\n# Start service\nbrew services start beegfs\n\n# Verify installation\nbeegfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install beegfs\n\n# Enable in rc.conf\necho &#039;beegfs_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice beegfs start\n\n# Verify installation\nbeegfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install beegfs\n\n# Or using Scoop\nscoop install beegfs\n\n# Verify installation\nbeegfs --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/beegfs\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nbeegfs --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable beegfs\n\n# Start service\nsudo systemctl start beegfs\n\n# Stop service\nsudo systemctl stop beegfs\n\n# Restart service\nsudo systemctl restart beegfs\n\n# Check status\nsudo systemctl status beegfs\n\n# View logs\nsudo journalctl -u beegfs -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add beegfs default\n\n# Start service\nrc-service beegfs start\n\n# Stop service\nrc-service beegfs stop\n\n# Restart service\nrc-service beegfs restart\n\n# Check status\nrc-service beegfs status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;beegfs_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice beegfs start\n\n# Stop service\nservice beegfs stop\n\n# Restart service\nservice beegfs restart\n\n# Check status\nservice beegfs status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start beegfs\nbrew services stop beegfs\nbrew services restart beegfs\n\n# Check status\nbrew services list | grep beegfs</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start beegfs\n\n# Stop service\nnet stop beegfs\n\n# Using PowerShell\nStart-Service beegfs\nStop-Service beegfs\nRestart-Service beegfs\n\n# Check status\nGet-Service beegfs</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream beegfs_backend {\n    server 127.0.0.1:8000;\n}\n\nserver {\n    listen 80;\n    server_name beegfs.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name beegfs.example.com;\n\n    ssl_certificate /etc/ssl/certs/beegfs.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/beegfs.example.com.key;\n\n    location / {\n        proxy_pass http://beegfs_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName beegfs.example.com\n    Redirect permanent / https://beegfs.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName beegfs.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/beegfs.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/beegfs.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:8000/\n    ProxyPassReverse / http://127.0.0.1:8000/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend beegfs_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/beegfs.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend beegfs_backend\n\nbackend beegfs_backend\n    balance roundrobin\n    server beegfs1 127.0.0.1:8000 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R beegfs:beegfs /etc/beegfs\nsudo chmod 750 /etc/beegfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8000/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status beegfs\n\n# View logs\nsudo journalctl -u beegfs -f\n\n# Monitor resource usage\ntop -p $(pgrep beegfs)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/beegfs&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/beegfs-backup-$DATE.tar.gz&quot; /etc/beegfs /var/lib/beegfs\n\necho &quot;Backup completed: $BACKUP_DIR/beegfs-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop beegfs\n\n# Restore from backup\ntar -xzf /backup/beegfs/beegfs-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start beegfs</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u beegfs -n 100\nsudo tail -f /var/log/beegfs/beegfs.log\n\n# Check configuration\nbeegfs --version\n\n# Check permissions\nls -la /etc/beegfs</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 8000\n\n# Test connectivity\ntelnet localhost 8000\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep beegfs)\n\n# Check disk I/O\niotop -p $(pgrep beegfs)\n\n# Check connections\nss -an | grep 8000</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  beegfs:\n    image: beegfs:latest\n    ports:\n      - &quot;8000:8000&quot;\n    volumes:\n      - ./config:/etc/beegfs\n      - ./data:/var/lib/beegfs\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update beegfs\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade beegfs\n\n# Arch Linux\nsudo pacman -Syu beegfs\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade beegfs\n\n# openSUSE\nsudo zypper update beegfs\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade beegfs\n\n# Always backup before updates\ntar -czf /backup/beegfs-pre-update-$(date +%Y%m%d).tar.gz /etc/beegfs\n\n# Restart after updates\nsudo systemctl restart beegfs</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/beegfs\n\n# Clean old logs\nfind /var/log/beegfs -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/beegfs</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.beegfs.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/beegfs/beegfs</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.beegfs.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.beegfs.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1269,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-10-24T18:19:19.811Z","metadataVersion":"2.0"},{"name":"ceph","displayName":"ceph Installation Guide","slug":"ceph","description":"ceph is a free and open-source distributed storage. Ceph provides massively scalable distributed storage system","category":"distributed-storage","subcategory":"distributed-storage","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,6789],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["distributed-storage","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/distributed-storage/ceph","documentationUrl":"https://howtomgr.github.io/distributed-storage/ceph","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/ceph","updatedAt":"2025-09-16T17:02:34Z","createdAt":"2025-09-16T02:24:41Z","readmeRaw":"# ceph Installation Guide\n\nceph is a free and open-source distributed storage. Ceph provides massively scalable distributed storage system\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 4+ cores\n  - RAM: 4GB minimum\n  - Storage: 100GB+ per OSD\n  - Network: Various protocols\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 6789 (default ceph port)\n  - Many service ports\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install ceph\nsudo dnf install -y ceph\n\n# Enable and start service\nsudo systemctl enable --now ceph\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=6789/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nceph --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install ceph\nsudo apt install -y ceph\n\n# Enable and start service\nsudo systemctl enable --now ceph\n\n# Configure firewall\nsudo ufw allow 6789\n\n# Verify installation\nceph --version\n```\n\n### Arch Linux\n\n```bash\n# Install ceph\nsudo pacman -S ceph\n\n# Enable and start service\nsudo systemctl enable --now ceph\n\n# Verify installation\nceph --version\n```\n\n### Alpine Linux\n\n```bash\n# Install ceph\napk add --no-cache ceph\n\n# Enable and start service\nrc-update add ceph default\nrc-service ceph start\n\n# Verify installation\nceph --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install ceph\nsudo zypper install -y ceph\n\n# Enable and start service\nsudo systemctl enable --now ceph\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=6789/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nceph --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install ceph\n\n# Start service\nbrew services start ceph\n\n# Verify installation\nceph --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install ceph\n\n# Enable in rc.conf\necho 'ceph_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice ceph start\n\n# Verify installation\nceph --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install ceph\n\n# Or using Scoop\nscoop install ceph\n\n# Verify installation\nceph --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/ceph\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nceph --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable ceph\n\n# Start service\nsudo systemctl start ceph\n\n# Stop service\nsudo systemctl stop ceph\n\n# Restart service\nsudo systemctl restart ceph\n\n# Check status\nsudo systemctl status ceph\n\n# View logs\nsudo journalctl -u ceph -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add ceph default\n\n# Start service\nrc-service ceph start\n\n# Stop service\nrc-service ceph stop\n\n# Restart service\nrc-service ceph restart\n\n# Check status\nrc-service ceph status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'ceph_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice ceph start\n\n# Stop service\nservice ceph stop\n\n# Restart service\nservice ceph restart\n\n# Check status\nservice ceph status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start ceph\nbrew services stop ceph\nbrew services restart ceph\n\n# Check status\nbrew services list | grep ceph\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start ceph\n\n# Stop service\nnet stop ceph\n\n# Using PowerShell\nStart-Service ceph\nStop-Service ceph\nRestart-Service ceph\n\n# Check status\nGet-Service ceph\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream ceph_backend {\n    server 127.0.0.1:6789;\n}\n\nserver {\n    listen 80;\n    server_name ceph.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name ceph.example.com;\n\n    ssl_certificate /etc/ssl/certs/ceph.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/ceph.example.com.key;\n\n    location / {\n        proxy_pass http://ceph_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName ceph.example.com\n    Redirect permanent / https://ceph.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName ceph.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/ceph.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/ceph.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:6789/\n    ProxyPassReverse / http://127.0.0.1:6789/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend ceph_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/ceph.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend ceph_backend\n\nbackend ceph_backend\n    balance roundrobin\n    server ceph1 127.0.0.1:6789 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R ceph:ceph /etc/ceph\nsudo chmod 750 /etc/ceph\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=6789/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status ceph\n\n# View logs\nsudo journalctl -u ceph -f\n\n# Monitor resource usage\ntop -p $(pgrep ceph)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/ceph\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/ceph-backup-$DATE.tar.gz\" /etc/ceph /var/lib/ceph\n\necho \"Backup completed: $BACKUP_DIR/ceph-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop ceph\n\n# Restore from backup\ntar -xzf /backup/ceph/ceph-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start ceph\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u ceph -n 100\nsudo tail -f /var/log/ceph/ceph.log\n\n# Check configuration\nceph --version\n\n# Check permissions\nls -la /etc/ceph\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 6789\n\n# Test connectivity\ntelnet localhost 6789\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep ceph)\n\n# Check disk I/O\niotop -p $(pgrep ceph)\n\n# Check connections\nss -an | grep 6789\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  ceph:\n    image: ceph:latest\n    ports:\n      - \"6789:6789\"\n    volumes:\n      - ./config:/etc/ceph\n      - ./data:/var/lib/ceph\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update ceph\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade ceph\n\n# Arch Linux\nsudo pacman -Syu ceph\n\n# Alpine Linux\napk update && apk upgrade ceph\n\n# openSUSE\nsudo zypper update ceph\n\n# FreeBSD\npkg update && pkg upgrade ceph\n\n# Always backup before updates\ntar -czf /backup/ceph-pre-update-$(date +%Y%m%d).tar.gz /etc/ceph\n\n# Restart after updates\nsudo systemctl restart ceph\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/ceph\n\n# Clean old logs\nfind /var/log/ceph -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/ceph\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.ceph.org/\n- GitHub Repository: https://github.com/ceph/ceph\n- Community Forum: https://forum.ceph.org/\n- Best Practices Guide: https://docs.ceph.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">ceph is a free and open-source distributed storage. Ceph provides massively scalable distributed storage system</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 4+ cores</li>\n<li class=\"mobile-list-item\">RAM: 4GB minimum</li>\n<li class=\"mobile-list-item\">Storage: 100GB+ per OSD</li>\n<li class=\"mobile-list-item\">Network: Various protocols</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 6789 (default ceph port)</li>\n<li class=\"mobile-list-item\">Many service ports</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install ceph\nsudo dnf install -y ceph\n\n# Enable and start service\nsudo systemctl enable --now ceph\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=6789/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nceph --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install ceph\nsudo apt install -y ceph\n\n# Enable and start service\nsudo systemctl enable --now ceph\n\n# Configure firewall\nsudo ufw allow 6789\n\n# Verify installation\nceph --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install ceph\nsudo pacman -S ceph\n\n# Enable and start service\nsudo systemctl enable --now ceph\n\n# Verify installation\nceph --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install ceph\napk add --no-cache ceph\n\n# Enable and start service\nrc-update add ceph default\nrc-service ceph start\n\n# Verify installation\nceph --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install ceph\nsudo zypper install -y ceph\n\n# Enable and start service\nsudo systemctl enable --now ceph\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=6789/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nceph --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install ceph\n\n# Start service\nbrew services start ceph\n\n# Verify installation\nceph --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install ceph\n\n# Enable in rc.conf\necho &#039;ceph_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice ceph start\n\n# Verify installation\nceph --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install ceph\n\n# Or using Scoop\nscoop install ceph\n\n# Verify installation\nceph --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/ceph\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nceph --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable ceph\n\n# Start service\nsudo systemctl start ceph\n\n# Stop service\nsudo systemctl stop ceph\n\n# Restart service\nsudo systemctl restart ceph\n\n# Check status\nsudo systemctl status ceph\n\n# View logs\nsudo journalctl -u ceph -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add ceph default\n\n# Start service\nrc-service ceph start\n\n# Stop service\nrc-service ceph stop\n\n# Restart service\nrc-service ceph restart\n\n# Check status\nrc-service ceph status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;ceph_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice ceph start\n\n# Stop service\nservice ceph stop\n\n# Restart service\nservice ceph restart\n\n# Check status\nservice ceph status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start ceph\nbrew services stop ceph\nbrew services restart ceph\n\n# Check status\nbrew services list | grep ceph</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start ceph\n\n# Stop service\nnet stop ceph\n\n# Using PowerShell\nStart-Service ceph\nStop-Service ceph\nRestart-Service ceph\n\n# Check status\nGet-Service ceph</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream ceph_backend {\n    server 127.0.0.1:6789;\n}\n\nserver {\n    listen 80;\n    server_name ceph.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name ceph.example.com;\n\n    ssl_certificate /etc/ssl/certs/ceph.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/ceph.example.com.key;\n\n    location / {\n        proxy_pass http://ceph_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName ceph.example.com\n    Redirect permanent / https://ceph.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName ceph.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/ceph.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/ceph.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:6789/\n    ProxyPassReverse / http://127.0.0.1:6789/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend ceph_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/ceph.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend ceph_backend\n\nbackend ceph_backend\n    balance roundrobin\n    server ceph1 127.0.0.1:6789 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R ceph:ceph /etc/ceph\nsudo chmod 750 /etc/ceph\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=6789/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status ceph\n\n# View logs\nsudo journalctl -u ceph -f\n\n# Monitor resource usage\ntop -p $(pgrep ceph)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/ceph&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/ceph-backup-$DATE.tar.gz&quot; /etc/ceph /var/lib/ceph\n\necho &quot;Backup completed: $BACKUP_DIR/ceph-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop ceph\n\n# Restore from backup\ntar -xzf /backup/ceph/ceph-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start ceph</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u ceph -n 100\nsudo tail -f /var/log/ceph/ceph.log\n\n# Check configuration\nceph --version\n\n# Check permissions\nls -la /etc/ceph</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 6789\n\n# Test connectivity\ntelnet localhost 6789\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep ceph)\n\n# Check disk I/O\niotop -p $(pgrep ceph)\n\n# Check connections\nss -an | grep 6789</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  ceph:\n    image: ceph:latest\n    ports:\n      - &quot;6789:6789&quot;\n    volumes:\n      - ./config:/etc/ceph\n      - ./data:/var/lib/ceph\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update ceph\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade ceph\n\n# Arch Linux\nsudo pacman -Syu ceph\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade ceph\n\n# openSUSE\nsudo zypper update ceph\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade ceph\n\n# Always backup before updates\ntar -czf /backup/ceph-pre-update-$(date +%Y%m%d).tar.gz /etc/ceph\n\n# Restart after updates\nsudo systemctl restart ceph</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/ceph\n\n# Clean old logs\nfind /var/log/ceph -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/ceph</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.ceph.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/ceph/ceph</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.ceph.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.ceph.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1268,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-10-24T18:19:09.766Z","metadataVersion":"2.0"},{"name":"glusterfs","displayName":"glusterfs Installation Guide","slug":"glusterfs","description":"glusterfs is a free and open-source scale-out storage. GlusterFS provides scale-out network-attached storage file system","category":"distributed-storage","subcategory":"distributed-storage","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,24007],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["distributed-storage","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/distributed-storage/glusterfs","documentationUrl":"https://howtomgr.github.io/distributed-storage/glusterfs","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/glusterfs","updatedAt":"2025-09-16T17:16:21Z","createdAt":"2025-09-16T03:15:18Z","readmeRaw":"# glusterfs Installation Guide\n\nglusterfs is a free and open-source scale-out storage. GlusterFS provides scale-out network-attached storage file system\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2+ cores\n  - RAM: 4GB minimum\n  - Storage: 100GB+ per brick\n  - Network: Native/NFS/SMB\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 24007 (default glusterfs port)\n  - Bricks on 24009+\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install glusterfs\nsudo dnf install -y glusterfs\n\n# Enable and start service\nsudo systemctl enable --now glusterfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=24007/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nglusterfs --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install glusterfs\nsudo apt install -y glusterfs\n\n# Enable and start service\nsudo systemctl enable --now glusterfs\n\n# Configure firewall\nsudo ufw allow 24007\n\n# Verify installation\nglusterfs --version\n```\n\n### Arch Linux\n\n```bash\n# Install glusterfs\nsudo pacman -S glusterfs\n\n# Enable and start service\nsudo systemctl enable --now glusterfs\n\n# Verify installation\nglusterfs --version\n```\n\n### Alpine Linux\n\n```bash\n# Install glusterfs\napk add --no-cache glusterfs\n\n# Enable and start service\nrc-update add glusterfs default\nrc-service glusterfs start\n\n# Verify installation\nglusterfs --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install glusterfs\nsudo zypper install -y glusterfs\n\n# Enable and start service\nsudo systemctl enable --now glusterfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=24007/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nglusterfs --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install glusterfs\n\n# Start service\nbrew services start glusterfs\n\n# Verify installation\nglusterfs --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install glusterfs\n\n# Enable in rc.conf\necho 'glusterfs_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice glusterfs start\n\n# Verify installation\nglusterfs --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install glusterfs\n\n# Or using Scoop\nscoop install glusterfs\n\n# Verify installation\nglusterfs --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/glusterfs\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nglusterfs --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable glusterfs\n\n# Start service\nsudo systemctl start glusterfs\n\n# Stop service\nsudo systemctl stop glusterfs\n\n# Restart service\nsudo systemctl restart glusterfs\n\n# Check status\nsudo systemctl status glusterfs\n\n# View logs\nsudo journalctl -u glusterfs -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add glusterfs default\n\n# Start service\nrc-service glusterfs start\n\n# Stop service\nrc-service glusterfs stop\n\n# Restart service\nrc-service glusterfs restart\n\n# Check status\nrc-service glusterfs status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'glusterfs_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice glusterfs start\n\n# Stop service\nservice glusterfs stop\n\n# Restart service\nservice glusterfs restart\n\n# Check status\nservice glusterfs status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start glusterfs\nbrew services stop glusterfs\nbrew services restart glusterfs\n\n# Check status\nbrew services list | grep glusterfs\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start glusterfs\n\n# Stop service\nnet stop glusterfs\n\n# Using PowerShell\nStart-Service glusterfs\nStop-Service glusterfs\nRestart-Service glusterfs\n\n# Check status\nGet-Service glusterfs\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream glusterfs_backend {\n    server 127.0.0.1:24007;\n}\n\nserver {\n    listen 80;\n    server_name glusterfs.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name glusterfs.example.com;\n\n    ssl_certificate /etc/ssl/certs/glusterfs.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/glusterfs.example.com.key;\n\n    location / {\n        proxy_pass http://glusterfs_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName glusterfs.example.com\n    Redirect permanent / https://glusterfs.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName glusterfs.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/glusterfs.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/glusterfs.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:24007/\n    ProxyPassReverse / http://127.0.0.1:24007/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend glusterfs_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/glusterfs.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend glusterfs_backend\n\nbackend glusterfs_backend\n    balance roundrobin\n    server glusterfs1 127.0.0.1:24007 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R glusterfs:glusterfs /etc/glusterfs\nsudo chmod 750 /etc/glusterfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=24007/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status glusterfs\n\n# View logs\nsudo journalctl -u glusterfs -f\n\n# Monitor resource usage\ntop -p $(pgrep glusterfs)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/glusterfs\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/glusterfs-backup-$DATE.tar.gz\" /etc/glusterfs /var/lib/glusterfs\n\necho \"Backup completed: $BACKUP_DIR/glusterfs-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop glusterfs\n\n# Restore from backup\ntar -xzf /backup/glusterfs/glusterfs-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start glusterfs\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u glusterfs -n 100\nsudo tail -f /var/log/glusterfs/glusterfs.log\n\n# Check configuration\nglusterfs --version\n\n# Check permissions\nls -la /etc/glusterfs\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 24007\n\n# Test connectivity\ntelnet localhost 24007\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep glusterfs)\n\n# Check disk I/O\niotop -p $(pgrep glusterfs)\n\n# Check connections\nss -an | grep 24007\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  glusterfs:\n    image: glusterfs:latest\n    ports:\n      - \"24007:24007\"\n    volumes:\n      - ./config:/etc/glusterfs\n      - ./data:/var/lib/glusterfs\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update glusterfs\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade glusterfs\n\n# Arch Linux\nsudo pacman -Syu glusterfs\n\n# Alpine Linux\napk update && apk upgrade glusterfs\n\n# openSUSE\nsudo zypper update glusterfs\n\n# FreeBSD\npkg update && pkg upgrade glusterfs\n\n# Always backup before updates\ntar -czf /backup/glusterfs-pre-update-$(date +%Y%m%d).tar.gz /etc/glusterfs\n\n# Restart after updates\nsudo systemctl restart glusterfs\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/glusterfs\n\n# Clean old logs\nfind /var/log/glusterfs -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/glusterfs\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.glusterfs.org/\n- GitHub Repository: https://github.com/glusterfs/glusterfs\n- Community Forum: https://forum.glusterfs.org/\n- Best Practices Guide: https://docs.glusterfs.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">glusterfs is a free and open-source scale-out storage. GlusterFS provides scale-out network-attached storage file system</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2+ cores</li>\n<li class=\"mobile-list-item\">RAM: 4GB minimum</li>\n<li class=\"mobile-list-item\">Storage: 100GB+ per brick</li>\n<li class=\"mobile-list-item\">Network: Native/NFS/SMB</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 24007 (default glusterfs port)</li>\n<li class=\"mobile-list-item\">Bricks on 24009+</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install glusterfs\nsudo dnf install -y glusterfs\n\n# Enable and start service\nsudo systemctl enable --now glusterfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=24007/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nglusterfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install glusterfs\nsudo apt install -y glusterfs\n\n# Enable and start service\nsudo systemctl enable --now glusterfs\n\n# Configure firewall\nsudo ufw allow 24007\n\n# Verify installation\nglusterfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install glusterfs\nsudo pacman -S glusterfs\n\n# Enable and start service\nsudo systemctl enable --now glusterfs\n\n# Verify installation\nglusterfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install glusterfs\napk add --no-cache glusterfs\n\n# Enable and start service\nrc-update add glusterfs default\nrc-service glusterfs start\n\n# Verify installation\nglusterfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install glusterfs\nsudo zypper install -y glusterfs\n\n# Enable and start service\nsudo systemctl enable --now glusterfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=24007/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nglusterfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install glusterfs\n\n# Start service\nbrew services start glusterfs\n\n# Verify installation\nglusterfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install glusterfs\n\n# Enable in rc.conf\necho &#039;glusterfs_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice glusterfs start\n\n# Verify installation\nglusterfs --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install glusterfs\n\n# Or using Scoop\nscoop install glusterfs\n\n# Verify installation\nglusterfs --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/glusterfs\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nglusterfs --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable glusterfs\n\n# Start service\nsudo systemctl start glusterfs\n\n# Stop service\nsudo systemctl stop glusterfs\n\n# Restart service\nsudo systemctl restart glusterfs\n\n# Check status\nsudo systemctl status glusterfs\n\n# View logs\nsudo journalctl -u glusterfs -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add glusterfs default\n\n# Start service\nrc-service glusterfs start\n\n# Stop service\nrc-service glusterfs stop\n\n# Restart service\nrc-service glusterfs restart\n\n# Check status\nrc-service glusterfs status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;glusterfs_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice glusterfs start\n\n# Stop service\nservice glusterfs stop\n\n# Restart service\nservice glusterfs restart\n\n# Check status\nservice glusterfs status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start glusterfs\nbrew services stop glusterfs\nbrew services restart glusterfs\n\n# Check status\nbrew services list | grep glusterfs</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start glusterfs\n\n# Stop service\nnet stop glusterfs\n\n# Using PowerShell\nStart-Service glusterfs\nStop-Service glusterfs\nRestart-Service glusterfs\n\n# Check status\nGet-Service glusterfs</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream glusterfs_backend {\n    server 127.0.0.1:24007;\n}\n\nserver {\n    listen 80;\n    server_name glusterfs.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name glusterfs.example.com;\n\n    ssl_certificate /etc/ssl/certs/glusterfs.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/glusterfs.example.com.key;\n\n    location / {\n        proxy_pass http://glusterfs_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName glusterfs.example.com\n    Redirect permanent / https://glusterfs.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName glusterfs.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/glusterfs.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/glusterfs.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:24007/\n    ProxyPassReverse / http://127.0.0.1:24007/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend glusterfs_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/glusterfs.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend glusterfs_backend\n\nbackend glusterfs_backend\n    balance roundrobin\n    server glusterfs1 127.0.0.1:24007 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R glusterfs:glusterfs /etc/glusterfs\nsudo chmod 750 /etc/glusterfs\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=24007/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status glusterfs\n\n# View logs\nsudo journalctl -u glusterfs -f\n\n# Monitor resource usage\ntop -p $(pgrep glusterfs)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/glusterfs&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/glusterfs-backup-$DATE.tar.gz&quot; /etc/glusterfs /var/lib/glusterfs\n\necho &quot;Backup completed: $BACKUP_DIR/glusterfs-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop glusterfs\n\n# Restore from backup\ntar -xzf /backup/glusterfs/glusterfs-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start glusterfs</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u glusterfs -n 100\nsudo tail -f /var/log/glusterfs/glusterfs.log\n\n# Check configuration\nglusterfs --version\n\n# Check permissions\nls -la /etc/glusterfs</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 24007\n\n# Test connectivity\ntelnet localhost 24007\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep glusterfs)\n\n# Check disk I/O\niotop -p $(pgrep glusterfs)\n\n# Check connections\nss -an | grep 24007</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  glusterfs:\n    image: glusterfs:latest\n    ports:\n      - &quot;24007:24007&quot;\n    volumes:\n      - ./config:/etc/glusterfs\n      - ./data:/var/lib/glusterfs\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update glusterfs\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade glusterfs\n\n# Arch Linux\nsudo pacman -Syu glusterfs\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade glusterfs\n\n# openSUSE\nsudo zypper update glusterfs\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade glusterfs\n\n# Always backup before updates\ntar -czf /backup/glusterfs-pre-update-$(date +%Y%m%d).tar.gz /etc/glusterfs\n\n# Restart after updates\nsudo systemctl restart glusterfs</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/glusterfs\n\n# Clean old logs\nfind /var/log/glusterfs -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/glusterfs</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.glusterfs.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/glusterfs/glusterfs</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.glusterfs.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.glusterfs.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1267,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-10-24T18:18:16.440Z","metadataVersion":"2.0"}]},"__N_SSG":true}