{"pageProps":{"category":{"key":"mailing-lists","name":"Mailing lists","description":"Mailing lists tools and applications","icon":"ðŸ’¬","color":"#f1fa8c"},"guides":[{"name":"listmonk","displayName":"Listmonk Installation Guide","slug":"listmonk","description":"Listmonk is a free and open-source Newsletter. Self-hosted newsletter and mailing list manager","category":"mailing-lists","subcategory":"mailing-lists","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,2048,9000],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["mailing-lists","containerization","orchestration","observability","data-storage","networking","security","data-protection","communication"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/mailing-lists/listmonk","documentationUrl":"https://howtomgr.github.io/mailing-lists/listmonk","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/listmonk","updatedAt":"2025-09-16T03:35:02Z","createdAt":"2025-09-16T03:34:53Z","readmeRaw":"# Listmonk Installation Guide\n\nListmonk is a free and open-source Newsletter. Self-hosted newsletter and mailing list manager\n\n## Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2 cores minimum (4+ cores recommended)\n  - RAM: 2GB minimum (4GB+ recommended)\n  - Storage: 1GB for installation\n  - Network: 9000 ports\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 9000 (default listmonk port)\n- **Dependencies**:\n  - postgresql\n- **System Access**: root or sudo privileges required\n\n## Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install listmonk\nsudo dnf install -y listmonk postgresql\n\n# Enable and start service\nsudo systemctl enable --now listmonk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=listmonk\nsudo firewall-cmd --reload\n\n# Verify installation\nlistmonk --version || systemctl status listmonk\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install listmonk\nsudo apt install -y listmonk postgresql\n\n# Enable and start service\nsudo systemctl enable --now listmonk\n\n# Configure firewall\nsudo ufw allow 9000\n\n# Verify installation\nlistmonk --version || systemctl status listmonk\n```\n\n### Arch Linux\n\n```bash\n# Install listmonk\nsudo pacman -S listmonk\n\n# Enable and start service\nsudo systemctl enable --now listmonk\n\n# Verify installation\nlistmonk --version || systemctl status listmonk\n```\n\n### Alpine Linux\n\n```bash\n# Install listmonk\napk add --no-cache listmonk\n\n# Enable and start service\nrc-update add listmonk default\nrc-service listmonk start\n\n# Verify installation\nlistmonk --version || rc-service listmonk status\n```\n\n### openSUSE/SLES\n\n```bash\n# Install listmonk\nsudo zypper install -y listmonk postgresql\n\n# Enable and start service\nsudo systemctl enable --now listmonk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=listmonk\nsudo firewall-cmd --reload\n\n# Verify installation\nlistmonk --version || systemctl status listmonk\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install listmonk\n\n# Start service\nbrew services start listmonk\n\n# Verify installation\nlistmonk --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install listmonk\n\n# Enable in rc.conf\necho 'listmonk_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice listmonk start\n\n# Verify installation\nlistmonk --version || service listmonk status\n```\n\n### Windows\n\n```powershell\n# Using Chocolatey\nchoco install listmonk\n\n# Or using Scoop\nscoop install listmonk\n\n# Verify installation\nlistmonk --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory if needed\nsudo mkdir -p /etc/listmonk\n\n# Set up basic configuration\nsudo tee /etc/listmonk/listmonk.conf << 'EOF'\n# Listmonk Configuration\nconcurrency = 100\nEOF\n\n# Test configuration\nsudo listmonk -t || sudo listmonk configtest\n\n# Reload service\nsudo systemctl reload listmonk\n```\n\n### Security Hardening\n\n```bash\n# Set appropriate permissions\nsudo chown -R listmonk:listmonk /etc/listmonk\nsudo chmod 750 /etc/listmonk\n\n# Enable security features\n# See security section for detailed hardening steps\n```\n\n## Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable listmonk\n\n# Start service\nsudo systemctl start listmonk\n\n# Stop service\nsudo systemctl stop listmonk\n\n# Restart service\nsudo systemctl restart listmonk\n\n# Reload configuration\nsudo systemctl reload listmonk\n\n# Check status\nsudo systemctl status listmonk\n\n# View logs\nsudo journalctl -u listmonk -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add listmonk default\n\n# Start service\nrc-service listmonk start\n\n# Stop service\nrc-service listmonk stop\n\n# Restart service\nrc-service listmonk restart\n\n# Check status\nrc-service listmonk status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'listmonk_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice listmonk start\n\n# Stop service\nservice listmonk stop\n\n# Restart service\nservice listmonk restart\n\n# Check status\nservice listmonk status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start listmonk\nbrew services stop listmonk\nbrew services restart listmonk\n\n# Check status\nbrew services list | grep listmonk\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start listmonk\n\n# Stop service\nnet stop listmonk\n\n# Using PowerShell\nStart-Service listmonk\nStop-Service listmonk\nRestart-Service listmonk\n\n# Check status\nGet-Service listmonk\n```\n\n## Advanced Configuration\n\n### Performance Optimization\n\n```bash\n# Configure performance settings\ncat >> /etc/listmonk/listmonk.conf << 'EOF'\nconcurrency = 100\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart listmonk\n```\n\n### Clustering and High Availability\n\n```bash\n# Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports\n```\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream listmonk_backend {\n    server 127.0.0.1:9000;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name listmonk.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name listmonk.example.com;\n\n    ssl_certificate /etc/ssl/certs/listmonk.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/listmonk.example.com.key;\n\n    location / {\n        proxy_pass http://listmonk_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName listmonk.example.com\n    Redirect permanent / https://listmonk.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName listmonk.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/listmonk.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/listmonk.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:9000/\n    ProxyPassReverse / http://127.0.0.1:9000/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) \"ws://127.0.0.1:9000/$1\" [P,L]\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend listmonk_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/listmonk.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend listmonk_backend\n\nbackend listmonk_backend\n    balance roundrobin\n    option httpchk GET /health\n    server listmonk1 127.0.0.1:9000 check\n    server listmonk2 127.0.0.1:{default_port}1 check backup\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R listmonk:listmonk /etc/listmonk\nsudo chmod 750 /etc/listmonk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=listmonk\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/listmonk.conf << 'EOF'\n[listmonk]\nenabled = true\nport = 9000\nfilter = listmonk\nlogpath = /var/log/listmonk/*.log\nmaxretry = 5\nbantime = 3600\nEOF\n```\n\n### SSL/TLS Configuration\n\n```bash\n# Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/listmonk.key \\\n    -out /etc/ssl/certs/listmonk.crt\n\n# Configure SSL in listmonk\n# See official documentation for SSL configuration\n```\n\n## Database Setup\n\n### PostgreSQL Backend (if applicable)\n\n```bash\n# Create database and user\nsudo -u postgres psql << EOF\nCREATE DATABASE listmonk_db;\nCREATE USER listmonk_user WITH ENCRYPTED PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE listmonk_db TO listmonk_user;\nEOF\n\n# Configure listmonk to use PostgreSQL\n# See official documentation for database configuration\n```\n\n### MySQL/MariaDB Backend (if applicable)\n\n```bash\n# Create database and user\nsudo mysql << EOF\nCREATE DATABASE listmonk_db;\nCREATE USER 'listmonk_user'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON listmonk_db.* TO 'listmonk_user'@'localhost';\nFLUSH PRIVILEGES;\nEOF\n```\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Kernel parameters\nsudo tee -a /etc/sysctl.conf << EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Listmonk specific tuning\nconcurrency = 100\n```\n\n### Resource Limits\n\n```bash\n# Configure system limits\nsudo tee -a /etc/security/limits.conf << EOF\nlistmonk soft nofile 65535\nlistmonk hard nofile 65535\nlistmonk soft nproc 32768\nlistmonk hard nproc 32768\nEOF\n```\n\n## Monitoring\n\n### Prometheus Integration\n\n```yaml\n# prometheus.yml configuration\nscrape_configs:\n  - job_name: 'listmonk'\n    static_configs:\n      - targets: ['localhost:9000']\n    metrics_path: '/metrics'\n```\n\n### Health Checks\n\n```bash\n# Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet listmonk; then\n    echo \"Listmonk is running\"\n    exit 0\nelse\n    echo \"Listmonk is not running\"\n    exit 1\nfi\n```\n\n### Log Monitoring\n\n```bash\n# Configure log rotation\nsudo tee /etc/logrotate.d/listmonk << 'EOF'\n/var/log/listmonk/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 listmonk listmonk\n    postrotate\n        systemctl reload listmonk > /dev/null 2>&1 || true\n    endscript\n}\nEOF\n```\n\n## Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Listmonk backup script\nBACKUP_DIR=\"/backup/listmonk\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\n\n# Stop service (if required)\nsystemctl stop listmonk\n\n# Backup configuration\ntar -czf \"$BACKUP_DIR/listmonk-config-$DATE.tar.gz\" /etc/listmonk\n\n# Backup data (adjust paths as needed)\ntar -czf \"$BACKUP_DIR/listmonk-data-$DATE.tar.gz\" /var/lib/listmonk\n\n# Start service\nsystemctl start listmonk\n\n# Clean old backups (keep 30 days)\nfind \"$BACKUP_DIR\" -name \"*.tar.gz\" -mtime +30 -delete\n\necho \"Backup completed: $BACKUP_DIR\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop listmonk\n\n# Restore configuration\nsudo tar -xzf /backup/listmonk/listmonk-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/listmonk/listmonk-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R listmonk:listmonk /etc/listmonk\nsudo chown -R listmonk:listmonk /var/lib/listmonk\n\n# Start service\nsudo systemctl start listmonk\n```\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u listmonk -n 100\nsudo tail -f /var/log/listmonk/*.log\n\n# Check configuration\nsudo listmonk -t || sudo listmonk configtest\n\n# Check permissions\nls -la /etc/listmonk\nls -la /var/lib/listmonk\n```\n\n2. **Connection refused**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 9000\nsudo netstat -tlnp | grep 9000\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 9000\nnc -zv localhost 9000\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep listmonk)\nhtop -p $(pgrep listmonk)\n\n# Check connections\nss -ant | grep :9000 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep listmonk)\n```\n\n### Debug Mode\n\n```bash\n# Run in debug mode\nsudo listmonk -d\n# or\nsudo listmonk debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging\n```\n\n## Integration Examples\n\n### Docker Compose\n\n```yaml\nversion: '3.8'\nservices:\n  listmonk:\n    image: listmonk:latest\n    container_name: listmonk\n    ports:\n      - \"9000:9000\"\n    volumes:\n      - ./config:/etc/listmonk\n      - ./data:/var/lib/listmonk\n    environment:\n      - listmonk_CONFIG=/etc/listmonk/listmonk.conf\n    restart: unless-stopped\n    networks:\n      - listmonk_net\n\nnetworks:\n  listmonk_net:\n    driver: bridge\n```\n\n### Kubernetes Deployment\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: listmonk\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: listmonk\n  template:\n    metadata:\n      labels:\n        app: listmonk\n    spec:\n      containers:\n      - name: listmonk\n        image: listmonk:latest\n        ports:\n        - containerPort: 9000\n        volumeMounts:\n        - name: config\n          mountPath: /etc/listmonk\n      volumes:\n      - name: config\n        configMap:\n          name: listmonk-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: listmonk\nspec:\n  selector:\n    app: listmonk\n  ports:\n  - port: 9000\n    targetPort: 9000\n  type: LoadBalancer\n```\n\n### Ansible Playbook\n\n```yaml\n---\n- name: Install and configure Listmonk\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install listmonk\n      package:\n        name: listmonk\n        state: present\n    \n    - name: Configure listmonk\n      template:\n        src: listmonk.conf.j2\n        dest: /etc/listmonk/listmonk.conf\n        owner: listmonk\n        group: listmonk\n        mode: '0640'\n      notify: restart listmonk\n    \n    - name: Start and enable listmonk\n      systemd:\n        name: listmonk\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart listmonk\n      systemd:\n        name: listmonk\n        state: restarted\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update listmonk\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade listmonk\n\n# Arch Linux\nsudo pacman -Syu listmonk\n\n# Alpine Linux\napk update && apk upgrade listmonk\n\n# openSUSE\nsudo zypper update listmonk\n\n# FreeBSD\npkg update && pkg upgrade listmonk\n\n# Always backup before updates\ntar -czf /backup/listmonk-pre-update-$(date +%Y%m%d).tar.gz /etc/listmonk\n\n# Restart after updates\nsudo systemctl restart listmonk\n```\n\n### Regular Maintenance Tasks\n\n```bash\n# Clean logs\nfind /var/log/listmonk -name \"*.log\" -mtime +30 -delete\n\n# Verify integrity\nsudo listmonk --verify || sudo listmonk check\n\n# Update databases (if applicable)\nsudo listmonk-update-db\n\n# Optimize performance\nsudo listmonk-optimize\n\n# Check for security updates\nsudo listmonk --security-check\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.listmonk.org/\n- GitHub Repository: https://github.com/listmonk/listmonk\n- Community Forum: https://forum.listmonk.org/\n- Wiki: https://wiki.listmonk.org/\n- Comparison vs Mailman, Sympa, phpList, Sendy: https://docs.listmonk.org/comparison\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<h1 id=\"listmonk-installation-guide\" class=\"mobile-header\">Listmonk Installation Guide</h1>\n<p class=\"mobile-paragraph\">Listmonk is a free and open-source Newsletter. Self-hosted newsletter and mailing list manager</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2 cores minimum (4+ cores recommended)</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum (4GB+ recommended)</li>\n<li class=\"mobile-list-item\">Storage: 1GB for installation</li>\n<li class=\"mobile-list-item\">Network: 9000 ports</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 9000 (default listmonk port)</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">postgresql</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install listmonk\nsudo dnf install -y listmonk postgresql\n\n# Enable and start service\nsudo systemctl enable --now listmonk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=listmonk\nsudo firewall-cmd --reload\n\n# Verify installation\nlistmonk --version || systemctl status listmonk</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install listmonk\nsudo apt install -y listmonk postgresql\n\n# Enable and start service\nsudo systemctl enable --now listmonk\n\n# Configure firewall\nsudo ufw allow 9000\n\n# Verify installation\nlistmonk --version || systemctl status listmonk</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install listmonk\nsudo pacman -S listmonk\n\n# Enable and start service\nsudo systemctl enable --now listmonk\n\n# Verify installation\nlistmonk --version || systemctl status listmonk</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install listmonk\napk add --no-cache listmonk\n\n# Enable and start service\nrc-update add listmonk default\nrc-service listmonk start\n\n# Verify installation\nlistmonk --version || rc-service listmonk status</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install listmonk\nsudo zypper install -y listmonk postgresql\n\n# Enable and start service\nsudo systemctl enable --now listmonk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=listmonk\nsudo firewall-cmd --reload\n\n# Verify installation\nlistmonk --version || systemctl status listmonk</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install listmonk\n\n# Start service\nbrew services start listmonk\n\n# Verify installation\nlistmonk --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install listmonk\n\n# Enable in rc.conf\necho &#039;listmonk_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice listmonk start\n\n# Verify installation\nlistmonk --version || service listmonk status</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Using Chocolatey\nchoco install listmonk\n\n# Or using Scoop\nscoop install listmonk\n\n# Verify installation\nlistmonk --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory if needed\nsudo mkdir -p /etc/listmonk\n\n# Set up basic configuration\nsudo tee /etc/listmonk/listmonk.conf &lt;&lt; &#039;EOF&#039;\n# Listmonk Configuration\nconcurrency = 100\nEOF\n\n# Test configuration\nsudo listmonk -t || sudo listmonk configtest\n\n# Reload service\nsudo systemctl reload listmonk</code></pre>\n      </div>\n    </div>\n<h3 id=\"security-hardening\" class=\"mobile-header\">Security Hardening</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R listmonk:listmonk /etc/listmonk\nsudo chmod 750 /etc/listmonk\n\n# Enable security features\n# See security section for detailed hardening steps</code></pre>\n      </div>\n    </div>\n<h2 id=\"service-management\" class=\"mobile-header\">Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable listmonk\n\n# Start service\nsudo systemctl start listmonk\n\n# Stop service\nsudo systemctl stop listmonk\n\n# Restart service\nsudo systemctl restart listmonk\n\n# Reload configuration\nsudo systemctl reload listmonk\n\n# Check status\nsudo systemctl status listmonk\n\n# View logs\nsudo journalctl -u listmonk -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add listmonk default\n\n# Start service\nrc-service listmonk start\n\n# Stop service\nrc-service listmonk stop\n\n# Restart service\nrc-service listmonk restart\n\n# Check status\nrc-service listmonk status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;listmonk_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice listmonk start\n\n# Stop service\nservice listmonk stop\n\n# Restart service\nservice listmonk restart\n\n# Check status\nservice listmonk status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start listmonk\nbrew services stop listmonk\nbrew services restart listmonk\n\n# Check status\nbrew services list | grep listmonk</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start listmonk\n\n# Stop service\nnet stop listmonk\n\n# Using PowerShell\nStart-Service listmonk\nStop-Service listmonk\nRestart-Service listmonk\n\n# Check status\nGet-Service listmonk</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<h3 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure performance settings\ncat &gt;&gt; /etc/listmonk/listmonk.conf &lt;&lt; &#039;EOF&#039;\nconcurrency = 100\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart listmonk</code></pre>\n      </div>\n    </div>\n<h3 id=\"clustering-and-high-availability\" class=\"mobile-header\">Clustering and High Availability</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports</code></pre>\n      </div>\n    </div>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream listmonk_backend {\n    server 127.0.0.1:9000;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name listmonk.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name listmonk.example.com;\n\n    ssl_certificate /etc/ssl/certs/listmonk.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/listmonk.example.com.key;\n\n    location / {\n        proxy_pass http://listmonk_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName listmonk.example.com\n    Redirect permanent / https://listmonk.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName listmonk.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/listmonk.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/listmonk.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:9000/\n    ProxyPassReverse / http://127.0.0.1:9000/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) &quot;ws://127.0.0.1:9000/$1&quot; [P,L]\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend listmonk_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/listmonk.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend listmonk_backend\n\nbackend listmonk_backend\n    balance roundrobin\n    option httpchk GET /health\n    server listmonk1 127.0.0.1:9000 check\n    server listmonk2 127.0.0.1:{default_port}1 check backup</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R listmonk:listmonk /etc/listmonk\nsudo chmod 750 /etc/listmonk\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=listmonk\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/listmonk.conf &lt;&lt; &#039;EOF&#039;\n[listmonk]\nenabled = true\nport = 9000\nfilter = listmonk\nlogpath = /var/log/listmonk/*.log\nmaxretry = 5\nbantime = 3600\nEOF</code></pre>\n      </div>\n    </div>\n<h3 id=\"ssltls-configuration\" class=\"mobile-header\">SSL/TLS Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/listmonk.key \\\n    -out /etc/ssl/certs/listmonk.crt\n\n# Configure SSL in listmonk\n# See official documentation for SSL configuration</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<h3 id=\"postgresql-backend-if-applicable\" class=\"mobile-header\">PostgreSQL Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo -u postgres psql &lt;&lt; EOF\nCREATE DATABASE listmonk_db;\nCREATE USER listmonk_user WITH ENCRYPTED PASSWORD &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON DATABASE listmonk_db TO listmonk_user;\nEOF\n\n# Configure listmonk to use PostgreSQL\n# See official documentation for database configuration</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysqlmariadb-backend-if-applicable\" class=\"mobile-header\">MySQL/MariaDB Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo mysql &lt;&lt; EOF\nCREATE DATABASE listmonk_db;\nCREATE USER &#039;listmonk_user&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON listmonk_db.* TO &#039;listmonk_user&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Kernel parameters\nsudo tee -a /etc/sysctl.conf &lt;&lt; EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Listmonk specific tuning\nconcurrency = 100</code></pre>\n      </div>\n    </div>\n<h3 id=\"resource-limits\" class=\"mobile-header\">Resource Limits</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure system limits\nsudo tee -a /etc/security/limits.conf &lt;&lt; EOF\nlistmonk soft nofile 65535\nlistmonk hard nofile 65535\nlistmonk soft nproc 32768\nlistmonk hard nproc 32768\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"prometheus-integration\" class=\"mobile-header\">Prometheus Integration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># prometheus.yml configuration\nscrape_configs:\n  - job_name: &#039;listmonk&#039;\n    static_configs:\n      - targets: [&#039;localhost:9000&#039;]\n    metrics_path: &#039;/metrics&#039;</code></pre>\n      </div>\n    </div>\n<h3 id=\"health-checks\" class=\"mobile-header\">Health Checks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet listmonk; then\n    echo &quot;Listmonk is running&quot;\n    exit 0\nelse\n    echo &quot;Listmonk is not running&quot;\n    exit 1\nfi</code></pre>\n      </div>\n    </div>\n<h3 id=\"log-monitoring\" class=\"mobile-header\">Log Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure log rotation\nsudo tee /etc/logrotate.d/listmonk &lt;&lt; &#039;EOF&#039;\n/var/log/listmonk/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 listmonk listmonk\n    postrotate\n        systemctl reload listmonk &gt; /dev/null 2&gt;&amp;1 || true\n    endscript\n}\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"backup-and-restore\" class=\"mobile-header\">Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Listmonk backup script\nBACKUP_DIR=&quot;/backup/listmonk&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\n\n# Stop service (if required)\nsystemctl stop listmonk\n\n# Backup configuration\ntar -czf &quot;$BACKUP_DIR/listmonk-config-$DATE.tar.gz&quot; /etc/listmonk\n\n# Backup data (adjust paths as needed)\ntar -czf &quot;$BACKUP_DIR/listmonk-data-$DATE.tar.gz&quot; /var/lib/listmonk\n\n# Start service\nsystemctl start listmonk\n\n# Clean old backups (keep 30 days)\nfind &quot;$BACKUP_DIR&quot; -name &quot;*.tar.gz&quot; -mtime +30 -delete\n\necho &quot;Backup completed: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop listmonk\n\n# Restore configuration\nsudo tar -xzf /backup/listmonk/listmonk-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/listmonk/listmonk-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R listmonk:listmonk /etc/listmonk\nsudo chown -R listmonk:listmonk /var/lib/listmonk\n\n# Start service\nsudo systemctl start listmonk</code></pre>\n      </div>\n    </div>\n<h2 id=\"troubleshooting\" class=\"mobile-header\">Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u listmonk -n 100\nsudo tail -f /var/log/listmonk/*.log\n\n# Check configuration\nsudo listmonk -t || sudo listmonk configtest\n\n# Check permissions\nls -la /etc/listmonk\nls -la /var/lib/listmonk</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection refused</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 9000\nsudo netstat -tlnp | grep 9000\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 9000\nnc -zv localhost 9000</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep listmonk)\nhtop -p $(pgrep listmonk)\n\n# Check connections\nss -ant | grep :9000 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep listmonk)</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode\" class=\"mobile-header\">Debug Mode</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Run in debug mode\nsudo listmonk -d\n# or\nsudo listmonk debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose\" class=\"mobile-header\">Docker Compose</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  listmonk:\n    image: listmonk:latest\n    container_name: listmonk\n    ports:\n      - &quot;9000:9000&quot;\n    volumes:\n      - ./config:/etc/listmonk\n      - ./data:/var/lib/listmonk\n    environment:\n      - listmonk_CONFIG=/etc/listmonk/listmonk.conf\n    restart: unless-stopped\n    networks:\n      - listmonk_net\n\nnetworks:\n  listmonk_net:\n    driver: bridge</code></pre>\n      </div>\n    </div>\n<h3 id=\"kubernetes-deployment\" class=\"mobile-header\">Kubernetes Deployment</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: listmonk\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: listmonk\n  template:\n    metadata:\n      labels:\n        app: listmonk\n    spec:\n      containers:\n      - name: listmonk\n        image: listmonk:latest\n        ports:\n        - containerPort: 9000\n        volumeMounts:\n        - name: config\n          mountPath: /etc/listmonk\n      volumes:\n      - name: config\n        configMap:\n          name: listmonk-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: listmonk\nspec:\n  selector:\n    app: listmonk\n  ports:\n  - port: 9000\n    targetPort: 9000\n  type: LoadBalancer</code></pre>\n      </div>\n    </div>\n<h3 id=\"ansible-playbook\" class=\"mobile-header\">Ansible Playbook</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">---\n- name: Install and configure Listmonk\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install listmonk\n      package:\n        name: listmonk\n        state: present\n    \n    - name: Configure listmonk\n      template:\n        src: listmonk.conf.j2\n        dest: /etc/listmonk/listmonk.conf\n        owner: listmonk\n        group: listmonk\n        mode: &#039;0640&#039;\n      notify: restart listmonk\n    \n    - name: Start and enable listmonk\n      systemd:\n        name: listmonk\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart listmonk\n      systemd:\n        name: listmonk\n        state: restarted</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update listmonk\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade listmonk\n\n# Arch Linux\nsudo pacman -Syu listmonk\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade listmonk\n\n# openSUSE\nsudo zypper update listmonk\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade listmonk\n\n# Always backup before updates\ntar -czf /backup/listmonk-pre-update-$(date +%Y%m%d).tar.gz /etc/listmonk\n\n# Restart after updates\nsudo systemctl restart listmonk</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance-tasks\" class=\"mobile-header\">Regular Maintenance Tasks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clean logs\nfind /var/log/listmonk -name &quot;*.log&quot; -mtime +30 -delete\n\n# Verify integrity\nsudo listmonk --verify || sudo listmonk check\n\n# Update databases (if applicable)\nsudo listmonk-update-db\n\n# Optimize performance\nsudo listmonk-optimize\n\n# Check for security updates\nsudo listmonk --security-check</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.listmonk.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/listmonk/listmonk</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.listmonk.org/</li>\n<li class=\"mobile-list-item\">Wiki: https://wiki.listmonk.org/</li>\n<li class=\"mobile-list-item\">Comparison vs Mailman, Sympa, phpList, Sendy: https://docs.listmonk.org/comparison</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"10 min","wordCount":1869,"lastBuilt":"2025-09-16T07:35:54.754Z","metadataVersion":"2.0"},{"name":"mailman","displayName":"Mailman Installation Guide","slug":"mailman","description":"Mailman is a free and open-source Mailing List. Free software for managing electronic mail discussion lists","category":"mailing-lists","subcategory":"mailing-lists","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,2048],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["mailing-lists","containerization","orchestration","observability","data-storage","networking","security","data-protection","communication"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/mailing-lists/mailman","documentationUrl":"https://howtomgr.github.io/mailing-lists/mailman","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/mailman","updatedAt":"2025-09-16T03:38:26Z","createdAt":"2025-09-16T03:38:16Z","readmeRaw":"# Mailman Installation Guide\n\nMailman is a free and open-source Mailing List. Free software for managing electronic mail discussion lists\n\n## Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2 cores minimum (4+ cores recommended)\n  - RAM: 2GB minimum (4GB+ recommended)\n  - Storage: 1GB for installation\n  - Network: 80/443 ports\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 80/443 (default mailman port)\n- **Dependencies**:\n  - python3, postfix\n- **System Access**: root or sudo privileges required\n\n## Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install mailman\nsudo dnf install -y mailman python3, postfix\n\n# Enable and start service\nsudo systemctl enable --now mailman\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=mailman\nsudo firewall-cmd --reload\n\n# Verify installation\nmailman --version || systemctl status mailman\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install mailman\nsudo apt install -y mailman python3, postfix\n\n# Enable and start service\nsudo systemctl enable --now mailman\n\n# Configure firewall\nsudo ufw allow 80/443\n\n# Verify installation\nmailman --version || systemctl status mailman\n```\n\n### Arch Linux\n\n```bash\n# Install mailman\nsudo pacman -S mailman\n\n# Enable and start service\nsudo systemctl enable --now mailman\n\n# Verify installation\nmailman --version || systemctl status mailman\n```\n\n### Alpine Linux\n\n```bash\n# Install mailman\napk add --no-cache mailman\n\n# Enable and start service\nrc-update add mailman default\nrc-service mailman start\n\n# Verify installation\nmailman --version || rc-service mailman status\n```\n\n### openSUSE/SLES\n\n```bash\n# Install mailman\nsudo zypper install -y mailman python3, postfix\n\n# Enable and start service\nsudo systemctl enable --now mailman\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=mailman\nsudo firewall-cmd --reload\n\n# Verify installation\nmailman --version || systemctl status mailman\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install mailman\n\n# Start service\nbrew services start mailman\n\n# Verify installation\nmailman --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install mailman\n\n# Enable in rc.conf\necho 'mailman_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice mailman start\n\n# Verify installation\nmailman --version || service mailman status\n```\n\n### Windows\n\n```powershell\n# Using Chocolatey\nchoco install mailman\n\n# Or using Scoop\nscoop install mailman\n\n# Verify installation\nmailman --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory if needed\nsudo mkdir -p /etc/mailman\n\n# Set up basic configuration\nsudo tee /etc/mailman/mailman.conf << 'EOF'\n# Mailman Configuration\nQRUNNER_SLEEP_TIME = 1\nEOF\n\n# Test configuration\nsudo mailman -t || sudo mailman configtest\n\n# Reload service\nsudo systemctl reload mailman\n```\n\n### Security Hardening\n\n```bash\n# Set appropriate permissions\nsudo chown -R mailman:mailman /etc/mailman\nsudo chmod 750 /etc/mailman\n\n# Enable security features\n# See security section for detailed hardening steps\n```\n\n## Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable mailman\n\n# Start service\nsudo systemctl start mailman\n\n# Stop service\nsudo systemctl stop mailman\n\n# Restart service\nsudo systemctl restart mailman\n\n# Reload configuration\nsudo systemctl reload mailman\n\n# Check status\nsudo systemctl status mailman\n\n# View logs\nsudo journalctl -u mailman -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add mailman default\n\n# Start service\nrc-service mailman start\n\n# Stop service\nrc-service mailman stop\n\n# Restart service\nrc-service mailman restart\n\n# Check status\nrc-service mailman status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'mailman_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice mailman start\n\n# Stop service\nservice mailman stop\n\n# Restart service\nservice mailman restart\n\n# Check status\nservice mailman status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start mailman\nbrew services stop mailman\nbrew services restart mailman\n\n# Check status\nbrew services list | grep mailman\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start mailman\n\n# Stop service\nnet stop mailman\n\n# Using PowerShell\nStart-Service mailman\nStop-Service mailman\nRestart-Service mailman\n\n# Check status\nGet-Service mailman\n```\n\n## Advanced Configuration\n\n### Performance Optimization\n\n```bash\n# Configure performance settings\ncat >> /etc/mailman/mailman.conf << 'EOF'\nQRUNNER_SLEEP_TIME = 1\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart mailman\n```\n\n### Clustering and High Availability\n\n```bash\n# Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports\n```\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream mailman_backend {\n    server 127.0.0.1:80/443;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name mailman.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name mailman.example.com;\n\n    ssl_certificate /etc/ssl/certs/mailman.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/mailman.example.com.key;\n\n    location / {\n        proxy_pass http://mailman_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName mailman.example.com\n    Redirect permanent / https://mailman.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName mailman.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/mailman.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/mailman.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:80/443/\n    ProxyPassReverse / http://127.0.0.1:80/443/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) \"ws://127.0.0.1:80/443/$1\" [P,L]\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend mailman_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/mailman.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend mailman_backend\n\nbackend mailman_backend\n    balance roundrobin\n    option httpchk GET /health\n    server mailman1 127.0.0.1:80/443 check\n    server mailman2 127.0.0.1:{default_port}1 check backup\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R mailman:mailman /etc/mailman\nsudo chmod 750 /etc/mailman\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=mailman\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/mailman.conf << 'EOF'\n[mailman]\nenabled = true\nport = 80/443\nfilter = mailman\nlogpath = /var/log/mailman/*.log\nmaxretry = 5\nbantime = 3600\nEOF\n```\n\n### SSL/TLS Configuration\n\n```bash\n# Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/mailman.key \\\n    -out /etc/ssl/certs/mailman.crt\n\n# Configure SSL in mailman\n# See official documentation for SSL configuration\n```\n\n## Database Setup\n\n### PostgreSQL Backend (if applicable)\n\n```bash\n# Create database and user\nsudo -u postgres psql << EOF\nCREATE DATABASE mailman_db;\nCREATE USER mailman_user WITH ENCRYPTED PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE mailman_db TO mailman_user;\nEOF\n\n# Configure mailman to use PostgreSQL\n# See official documentation for database configuration\n```\n\n### MySQL/MariaDB Backend (if applicable)\n\n```bash\n# Create database and user\nsudo mysql << EOF\nCREATE DATABASE mailman_db;\nCREATE USER 'mailman_user'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON mailman_db.* TO 'mailman_user'@'localhost';\nFLUSH PRIVILEGES;\nEOF\n```\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Kernel parameters\nsudo tee -a /etc/sysctl.conf << EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Mailman specific tuning\nQRUNNER_SLEEP_TIME = 1\n```\n\n### Resource Limits\n\n```bash\n# Configure system limits\nsudo tee -a /etc/security/limits.conf << EOF\nmailman soft nofile 65535\nmailman hard nofile 65535\nmailman soft nproc 32768\nmailman hard nproc 32768\nEOF\n```\n\n## Monitoring\n\n### Prometheus Integration\n\n```yaml\n# prometheus.yml configuration\nscrape_configs:\n  - job_name: 'mailman'\n    static_configs:\n      - targets: ['localhost:80/443']\n    metrics_path: '/metrics'\n```\n\n### Health Checks\n\n```bash\n# Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet mailman; then\n    echo \"Mailman is running\"\n    exit 0\nelse\n    echo \"Mailman is not running\"\n    exit 1\nfi\n```\n\n### Log Monitoring\n\n```bash\n# Configure log rotation\nsudo tee /etc/logrotate.d/mailman << 'EOF'\n/var/log/mailman/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 mailman mailman\n    postrotate\n        systemctl reload mailman > /dev/null 2>&1 || true\n    endscript\n}\nEOF\n```\n\n## Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Mailman backup script\nBACKUP_DIR=\"/backup/mailman\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\n\n# Stop service (if required)\nsystemctl stop mailman\n\n# Backup configuration\ntar -czf \"$BACKUP_DIR/mailman-config-$DATE.tar.gz\" /etc/mailman\n\n# Backup data (adjust paths as needed)\ntar -czf \"$BACKUP_DIR/mailman-data-$DATE.tar.gz\" /var/lib/mailman\n\n# Start service\nsystemctl start mailman\n\n# Clean old backups (keep 30 days)\nfind \"$BACKUP_DIR\" -name \"*.tar.gz\" -mtime +30 -delete\n\necho \"Backup completed: $BACKUP_DIR\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop mailman\n\n# Restore configuration\nsudo tar -xzf /backup/mailman/mailman-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/mailman/mailman-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R mailman:mailman /etc/mailman\nsudo chown -R mailman:mailman /var/lib/mailman\n\n# Start service\nsudo systemctl start mailman\n```\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u mailman -n 100\nsudo tail -f /var/log/mailman/*.log\n\n# Check configuration\nsudo mailman -t || sudo mailman configtest\n\n# Check permissions\nls -la /etc/mailman\nls -la /var/lib/mailman\n```\n\n2. **Connection refused**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 80/443\nsudo netstat -tlnp | grep 80/443\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 80/443\nnc -zv localhost 80/443\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep mailmanctl)\nhtop -p $(pgrep mailmanctl)\n\n# Check connections\nss -ant | grep :80/443 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep mailmanctl)\n```\n\n### Debug Mode\n\n```bash\n# Run in debug mode\nsudo mailman -d\n# or\nsudo mailman debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging\n```\n\n## Integration Examples\n\n### Docker Compose\n\n```yaml\nversion: '3.8'\nservices:\n  mailman:\n    image: mailman:latest\n    container_name: mailman\n    ports:\n      - \"80/443:80/443\"\n    volumes:\n      - ./config:/etc/mailman\n      - ./data:/var/lib/mailman\n    environment:\n      - mailman_CONFIG=/etc/mailman/mailman.conf\n    restart: unless-stopped\n    networks:\n      - mailman_net\n\nnetworks:\n  mailman_net:\n    driver: bridge\n```\n\n### Kubernetes Deployment\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mailman\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: mailman\n  template:\n    metadata:\n      labels:\n        app: mailman\n    spec:\n      containers:\n      - name: mailman\n        image: mailman:latest\n        ports:\n        - containerPort: 80/443\n        volumeMounts:\n        - name: config\n          mountPath: /etc/mailman\n      volumes:\n      - name: config\n        configMap:\n          name: mailman-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mailman\nspec:\n  selector:\n    app: mailman\n  ports:\n  - port: 80/443\n    targetPort: 80/443\n  type: LoadBalancer\n```\n\n### Ansible Playbook\n\n```yaml\n---\n- name: Install and configure Mailman\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install mailman\n      package:\n        name: mailman\n        state: present\n    \n    - name: Configure mailman\n      template:\n        src: mailman.conf.j2\n        dest: /etc/mailman/mailman.conf\n        owner: mailman\n        group: mailman\n        mode: '0640'\n      notify: restart mailman\n    \n    - name: Start and enable mailman\n      systemd:\n        name: mailman\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart mailman\n      systemd:\n        name: mailman\n        state: restarted\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update mailman\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade mailman\n\n# Arch Linux\nsudo pacman -Syu mailman\n\n# Alpine Linux\napk update && apk upgrade mailman\n\n# openSUSE\nsudo zypper update mailman\n\n# FreeBSD\npkg update && pkg upgrade mailman\n\n# Always backup before updates\ntar -czf /backup/mailman-pre-update-$(date +%Y%m%d).tar.gz /etc/mailman\n\n# Restart after updates\nsudo systemctl restart mailman\n```\n\n### Regular Maintenance Tasks\n\n```bash\n# Clean logs\nfind /var/log/mailman -name \"*.log\" -mtime +30 -delete\n\n# Verify integrity\nsudo mailman --verify || sudo mailman check\n\n# Update databases (if applicable)\nsudo mailman-update-db\n\n# Optimize performance\nsudo mailman-optimize\n\n# Check for security updates\nsudo mailman --security-check\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.mailman.org/\n- GitHub Repository: https://github.com/mailman/mailman\n- Community Forum: https://forum.mailman.org/\n- Wiki: https://wiki.mailman.org/\n- Comparison vs Sympa, Listmonk, phpList, Majordomo: https://docs.mailman.org/comparison\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<h1 id=\"mailman-installation-guide\" class=\"mobile-header\">Mailman Installation Guide</h1>\n<p class=\"mobile-paragraph\">Mailman is a free and open-source Mailing List. Free software for managing electronic mail discussion lists</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2 cores minimum (4+ cores recommended)</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum (4GB+ recommended)</li>\n<li class=\"mobile-list-item\">Storage: 1GB for installation</li>\n<li class=\"mobile-list-item\">Network: 80/443 ports</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 80/443 (default mailman port)</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">python3, postfix</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install mailman\nsudo dnf install -y mailman python3, postfix\n\n# Enable and start service\nsudo systemctl enable --now mailman\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=mailman\nsudo firewall-cmd --reload\n\n# Verify installation\nmailman --version || systemctl status mailman</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install mailman\nsudo apt install -y mailman python3, postfix\n\n# Enable and start service\nsudo systemctl enable --now mailman\n\n# Configure firewall\nsudo ufw allow 80/443\n\n# Verify installation\nmailman --version || systemctl status mailman</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install mailman\nsudo pacman -S mailman\n\n# Enable and start service\nsudo systemctl enable --now mailman\n\n# Verify installation\nmailman --version || systemctl status mailman</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install mailman\napk add --no-cache mailman\n\n# Enable and start service\nrc-update add mailman default\nrc-service mailman start\n\n# Verify installation\nmailman --version || rc-service mailman status</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install mailman\nsudo zypper install -y mailman python3, postfix\n\n# Enable and start service\nsudo systemctl enable --now mailman\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=mailman\nsudo firewall-cmd --reload\n\n# Verify installation\nmailman --version || systemctl status mailman</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install mailman\n\n# Start service\nbrew services start mailman\n\n# Verify installation\nmailman --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install mailman\n\n# Enable in rc.conf\necho &#039;mailman_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice mailman start\n\n# Verify installation\nmailman --version || service mailman status</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Using Chocolatey\nchoco install mailman\n\n# Or using Scoop\nscoop install mailman\n\n# Verify installation\nmailman --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory if needed\nsudo mkdir -p /etc/mailman\n\n# Set up basic configuration\nsudo tee /etc/mailman/mailman.conf &lt;&lt; &#039;EOF&#039;\n# Mailman Configuration\nQRUNNER_SLEEP_TIME = 1\nEOF\n\n# Test configuration\nsudo mailman -t || sudo mailman configtest\n\n# Reload service\nsudo systemctl reload mailman</code></pre>\n      </div>\n    </div>\n<h3 id=\"security-hardening\" class=\"mobile-header\">Security Hardening</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R mailman:mailman /etc/mailman\nsudo chmod 750 /etc/mailman\n\n# Enable security features\n# See security section for detailed hardening steps</code></pre>\n      </div>\n    </div>\n<h2 id=\"service-management\" class=\"mobile-header\">Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable mailman\n\n# Start service\nsudo systemctl start mailman\n\n# Stop service\nsudo systemctl stop mailman\n\n# Restart service\nsudo systemctl restart mailman\n\n# Reload configuration\nsudo systemctl reload mailman\n\n# Check status\nsudo systemctl status mailman\n\n# View logs\nsudo journalctl -u mailman -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add mailman default\n\n# Start service\nrc-service mailman start\n\n# Stop service\nrc-service mailman stop\n\n# Restart service\nrc-service mailman restart\n\n# Check status\nrc-service mailman status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;mailman_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice mailman start\n\n# Stop service\nservice mailman stop\n\n# Restart service\nservice mailman restart\n\n# Check status\nservice mailman status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start mailman\nbrew services stop mailman\nbrew services restart mailman\n\n# Check status\nbrew services list | grep mailman</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start mailman\n\n# Stop service\nnet stop mailman\n\n# Using PowerShell\nStart-Service mailman\nStop-Service mailman\nRestart-Service mailman\n\n# Check status\nGet-Service mailman</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<h3 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure performance settings\ncat &gt;&gt; /etc/mailman/mailman.conf &lt;&lt; &#039;EOF&#039;\nQRUNNER_SLEEP_TIME = 1\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart mailman</code></pre>\n      </div>\n    </div>\n<h3 id=\"clustering-and-high-availability\" class=\"mobile-header\">Clustering and High Availability</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports</code></pre>\n      </div>\n    </div>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream mailman_backend {\n    server 127.0.0.1:80/443;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name mailman.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name mailman.example.com;\n\n    ssl_certificate /etc/ssl/certs/mailman.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/mailman.example.com.key;\n\n    location / {\n        proxy_pass http://mailman_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName mailman.example.com\n    Redirect permanent / https://mailman.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName mailman.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/mailman.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/mailman.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:80/443/\n    ProxyPassReverse / http://127.0.0.1:80/443/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) &quot;ws://127.0.0.1:80/443/$1&quot; [P,L]\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend mailman_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/mailman.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend mailman_backend\n\nbackend mailman_backend\n    balance roundrobin\n    option httpchk GET /health\n    server mailman1 127.0.0.1:80/443 check\n    server mailman2 127.0.0.1:{default_port}1 check backup</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R mailman:mailman /etc/mailman\nsudo chmod 750 /etc/mailman\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=mailman\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/mailman.conf &lt;&lt; &#039;EOF&#039;\n[mailman]\nenabled = true\nport = 80/443\nfilter = mailman\nlogpath = /var/log/mailman/*.log\nmaxretry = 5\nbantime = 3600\nEOF</code></pre>\n      </div>\n    </div>\n<h3 id=\"ssltls-configuration\" class=\"mobile-header\">SSL/TLS Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/mailman.key \\\n    -out /etc/ssl/certs/mailman.crt\n\n# Configure SSL in mailman\n# See official documentation for SSL configuration</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<h3 id=\"postgresql-backend-if-applicable\" class=\"mobile-header\">PostgreSQL Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo -u postgres psql &lt;&lt; EOF\nCREATE DATABASE mailman_db;\nCREATE USER mailman_user WITH ENCRYPTED PASSWORD &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON DATABASE mailman_db TO mailman_user;\nEOF\n\n# Configure mailman to use PostgreSQL\n# See official documentation for database configuration</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysqlmariadb-backend-if-applicable\" class=\"mobile-header\">MySQL/MariaDB Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo mysql &lt;&lt; EOF\nCREATE DATABASE mailman_db;\nCREATE USER &#039;mailman_user&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON mailman_db.* TO &#039;mailman_user&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Kernel parameters\nsudo tee -a /etc/sysctl.conf &lt;&lt; EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Mailman specific tuning\nQRUNNER_SLEEP_TIME = 1</code></pre>\n      </div>\n    </div>\n<h3 id=\"resource-limits\" class=\"mobile-header\">Resource Limits</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure system limits\nsudo tee -a /etc/security/limits.conf &lt;&lt; EOF\nmailman soft nofile 65535\nmailman hard nofile 65535\nmailman soft nproc 32768\nmailman hard nproc 32768\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"prometheus-integration\" class=\"mobile-header\">Prometheus Integration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># prometheus.yml configuration\nscrape_configs:\n  - job_name: &#039;mailman&#039;\n    static_configs:\n      - targets: [&#039;localhost:80/443&#039;]\n    metrics_path: &#039;/metrics&#039;</code></pre>\n      </div>\n    </div>\n<h3 id=\"health-checks\" class=\"mobile-header\">Health Checks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet mailman; then\n    echo &quot;Mailman is running&quot;\n    exit 0\nelse\n    echo &quot;Mailman is not running&quot;\n    exit 1\nfi</code></pre>\n      </div>\n    </div>\n<h3 id=\"log-monitoring\" class=\"mobile-header\">Log Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure log rotation\nsudo tee /etc/logrotate.d/mailman &lt;&lt; &#039;EOF&#039;\n/var/log/mailman/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 mailman mailman\n    postrotate\n        systemctl reload mailman &gt; /dev/null 2&gt;&amp;1 || true\n    endscript\n}\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"backup-and-restore\" class=\"mobile-header\">Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Mailman backup script\nBACKUP_DIR=&quot;/backup/mailman&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\n\n# Stop service (if required)\nsystemctl stop mailman\n\n# Backup configuration\ntar -czf &quot;$BACKUP_DIR/mailman-config-$DATE.tar.gz&quot; /etc/mailman\n\n# Backup data (adjust paths as needed)\ntar -czf &quot;$BACKUP_DIR/mailman-data-$DATE.tar.gz&quot; /var/lib/mailman\n\n# Start service\nsystemctl start mailman\n\n# Clean old backups (keep 30 days)\nfind &quot;$BACKUP_DIR&quot; -name &quot;*.tar.gz&quot; -mtime +30 -delete\n\necho &quot;Backup completed: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop mailman\n\n# Restore configuration\nsudo tar -xzf /backup/mailman/mailman-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/mailman/mailman-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R mailman:mailman /etc/mailman\nsudo chown -R mailman:mailman /var/lib/mailman\n\n# Start service\nsudo systemctl start mailman</code></pre>\n      </div>\n    </div>\n<h2 id=\"troubleshooting\" class=\"mobile-header\">Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u mailman -n 100\nsudo tail -f /var/log/mailman/*.log\n\n# Check configuration\nsudo mailman -t || sudo mailman configtest\n\n# Check permissions\nls -la /etc/mailman\nls -la /var/lib/mailman</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection refused</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 80/443\nsudo netstat -tlnp | grep 80/443\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 80/443\nnc -zv localhost 80/443</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep mailmanctl)\nhtop -p $(pgrep mailmanctl)\n\n# Check connections\nss -ant | grep :80/443 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep mailmanctl)</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode\" class=\"mobile-header\">Debug Mode</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Run in debug mode\nsudo mailman -d\n# or\nsudo mailman debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose\" class=\"mobile-header\">Docker Compose</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  mailman:\n    image: mailman:latest\n    container_name: mailman\n    ports:\n      - &quot;80/443:80/443&quot;\n    volumes:\n      - ./config:/etc/mailman\n      - ./data:/var/lib/mailman\n    environment:\n      - mailman_CONFIG=/etc/mailman/mailman.conf\n    restart: unless-stopped\n    networks:\n      - mailman_net\n\nnetworks:\n  mailman_net:\n    driver: bridge</code></pre>\n      </div>\n    </div>\n<h3 id=\"kubernetes-deployment\" class=\"mobile-header\">Kubernetes Deployment</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mailman\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: mailman\n  template:\n    metadata:\n      labels:\n        app: mailman\n    spec:\n      containers:\n      - name: mailman\n        image: mailman:latest\n        ports:\n        - containerPort: 80/443\n        volumeMounts:\n        - name: config\n          mountPath: /etc/mailman\n      volumes:\n      - name: config\n        configMap:\n          name: mailman-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mailman\nspec:\n  selector:\n    app: mailman\n  ports:\n  - port: 80/443\n    targetPort: 80/443\n  type: LoadBalancer</code></pre>\n      </div>\n    </div>\n<h3 id=\"ansible-playbook\" class=\"mobile-header\">Ansible Playbook</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">---\n- name: Install and configure Mailman\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install mailman\n      package:\n        name: mailman\n        state: present\n    \n    - name: Configure mailman\n      template:\n        src: mailman.conf.j2\n        dest: /etc/mailman/mailman.conf\n        owner: mailman\n        group: mailman\n        mode: &#039;0640&#039;\n      notify: restart mailman\n    \n    - name: Start and enable mailman\n      systemd:\n        name: mailman\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart mailman\n      systemd:\n        name: mailman\n        state: restarted</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update mailman\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade mailman\n\n# Arch Linux\nsudo pacman -Syu mailman\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade mailman\n\n# openSUSE\nsudo zypper update mailman\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade mailman\n\n# Always backup before updates\ntar -czf /backup/mailman-pre-update-$(date +%Y%m%d).tar.gz /etc/mailman\n\n# Restart after updates\nsudo systemctl restart mailman</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance-tasks\" class=\"mobile-header\">Regular Maintenance Tasks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clean logs\nfind /var/log/mailman -name &quot;*.log&quot; -mtime +30 -delete\n\n# Verify integrity\nsudo mailman --verify || sudo mailman check\n\n# Update databases (if applicable)\nsudo mailman-update-db\n\n# Optimize performance\nsudo mailman-optimize\n\n# Check for security updates\nsudo mailman --security-check</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.mailman.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/mailman/mailman</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.mailman.org/</li>\n<li class=\"mobile-list-item\">Wiki: https://wiki.mailman.org/</li>\n<li class=\"mobile-list-item\">Comparison vs Sympa, Listmonk, phpList, Majordomo: https://docs.mailman.org/comparison</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"10 min","wordCount":1876,"lastBuilt":"2025-09-16T07:35:49.819Z","metadataVersion":"2.0"}]},"__N_SSG":true}