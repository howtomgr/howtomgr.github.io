{"pageProps":{"guide":{"name":"shinobi","displayName":"Shinobi Installation Guide","slug":"shinobi","description":"Shinobi is a free and open-source CCTV/NVR (Network Video Recorder) solution written in Node.js. It serves as a modern FOSS alternative to proprietary video surveillance systems like Blue Iris, Milestone XProtect, or commercial NVR solutions, supporting RTSP, ONVIF, motion detection, and multi-user access.","category":"surveillance","subcategory":"nvr-systems","difficultyLevel":"intermediate","estimatedSetupTime":"45-90 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","windows"],"defaultPorts":[8080,8443,554],"installationMethods":["native-packages","git-clone","npm-install"],"features":["multi-os-support","rtsp-support","motion-detection","multi-user","api-integration","hardware-acceleration","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["cctv","nvr","surveillance","security-cameras","rtsp","onvif","motion-detection","video-recording","nodejs"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"GPLv3","websiteUrl":"https://howtomgr.github.io/surveillance/shinobi","documentationUrl":"https://howtomgr.github.io/surveillance/shinobi","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/shinobi","updatedAt":"2025-09-16T17:51:15Z","createdAt":"2023-08-28T03:50:05Z","readmeRaw":"# Shinobi Installation Guide\n\nShinobi is a free and open-source CCTV/NVR (Network Video Recorder) solution written in Node.js. It serves as a modern FOSS alternative to proprietary video surveillance systems like Blue Iris, Milestone XProtect, Genetec Security Center, or commercial NVR solutions from Hikvision, Dahua, and others. Shinobi supports RTSP, ONVIF, and various IP camera protocols with features including motion detection, object detection, and multi-user support.\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n### Hardware Requirements\n- **CPU**: Minimum 2 cores (4+ cores recommended for multiple cameras)\n- **RAM**: 4GB minimum (8GB+ recommended)\n- **Storage**: 100GB+ for recordings (calculate based on camera count and retention)\n- **GPU**: Optional but recommended for hardware acceleration\n- **Network**: Gigabit Ethernet recommended for multiple HD cameras\n\n### Software Requirements\n- **Node.js**: 14.x or later\n- **FFmpeg**: 4.x or later with x264/x265 support\n- **MariaDB/MySQL**: 5.7+ or MariaDB 10.3+\n- **Git**: For cloning repository\n- **Python3**: For some plugins\n\n### Network Requirements\n- **Ports**: \n  - 8080: Web interface (HTTP)\n  - 8443: Web interface (HTTPS)\n  - 21: FTP (optional)\n  - Camera ports (varies by manufacturer)\n- **Firewall**: Allow camera network access\n- **Bandwidth**: 2-8 Mbps per camera (varies by resolution)\n\n## 2. Supported Operating Systems\n\nShinobi officially supports:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04 LTS / 22.04 LTS / 24.04 LTS\n- Arch Linux\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- macOS 12+ (via Homebrew)\n- Windows 10/11 (via WSL2 or native)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Enable EPEL and PowerTools/CRB repositories\nsudo dnf install -y epel-release\nsudo dnf config-manager --set-enabled powertools  # CentOS Stream 8\nsudo dnf config-manager --set-enabled crb        # RHEL/Rocky/Alma 9\n\n# Install dependencies\nsudo dnf install -y ffmpeg ffmpeg-devel x264 x265 x264-devel x265-devel \\\n    git curl gnupg2 gcc-c++ make cairo-devel jpeg-devel \\\n    giflib-devel pango-devel python3 python3-pip\n\n# Install Node.js 18.x\ncurl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -\nsudo dnf install -y nodejs\n\n# Install MariaDB\nsudo dnf install -y mariadb mariadb-server\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create Shinobi database and user\nsudo mysql -e \"CREATE DATABASE ccio;\"\nsudo mysql -e \"CREATE USER 'ccio'@'localhost' IDENTIFIED BY 'your_secure_password';\"\nsudo mysql -e \"GRANT ALL PRIVILEGES ON ccio.* TO 'ccio'@'localhost';\"\nsudo mysql -e \"FLUSH PRIVILEGES;\"\n\n# Clone and install Shinobi\ncd /opt\nsudo git clone https://gitlab.com/Shinobi-Systems/Shinobi.git shinobi\nsudo chown -R $USER:$USER /opt/shinobi\ncd /opt/shinobi\n\n# Install Node.js dependencies\nnpm install --unsafe-perm\nnpm install pm2 -g\n\n# Configure Shinobi\ncp conf.sample.json conf.json\ncp super.sample.json super.json\n\n# Initialize database\nnode /opt/shinobi/sql/framework.js\n\n# Create systemd service (see Service Management section)\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package lists\nsudo apt update\n\n# Install FFmpeg and multimedia libraries\nsudo apt install -y ffmpeg x264 x265 git curl gnupg2 \\\n    build-essential python3 python3-pip libcairo2-dev \\\n    libjpeg-dev libgif-dev libpango1.0-dev\n\n# Install Node.js 18.x\ncurl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -\nsudo apt install -y nodejs\n\n# Install MariaDB\nsudo apt install -y mariadb-server mariadb-client\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create Shinobi database and user\nsudo mysql -e \"CREATE DATABASE ccio;\"\nsudo mysql -e \"CREATE USER 'ccio'@'localhost' IDENTIFIED BY 'your_secure_password';\"\nsudo mysql -e \"GRANT ALL PRIVILEGES ON ccio.* TO 'ccio'@'localhost';\"\nsudo mysql -e \"FLUSH PRIVILEGES;\"\n\n# Clone and install Shinobi\ncd /opt\nsudo git clone https://gitlab.com/Shinobi-Systems/Shinobi.git shinobi\nsudo chown -R $USER:$USER /opt/shinobi\ncd /opt/shinobi\n\n# Install dependencies\nnpm install --unsafe-perm\nsudo npm install pm2 -g\n\n# Configure Shinobi\ncp conf.sample.json conf.json\ncp super.sample.json super.json\n\n# Initialize database\nnode /opt/shinobi/sql/framework.js\n```\n\n### Arch Linux\n\n```bash\n# Update system\nsudo pacman -Syu\n\n# Install dependencies\nsudo pacman -S ffmpeg x264 x265 git curl gnupg nodejs npm \\\n    python python-pip base-devel cairo libjpeg-turbo \\\n    libpng pango giflib mariadb\n\n# Enable and start MariaDB\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create Shinobi database and user\nsudo mysql -e \"CREATE DATABASE ccio;\"\nsudo mysql -e \"CREATE USER 'ccio'@'localhost' IDENTIFIED BY 'your_secure_password';\"\nsudo mysql -e \"GRANT ALL PRIVILEGES ON ccio.* TO 'ccio'@'localhost';\"\nsudo mysql -e \"FLUSH PRIVILEGES;\"\n\n# Clone and install Shinobi\ncd /opt\nsudo git clone https://gitlab.com/Shinobi-Systems/Shinobi.git shinobi\nsudo chown -R $USER:$USER /opt/shinobi\ncd /opt/shinobi\n\n# Install dependencies\nnpm install --unsafe-perm\nsudo npm install pm2 -g\n\n# Configure Shinobi\ncp conf.sample.json conf.json\ncp super.sample.json super.json\n\n# Initialize database\nnode /opt/shinobi/sql/framework.js\n```\n\n### Alpine Linux\n\n```bash\n# Update package index\nsudo apk update\n\n# Install dependencies\nsudo apk add --no-cache ffmpeg x264 x265 git curl gnupg \\\n    nodejs npm python3 py3-pip build-base cairo-dev \\\n    jpeg-dev libpng-dev pango-dev giflib-dev mariadb \\\n    mariadb-client mariadb-dev\n\n# Initialize MariaDB\nsudo mysql_install_db --user=mysql --datadir=/var/lib/mysql\nsudo rc-service mariadb start\nsudo rc-update add mariadb default\nsudo mysql_secure_installation\n\n# Create Shinobi database and user\nsudo mysql -e \"CREATE DATABASE ccio;\"\nsudo mysql -e \"CREATE USER 'ccio'@'localhost' IDENTIFIED BY 'your_secure_password';\"\nsudo mysql -e \"GRANT ALL PRIVILEGES ON ccio.* TO 'ccio'@'localhost';\"\nsudo mysql -e \"FLUSH PRIVILEGES;\"\n\n# Clone and install Shinobi\ncd /opt\nsudo git clone https://gitlab.com/Shinobi-Systems/Shinobi.git shinobi\nsudo chown -R $USER:$USER /opt/shinobi\ncd /opt/shinobi\n\n# Install dependencies\nnpm install --unsafe-perm\nsudo npm install pm2 -g\n\n# Configure Shinobi\ncp conf.sample.json conf.json\ncp super.sample.json super.json\n\n# Initialize database\nnode /opt/shinobi/sql/framework.js\n```\n\n## 4. Configuration\n\n### Database Configuration\n\nEdit `/opt/shinobi/conf.json`:\n```json\n{\n  \"port\": 8080,\n  \"addStorage\": [\n    {\n      \"name\": \"second\",\n      \"path\": \"/opt/shinobi/videos2\"\n    }\n  ],\n  \"ssl\": {\n    \"key\": \"/path/to/private.key\",\n    \"cert\": \"/path/to/certificate.crt\",\n    \"enabled\": false,\n    \"port\": 8443\n  },\n  \"db\": {\n    \"host\": \"127.0.0.1\",\n    \"user\": \"ccio\",\n    \"password\": \"your_secure_password\",\n    \"database\": \"ccio\",\n    \"port\": 3306\n  },\n  \"mail\": {\n    \"auth\": {\n      \"user\": \"your_email@example.com\",\n      \"pass\": \"your_app_password\"\n    },\n    \"host\": \"smtp.gmail.com\",\n    \"port\": 587,\n    \"secure\": false\n  },\n  \"cron\": {\n    \"deleteOld\": \"0 * * * *\"\n  }\n}\n```\n\n### Super User Configuration\n\nEdit `/opt/shinobi/super.json`:\n```json\n{\n  \"port\": 8080,\n  \"bindip\": \"0.0.0.0\",\n  \"ssl\": {\n    \"key\": \"\",\n    \"cert\": \"\",\n    \"enabled\": false,\n    \"port\": 8443\n  },\n  \"db\": {\n    \"host\": \"127.0.0.1\",\n    \"user\": \"ccio\",\n    \"password\": \"your_secure_password\",\n    \"database\": \"ccio\",\n    \"port\": 3306\n  },\n  \"mail\": {\n    \"auth\": {\n      \"user\": \"your_email@example.com\",\n      \"pass\": \"your_app_password\"\n    },\n    \"host\": \"smtp.gmail.com\",\n    \"port\": 587,\n    \"secure\": false\n  }\n}\n```\n\n### Creating Storage Directories\n\n```bash\n# Create video storage directories\nsudo mkdir -p /opt/shinobi/videos\nsudo mkdir -p /var/shinobi/recordings\nsudo chown -R shinobi:shinobi /opt/shinobi/videos\nsudo chown -R shinobi:shinobi /var/shinobi/recordings\n\n# Set proper permissions\nsudo chmod 755 /opt/shinobi/videos\nsudo chmod 755 /var/shinobi/recordings\n```\n\n## 5. Service Management\n\n### Create Shinobi User\n\n```bash\n# Create dedicated user\nsudo useradd -r -s /bin/false -d /opt/shinobi shinobi\nsudo chown -R shinobi:shinobi /opt/shinobi\n```\n\n### systemd Service (RHEL, Debian, Arch, SUSE)\n\nCreate `/etc/systemd/system/shinobi.service`:\n```ini\n[Unit]\nDescription=Shinobi CCTV System\nAfter=network.target mariadb.service\nWants=mariadb.service\n\n[Service]\nType=forking\nUser=shinobi\nGroup=shinobi\nWorkingDirectory=/opt/shinobi\nExecStart=/usr/bin/pm2 start ecosystem.config.js --env production\nExecReload=/usr/bin/pm2 reload ecosystem.config.js --env production\nExecStop=/usr/bin/pm2 stop ecosystem.config.js\nPIDFile=/opt/shinobi/.pm2/pm2.pid\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n```\n\nCreate `/opt/shinobi/ecosystem.config.js`:\n```javascript\nmodule.exports = {\n  apps: [\n    {\n      name: 'camera',\n      script: 'camera.js',\n      cwd: '/opt/shinobi',\n      instances: 1,\n      exec_mode: 'fork',\n      env: {\n        NODE_ENV: 'production'\n      }\n    },\n    {\n      name: 'cron',\n      script: 'cron.js',\n      cwd: '/opt/shinobi',\n      instances: 1,\n      exec_mode: 'fork',\n      env: {\n        NODE_ENV: 'production'\n      }\n    }\n  ]\n};\n```\n\n```bash\n# Enable and start services\nsudo systemctl daemon-reload\nsudo systemctl enable --now shinobi\nsudo systemctl status shinobi\n```\n\n### OpenRC Service (Alpine Linux)\n\nCreate `/etc/init.d/shinobi`:\n```bash\n#!/sbin/openrc-run\n\ndescription=\"Shinobi CCTV System\"\ncommand=\"/usr/bin/pm2\"\ncommand_args=\"start /opt/shinobi/ecosystem.config.js --env production\"\ncommand_user=\"shinobi\"\npidfile=\"/run/shinobi.pid\"\n\ndepend() {\n    need net mariadb\n    after mariadb\n}\n\nstart_pre() {\n    checkpath --directory --owner shinobi:shinobi --mode 0755 /run/shinobi\n}\n```\n\n```bash\n# Make executable and enable\nsudo chmod +x /etc/init.d/shinobi\nsudo rc-update add shinobi default\nsudo rc-service shinobi start\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Shinobi won't start**:\n```bash\n# Check logs\nsudo journalctl -u shinobi -f\n\n# Check PM2 status\nsudo -u shinobi pm2 status\nsudo -u shinobi pm2 logs\n\n# Check database connection\nmysql -u ccio -p ccio -e \"SHOW TABLES;\"\n```\n\n2. **Cameras not connecting**:\n```bash\n# Test RTSP stream manually\nffmpeg -rtsp_transport tcp -i rtsp://username:password@camera_ip:554/stream -t 10 test.mp4\n\n# Check network connectivity\nping camera_ip\ntelnet camera_ip 554\n```\n\n3. **High CPU usage**:\n```bash\n# Check encoding settings in monitor configuration\n# Reduce video quality or frame rate\n# Enable hardware acceleration if available\n```\n\n4. **Storage issues**:\n```bash\n# Check disk space\ndf -h /opt/shinobi/videos\n\n# Check permissions\nls -la /opt/shinobi/videos\n\n# Check cron job for cleanup\nsudo -u shinobi crontab -l\n```\n\n## 7. Security Considerations\n\n### SSL/TLS Configuration\n\n```bash\n# Generate self-signed certificate\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /opt/shinobi/ssl/shinobi.key \\\n    -out /opt/shinobi/ssl/shinobi.crt\n\n# Set permissions\nsudo chown shinobi:shinobi /opt/shinobi/ssl/*\nsudo chmod 600 /opt/shinobi/ssl/shinobi.key\nsudo chmod 644 /opt/shinobi/ssl/shinobi.crt\n```\n\nUpdate `/opt/shinobi/conf.json`:\n```json\n{\n  \"ssl\": {\n    \"key\": \"/opt/shinobi/ssl/shinobi.key\",\n    \"cert\": \"/opt/shinobi/ssl/shinobi.crt\",\n    \"enabled\": true,\n    \"port\": 8443\n  }\n}\n```\n\n### Firewall Configuration\n\n#### firewalld (RHEL/CentOS)\n```bash\nsudo firewall-cmd --permanent --add-port=8080/tcp\nsudo firewall-cmd --permanent --add-port=8443/tcp\nsudo firewall-cmd --reload\n```\n\n#### ufw (Ubuntu/Debian)\n```bash\nsudo ufw allow 8080/tcp\nsudo ufw allow 8443/tcp\nsudo ufw enable\n```\n\n#### iptables\n```bash\nsudo iptables -A INPUT -p tcp --dport 8080 -j ACCEPT\nsudo iptables -A INPUT -p tcp --dport 8443 -j ACCEPT\nsudo iptables-save | sudo tee /etc/iptables/rules.v4\n```\n\n### User Authentication\n\n1. **Change default admin password**:\n   - Login to web interface: http://your_server:8080\n   - Go to Settings → Users\n   - Change admin password\n\n2. **Create limited users**:\n   - Add users with specific camera access\n   - Set view-only permissions for monitors\n\n3. **API Key Security**:\n```bash\n# Generate secure API keys\nopenssl rand -hex 32\n\n# Rotate keys regularly via web interface\n```\n\n## 8. Performance Tuning\n\n### Hardware Acceleration\n\nEnable GPU acceleration in `/opt/shinobi/conf.json`:\n```json\n{\n  \"accelerator\": {\n    \"enabled\": true,\n    \"hwaccel\": \"vaapi\",\n    \"hwaccel_device\": \"/dev/dri/renderD128\"\n  }\n}\n```\n\n### CPU Optimization\n\n```bash\n# Set CPU governor to performance\necho performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\n\n# Adjust process priorities\nsudo systemctl edit shinobi\n```\n\nAdd to override file:\n```ini\n[Service]\nNice=-10\nIOSchedulingClass=1\nIOSchedulingPriority=4\n```\n\n### Memory Optimization\n\n```bash\n# Increase shared memory for large installations\necho 'kernel.shmmax = 268435456' | sudo tee -a /etc/sysctl.conf\necho 'kernel.shmall = 2097152' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n### Storage Optimization\n\n```bash\n# Use SSD for database and temporary files\nsudo mkdir -p /var/lib/mysql-ssd\nsudo mount /dev/nvme0n1p1 /var/lib/mysql-ssd\nsudo chown mysql:mysql /var/lib/mysql-ssd\n\n# Configure log rotation\nsudo nano /etc/logrotate.d/shinobi\n```\n\nAdd:\n```\n/opt/shinobi/logs/*.log {\n    daily\n    missingok\n    rotate 7\n    compress\n    delaycompress\n    copytruncate\n}\n```\n\n## 9. Backup and Restore\n\n### Database Backup\n\n```bash\n#!/bin/bash\n# /opt/shinobi/scripts/backup-db.sh\n\nBACKUP_DIR=\"/var/backups/shinobi\"\nDATE=$(date +%Y%m%d_%H%M%S)\nDB_USER=\"ccio\"\nDB_PASS=\"your_secure_password\"\nDB_NAME=\"ccio\"\n\n# Create backup directory\nmkdir -p $BACKUP_DIR\n\n# Backup database\nmysqldump -u $DB_USER -p$DB_PASS $DB_NAME > $BACKUP_DIR/shinobi_db_$DATE.sql\n\n# Compress backup\ngzip $BACKUP_DIR/shinobi_db_$DATE.sql\n\n# Remove backups older than 30 days\nfind $BACKUP_DIR -name \"shinobi_db_*.sql.gz\" -mtime +30 -delete\n\necho \"Database backup completed: $BACKUP_DIR/shinobi_db_$DATE.sql.gz\"\n```\n\n### Configuration Backup\n\n```bash\n#!/bin/bash\n# /opt/shinobi/scripts/backup-config.sh\n\nBACKUP_DIR=\"/var/backups/shinobi\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\n# Create backup directory\nmkdir -p $BACKUP_DIR\n\n# Backup configuration files\ntar -czf $BACKUP_DIR/shinobi_config_$DATE.tar.gz \\\n    /opt/shinobi/conf.json \\\n    /opt/shinobi/super.json \\\n    /opt/shinobi/ssl/ \\\n    /etc/systemd/system/shinobi.service\n\necho \"Configuration backup completed: $BACKUP_DIR/shinobi_config_$DATE.tar.gz\"\n```\n\n### Automated Backup Setup\n\n```bash\n# Add to crontab\nsudo crontab -e\n\n# Daily database backup at 2 AM\n0 2 * * * /opt/shinobi/scripts/backup-db.sh\n\n# Weekly configuration backup\n0 3 * * 0 /opt/shinobi/scripts/backup-config.sh\n```\n\n### Restore Procedures\n\n```bash\n# Restore database\ngunzip -c /var/backups/shinobi/shinobi_db_YYYYMMDD_HHMMSS.sql.gz | \\\n    mysql -u ccio -p ccio\n\n# Restore configuration\ntar -xzf /var/backups/shinobi/shinobi_config_YYYYMMDD_HHMMSS.tar.gz -C /\n\n# Restart services\nsudo systemctl restart mariadb\nsudo systemctl restart shinobi\n```\n\n## 10. System Requirements\n\n### Minimum Requirements\n- **CPU**: 2 cores, 2.0 GHz\n- **RAM**: 4GB\n- **Storage**: 100GB (for 1-2 cameras)\n- **Network**: 100 Mbps\n\n### Recommended Requirements\n- **CPU**: 4+ cores, 3.0+ GHz (or hardware acceleration)\n- **RAM**: 8GB+\n- **Storage**: 1TB+ SSD/NVMe\n- **Network**: Gigabit Ethernet\n\n### Scaling Guidelines\n- **Per camera**: ~1GB RAM, 0.5 CPU cores\n- **Storage**: 1-10GB per camera per day (varies by quality)\n- **Bandwidth**: 2-8 Mbps per camera\n\n## 11. Support\n\n### Official Resources\n- **GitLab**: https://gitlab.com/Shinobi-Systems/Shinobi\n- **Documentation**: https://shinobi.video/docs\n- **Community Forum**: https://community.shinobi.video\n- **Discord**: https://discord.gg/mdhmvuH\n\n### Troubleshooting Resources\n- **Wiki**: https://gitlab.com/Shinobi-Systems/Shinobi/-/wikis/home\n- **Issues**: https://gitlab.com/Shinobi-Systems/Shinobi/-/issues\n- **Docker Hub**: https://hub.docker.com/r/shinobisystems/shinobi\n\n## 12. Contributing\n\n### How to Contribute\n1. Fork the repository on GitLab\n2. Create a feature branch\n3. Submit merge request\n4. Follow coding standards\n5. Include tests and documentation\n\n### Development Setup\n```bash\n# Clone development version\ngit clone https://gitlab.com/Shinobi-Systems/Shinobi.git\ncd Shinobi\n\n# Install development dependencies\nnpm install --dev\n\n# Run in development mode\nnpm run dev\n```\n\n## 13. License\n\nShinobi is licensed under the GNU General Public License v3.0 (GPLv3).\n\nKey points:\n- Free to use, modify, and distribute\n- Source code must remain open\n- Commercial use allowed\n- No warranty provided\n\n## 14. Acknowledgments\n\n### Credits\n- **Moe Alam**: Creator and primary developer\n- **Shinobi Systems**: Development team\n- **Community Contributors**: Bug reports and features\n- **FFmpeg Project**: Video processing foundation\n\n## 15. Version History\n\n### Current Releases\n- **v4.0+**: Modern web interface, improved performance\n- **v3.x**: Stable release with plugin system\n- **v2.x**: Legacy version (no longer maintained)\n\n### Major Features by Version\n- **v4.0**: React-based UI, improved API\n- **v3.5**: Plugin marketplace\n- **v3.0**: Multi-tenant support\n- **v2.5**: Motion detection improvements\n\n## 16. Appendices\n\n### A. Camera Configuration Examples\n\n#### Generic RTSP Camera\n```json\n{\n  \"name\": \"Front Door\",\n  \"type\": \"rtsp\",\n  \"path\": \"rtsp://username:password@192.168.1.100:554/stream1\",\n  \"port\": 554,\n  \"host\": \"192.168.1.100\",\n  \"username\": \"admin\",\n  \"password\": \"camera_password\"\n}\n```\n\n#### Hikvision Camera\n```json\n{\n  \"name\": \"Hikvision Cam\",\n  \"type\": \"rtsp\", \n  \"path\": \"rtsp://admin:password@192.168.1.101:554/Streaming/Channels/101\",\n  \"port\": 554,\n  \"host\": \"192.168.1.101\"\n}\n```\n\n#### Dahua Camera\n```json\n{\n  \"name\": \"Dahua Cam\",\n  \"type\": \"rtsp\",\n  \"path\": \"rtsp://admin:password@192.168.1.102:554/cam/realmonitor?channel=1&subtype=0\",\n  \"port\": 554,\n  \"host\": \"192.168.1.102\"\n}\n```\n\n### B. API Examples\n\n#### Get Monitor List\n```bash\ncurl -X GET \"http://localhost:8080/api/monitor/list\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"ke\":\"your_api_key\",\"uid\":\"your_user_id\"}'\n```\n\n#### Start Recording\n```bash\ncurl -X POST \"http://localhost:8080/api/monitor/record/start\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"ke\":\"your_api_key\",\"uid\":\"your_user_id\",\"mid\":\"monitor_id\"}'\n```\n\n### C. Performance Monitoring\n\n```bash\n#!/bin/bash\n# Monitor Shinobi performance\n\necho \"=== CPU Usage ===\"\ntop -bn1 | grep shinobi\n\necho \"=== Memory Usage ===\"\nps aux | grep shinobi | awk '{sum+=$6} END {print \"Total Memory: \" sum/1024 \" MB\"}'\n\necho \"=== Disk Usage ===\"\ndf -h /opt/shinobi/videos\n\necho \"=== Active Connections ===\"\nnetstat -an | grep :8080 | wc -l\n\necho \"=== Database Size ===\"\nmysql -u ccio -p ccio -e \"SELECT table_schema AS 'Database', \nROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS 'MB' \nFROM information_schema.tables WHERE table_schema='ccio';\"\n```\n\n---\n\nFor more information and updates, visit https://github.com/howtomgr/shinobi\n","readmeHtml":"<p class=\"mobile-paragraph\">Shinobi is a free and open-source CCTV/NVR (Network Video Recorder) solution written in Node.js. It serves as a modern FOSS alternative to proprietary video surveillance systems like Blue Iris, Milestone XProtect, Genetec Security Center, or commercial NVR solutions from Hikvision, Dahua, and others. Shinobi supports RTSP, ONVIF, and various IP camera protocols with features including motion detection, object detection, and multi-user support.</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<h3 id=\"hardware-requirements\" class=\"mobile-header\">Hardware Requirements</h3>\n<li class=\"mobile-list-item\"><strong>CPU</strong>: Minimum 2 cores (4+ cores recommended for multiple cameras)</li>\n<li class=\"mobile-list-item\"><strong>RAM</strong>: 4GB minimum (8GB+ recommended)</li>\n<li class=\"mobile-list-item\"><strong>Storage</strong>: 100GB+ for recordings (calculate based on camera count and retention)</li>\n<li class=\"mobile-list-item\"><strong>GPU</strong>: Optional but recommended for hardware acceleration</li>\n<li class=\"mobile-list-item\"><strong>Network</strong>: Gigabit Ethernet recommended for multiple HD cameras</li>\n<h3 id=\"software-requirements\" class=\"mobile-header\">Software Requirements</h3>\n<li class=\"mobile-list-item\"><strong>Node.js</strong>: 14.x or later</li>\n<li class=\"mobile-list-item\"><strong>FFmpeg</strong>: 4.x or later with x264/x265 support</li>\n<li class=\"mobile-list-item\"><strong>MariaDB/MySQL</strong>: 5.7+ or MariaDB 10.3+</li>\n<li class=\"mobile-list-item\"><strong>Git</strong>: For cloning repository</li>\n<li class=\"mobile-list-item\"><strong>Python3</strong>: For some plugins</li>\n<h3 id=\"network-requirements\" class=\"mobile-header\">Network Requirements</h3>\n<li class=\"mobile-list-item\"><strong>Ports</strong>: </li>\n<li class=\"mobile-list-item\">8080: Web interface (HTTP)</li>\n<li class=\"mobile-list-item\">8443: Web interface (HTTPS)</li>\n<li class=\"mobile-list-item\">21: FTP (optional)</li>\n<li class=\"mobile-list-item\">Camera ports (varies by manufacturer)</li>\n<li class=\"mobile-list-item\"><strong>Firewall</strong>: Allow camera network access</li>\n<li class=\"mobile-list-item\"><strong>Bandwidth</strong>: 2-8 Mbps per camera (varies by resolution)</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">Shinobi officially supports:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04 LTS / 22.04 LTS / 24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">macOS 12+ (via Homebrew)</li>\n<li class=\"mobile-list-item\">Windows 10/11 (via WSL2 or native)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable EPEL and PowerTools/CRB repositories\nsudo dnf install -y epel-release\nsudo dnf config-manager --set-enabled powertools  # CentOS Stream 8\nsudo dnf config-manager --set-enabled crb        # RHEL/Rocky/Alma 9\n\n# Install dependencies\nsudo dnf install -y ffmpeg ffmpeg-devel x264 x265 x264-devel x265-devel \\\n    git curl gnupg2 gcc-c++ make cairo-devel jpeg-devel \\\n    giflib-devel pango-devel python3 python3-pip\n\n# Install Node.js 18.x\ncurl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -\nsudo dnf install -y nodejs\n\n# Install MariaDB\nsudo dnf install -y mariadb mariadb-server\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create Shinobi database and user\nsudo mysql -e &quot;CREATE DATABASE ccio;&quot;\nsudo mysql -e &quot;CREATE USER &#039;ccio&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;your_secure_password&#039;;&quot;\nsudo mysql -e &quot;GRANT ALL PRIVILEGES ON ccio.* TO &#039;ccio&#039;@&#039;localhost&#039;;&quot;\nsudo mysql -e &quot;FLUSH PRIVILEGES;&quot;\n\n# Clone and install Shinobi\ncd /opt\nsudo git clone https://gitlab.com/Shinobi-Systems/Shinobi.git shinobi\nsudo chown -R $USER:$USER /opt/shinobi\ncd /opt/shinobi\n\n# Install Node.js dependencies\nnpm install --unsafe-perm\nnpm install pm2 -g\n\n# Configure Shinobi\ncp conf.sample.json conf.json\ncp super.sample.json super.json\n\n# Initialize database\nnode /opt/shinobi/sql/framework.js\n\n# Create systemd service (see Service Management section)</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package lists\nsudo apt update\n\n# Install FFmpeg and multimedia libraries\nsudo apt install -y ffmpeg x264 x265 git curl gnupg2 \\\n    build-essential python3 python3-pip libcairo2-dev \\\n    libjpeg-dev libgif-dev libpango1.0-dev\n\n# Install Node.js 18.x\ncurl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -\nsudo apt install -y nodejs\n\n# Install MariaDB\nsudo apt install -y mariadb-server mariadb-client\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create Shinobi database and user\nsudo mysql -e &quot;CREATE DATABASE ccio;&quot;\nsudo mysql -e &quot;CREATE USER &#039;ccio&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;your_secure_password&#039;;&quot;\nsudo mysql -e &quot;GRANT ALL PRIVILEGES ON ccio.* TO &#039;ccio&#039;@&#039;localhost&#039;;&quot;\nsudo mysql -e &quot;FLUSH PRIVILEGES;&quot;\n\n# Clone and install Shinobi\ncd /opt\nsudo git clone https://gitlab.com/Shinobi-Systems/Shinobi.git shinobi\nsudo chown -R $USER:$USER /opt/shinobi\ncd /opt/shinobi\n\n# Install dependencies\nnpm install --unsafe-perm\nsudo npm install pm2 -g\n\n# Configure Shinobi\ncp conf.sample.json conf.json\ncp super.sample.json super.json\n\n# Initialize database\nnode /opt/shinobi/sql/framework.js</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update system\nsudo pacman -Syu\n\n# Install dependencies\nsudo pacman -S ffmpeg x264 x265 git curl gnupg nodejs npm \\\n    python python-pip base-devel cairo libjpeg-turbo \\\n    libpng pango giflib mariadb\n\n# Enable and start MariaDB\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create Shinobi database and user\nsudo mysql -e &quot;CREATE DATABASE ccio;&quot;\nsudo mysql -e &quot;CREATE USER &#039;ccio&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;your_secure_password&#039;;&quot;\nsudo mysql -e &quot;GRANT ALL PRIVILEGES ON ccio.* TO &#039;ccio&#039;@&#039;localhost&#039;;&quot;\nsudo mysql -e &quot;FLUSH PRIVILEGES;&quot;\n\n# Clone and install Shinobi\ncd /opt\nsudo git clone https://gitlab.com/Shinobi-Systems/Shinobi.git shinobi\nsudo chown -R $USER:$USER /opt/shinobi\ncd /opt/shinobi\n\n# Install dependencies\nnpm install --unsafe-perm\nsudo npm install pm2 -g\n\n# Configure Shinobi\ncp conf.sample.json conf.json\ncp super.sample.json super.json\n\n# Initialize database\nnode /opt/shinobi/sql/framework.js</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apk update\n\n# Install dependencies\nsudo apk add --no-cache ffmpeg x264 x265 git curl gnupg \\\n    nodejs npm python3 py3-pip build-base cairo-dev \\\n    jpeg-dev libpng-dev pango-dev giflib-dev mariadb \\\n    mariadb-client mariadb-dev\n\n# Initialize MariaDB\nsudo mysql_install_db --user=mysql --datadir=/var/lib/mysql\nsudo rc-service mariadb start\nsudo rc-update add mariadb default\nsudo mysql_secure_installation\n\n# Create Shinobi database and user\nsudo mysql -e &quot;CREATE DATABASE ccio;&quot;\nsudo mysql -e &quot;CREATE USER &#039;ccio&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;your_secure_password&#039;;&quot;\nsudo mysql -e &quot;GRANT ALL PRIVILEGES ON ccio.* TO &#039;ccio&#039;@&#039;localhost&#039;;&quot;\nsudo mysql -e &quot;FLUSH PRIVILEGES;&quot;\n\n# Clone and install Shinobi\ncd /opt\nsudo git clone https://gitlab.com/Shinobi-Systems/Shinobi.git shinobi\nsudo chown -R $USER:$USER /opt/shinobi\ncd /opt/shinobi\n\n# Install dependencies\nnpm install --unsafe-perm\nsudo npm install pm2 -g\n\n# Configure Shinobi\ncp conf.sample.json conf.json\ncp super.sample.json super.json\n\n# Initialize database\nnode /opt/shinobi/sql/framework.js</code></pre>\n      </div>\n    </div>\n<h2 id=\"4-configuration\" class=\"mobile-header\">4. Configuration</h2>\n<h3 id=\"database-configuration\" class=\"mobile-header\">Database Configuration</h3>\n<p class=\"mobile-paragraph\">Edit <code class=\"mobile-inline-code\">/opt/shinobi/conf.json</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">{\n  &quot;port&quot;: 8080,\n  &quot;addStorage&quot;: [\n    {\n      &quot;name&quot;: &quot;second&quot;,\n      &quot;path&quot;: &quot;/opt/shinobi/videos2&quot;\n    }\n  ],\n  &quot;ssl&quot;: {\n    &quot;key&quot;: &quot;/path/to/private.key&quot;,\n    &quot;cert&quot;: &quot;/path/to/certificate.crt&quot;,\n    &quot;enabled&quot;: false,\n    &quot;port&quot;: 8443\n  },\n  &quot;db&quot;: {\n    &quot;host&quot;: &quot;127.0.0.1&quot;,\n    &quot;user&quot;: &quot;ccio&quot;,\n    &quot;password&quot;: &quot;your_secure_password&quot;,\n    &quot;database&quot;: &quot;ccio&quot;,\n    &quot;port&quot;: 3306\n  },\n  &quot;mail&quot;: {\n    &quot;auth&quot;: {\n      &quot;user&quot;: &quot;your_email@example.com&quot;,\n      &quot;pass&quot;: &quot;your_app_password&quot;\n    },\n    &quot;host&quot;: &quot;smtp.gmail.com&quot;,\n    &quot;port&quot;: 587,\n    &quot;secure&quot;: false\n  },\n  &quot;cron&quot;: {\n    &quot;deleteOld&quot;: &quot;0 * * * *&quot;\n  }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"super-user-configuration\" class=\"mobile-header\">Super User Configuration</h3>\n<p class=\"mobile-paragraph\">Edit <code class=\"mobile-inline-code\">/opt/shinobi/super.json</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">{\n  &quot;port&quot;: 8080,\n  &quot;bindip&quot;: &quot;0.0.0.0&quot;,\n  &quot;ssl&quot;: {\n    &quot;key&quot;: &quot;&quot;,\n    &quot;cert&quot;: &quot;&quot;,\n    &quot;enabled&quot;: false,\n    &quot;port&quot;: 8443\n  },\n  &quot;db&quot;: {\n    &quot;host&quot;: &quot;127.0.0.1&quot;,\n    &quot;user&quot;: &quot;ccio&quot;,\n    &quot;password&quot;: &quot;your_secure_password&quot;,\n    &quot;database&quot;: &quot;ccio&quot;,\n    &quot;port&quot;: 3306\n  },\n  &quot;mail&quot;: {\n    &quot;auth&quot;: {\n      &quot;user&quot;: &quot;your_email@example.com&quot;,\n      &quot;pass&quot;: &quot;your_app_password&quot;\n    },\n    &quot;host&quot;: &quot;smtp.gmail.com&quot;,\n    &quot;port&quot;: 587,\n    &quot;secure&quot;: false\n  }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"creating-storage-directories\" class=\"mobile-header\">Creating Storage Directories</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create video storage directories\nsudo mkdir -p /opt/shinobi/videos\nsudo mkdir -p /var/shinobi/recordings\nsudo chown -R shinobi:shinobi /opt/shinobi/videos\nsudo chown -R shinobi:shinobi /var/shinobi/recordings\n\n# Set proper permissions\nsudo chmod 755 /opt/shinobi/videos\nsudo chmod 755 /var/shinobi/recordings</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"create-shinobi-user\" class=\"mobile-header\">Create Shinobi User</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create dedicated user\nsudo useradd -r -s /bin/false -d /opt/shinobi shinobi\nsudo chown -R shinobi:shinobi /opt/shinobi</code></pre>\n      </div>\n    </div>\n<h3 id=\"systemd-service-rhel-debian-arch-suse\" class=\"mobile-header\">systemd Service (RHEL, Debian, Arch, SUSE)</h3>\n<p class=\"mobile-paragraph\">Create <code class=\"mobile-inline-code\">/etc/systemd/system/shinobi.service</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"ini\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">ini</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-ini\">[Unit]\nDescription=Shinobi CCTV System\nAfter=network.target mariadb.service\nWants=mariadb.service\n\n[Service]\nType=forking\nUser=shinobi\nGroup=shinobi\nWorkingDirectory=/opt/shinobi\nExecStart=/usr/bin/pm2 start ecosystem.config.js --env production\nExecReload=/usr/bin/pm2 reload ecosystem.config.js --env production\nExecStop=/usr/bin/pm2 stop ecosystem.config.js\nPIDFile=/opt/shinobi/.pm2/pm2.pid\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">Create <code class=\"mobile-inline-code\">/opt/shinobi/ecosystem.config.js</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"javascript\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">javascript</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-javascript\">module.exports = {\n  apps: [\n    {\n      name: &#039;camera&#039;,\n      script: &#039;camera.js&#039;,\n      cwd: &#039;/opt/shinobi&#039;,\n      instances: 1,\n      exec_mode: &#039;fork&#039;,\n      env: {\n        NODE_ENV: &#039;production&#039;\n      }\n    },\n    {\n      name: &#039;cron&#039;,\n      script: &#039;cron.js&#039;,\n      cwd: &#039;/opt/shinobi&#039;,\n      instances: 1,\n      exec_mode: &#039;fork&#039;,\n      env: {\n        NODE_ENV: &#039;production&#039;\n      }\n    }\n  ]\n};</code></pre>\n      </div>\n    </div>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable and start services\nsudo systemctl daemon-reload\nsudo systemctl enable --now shinobi\nsudo systemctl status shinobi</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-service-alpine-linux\" class=\"mobile-header\">OpenRC Service (Alpine Linux)</h3>\n<p class=\"mobile-paragraph\">Create <code class=\"mobile-inline-code\">/etc/init.d/shinobi</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/sbin/openrc-run\n\ndescription=&quot;Shinobi CCTV System&quot;\ncommand=&quot;/usr/bin/pm2&quot;\ncommand_args=&quot;start /opt/shinobi/ecosystem.config.js --env production&quot;\ncommand_user=&quot;shinobi&quot;\npidfile=&quot;/run/shinobi.pid&quot;\n\ndepend() {\n    need net mariadb\n    after mariadb\n}\n\nstart_pre() {\n    checkpath --directory --owner shinobi:shinobi --mode 0755 /run/shinobi\n}</code></pre>\n      </div>\n    </div>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Make executable and enable\nsudo chmod +x /etc/init.d/shinobi\nsudo rc-update add shinobi default\nsudo rc-service shinobi start</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Shinobi won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u shinobi -f\n\n# Check PM2 status\nsudo -u shinobi pm2 status\nsudo -u shinobi pm2 logs\n\n# Check database connection\nmysql -u ccio -p ccio -e &quot;SHOW TABLES;&quot;</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Cameras not connecting</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Test RTSP stream manually\nffmpeg -rtsp_transport tcp -i rtsp://username:password@camera_ip:554/stream -t 10 test.mp4\n\n# Check network connectivity\nping camera_ip\ntelnet camera_ip 554</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>High CPU usage</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check encoding settings in monitor configuration\n# Reduce video quality or frame rate\n# Enable hardware acceleration if available</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">4. <strong>Storage issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check disk space\ndf -h /opt/shinobi/videos\n\n# Check permissions\nls -la /opt/shinobi/videos\n\n# Check cron job for cleanup\nsudo -u shinobi crontab -l</code></pre>\n      </div>\n    </div>\n<h2 id=\"7-security-considerations\" class=\"mobile-header\">7. Security Considerations</h2>\n<h3 id=\"ssltls-configuration\" class=\"mobile-header\">SSL/TLS Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate self-signed certificate\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /opt/shinobi/ssl/shinobi.key \\\n    -out /opt/shinobi/ssl/shinobi.crt\n\n# Set permissions\nsudo chown shinobi:shinobi /opt/shinobi/ssl/*\nsudo chmod 600 /opt/shinobi/ssl/shinobi.key\nsudo chmod 644 /opt/shinobi/ssl/shinobi.crt</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">Update <code class=\"mobile-inline-code\">/opt/shinobi/conf.json</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">{\n  &quot;ssl&quot;: {\n    &quot;key&quot;: &quot;/opt/shinobi/ssl/shinobi.key&quot;,\n    &quot;cert&quot;: &quot;/opt/shinobi/ssl/shinobi.crt&quot;,\n    &quot;enabled&quot;: true,\n    &quot;port&quot;: 8443\n  }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"firewall-configuration\" class=\"mobile-header\">Firewall Configuration</h3>\n<p class=\"mobile-paragraph\">#### firewalld (RHEL/CentOS)</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo firewall-cmd --permanent --add-port=8080/tcp\nsudo firewall-cmd --permanent --add-port=8443/tcp\nsudo firewall-cmd --reload</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### ufw (Ubuntu/Debian)</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo ufw allow 8080/tcp\nsudo ufw allow 8443/tcp\nsudo ufw enable</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### iptables</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo iptables -A INPUT -p tcp --dport 8080 -j ACCEPT\nsudo iptables -A INPUT -p tcp --dport 8443 -j ACCEPT\nsudo iptables-save | sudo tee /etc/iptables/rules.v4</code></pre>\n      </div>\n    </div>\n<h3 id=\"user-authentication\" class=\"mobile-header\">User Authentication</h3>\n<p class=\"mobile-paragraph\">1. <strong>Change default admin password</strong>:</p>\n<li class=\"mobile-list-item\">Login to web interface: http://your_server:8080</li>\n<li class=\"mobile-list-item\">Go to Settings → Users</li>\n<li class=\"mobile-list-item\">Change admin password</li>\n<p class=\"mobile-paragraph\">2. <strong>Create limited users</strong>:</p>\n<li class=\"mobile-list-item\">Add users with specific camera access</li>\n<li class=\"mobile-list-item\">Set view-only permissions for monitors</li>\n<p class=\"mobile-paragraph\">3. <strong>API Key Security</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate secure API keys\nopenssl rand -hex 32\n\n# Rotate keys regularly via web interface</code></pre>\n      </div>\n    </div>\n<h2 id=\"8-performance-tuning\" class=\"mobile-header\">8. Performance Tuning</h2>\n<h3 id=\"hardware-acceleration\" class=\"mobile-header\">Hardware Acceleration</h3>\n<p class=\"mobile-paragraph\">Enable GPU acceleration in <code class=\"mobile-inline-code\">/opt/shinobi/conf.json</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">{\n  &quot;accelerator&quot;: {\n    &quot;enabled&quot;: true,\n    &quot;hwaccel&quot;: &quot;vaapi&quot;,\n    &quot;hwaccel_device&quot;: &quot;/dev/dri/renderD128&quot;\n  }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"cpu-optimization\" class=\"mobile-header\">CPU Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set CPU governor to performance\necho performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\n\n# Adjust process priorities\nsudo systemctl edit shinobi</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">Add to override file:</p>\n<div class=\"mobile-code-block\" data-language=\"ini\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">ini</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-ini\">[Service]\nNice=-10\nIOSchedulingClass=1\nIOSchedulingPriority=4</code></pre>\n      </div>\n    </div>\n<h3 id=\"memory-optimization\" class=\"mobile-header\">Memory Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Increase shared memory for large installations\necho &#039;kernel.shmmax = 268435456&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;kernel.shmall = 2097152&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h3 id=\"storage-optimization\" class=\"mobile-header\">Storage Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Use SSD for database and temporary files\nsudo mkdir -p /var/lib/mysql-ssd\nsudo mount /dev/nvme0n1p1 /var/lib/mysql-ssd\nsudo chown mysql:mysql /var/lib/mysql-ssd\n\n# Configure log rotation\nsudo nano /etc/logrotate.d/shinobi</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">Add:</p>\n<div class=\"mobile-code-block\" data-language=\"text\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">text</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-text\">/opt/shinobi/logs/*.log {\n    daily\n    missingok\n    rotate 7\n    compress\n    delaycompress\n    copytruncate\n}</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"database-backup\" class=\"mobile-header\">Database Backup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# /opt/shinobi/scripts/backup-db.sh\n\nBACKUP_DIR=&quot;/var/backups/shinobi&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\nDB_USER=&quot;ccio&quot;\nDB_PASS=&quot;your_secure_password&quot;\nDB_NAME=&quot;ccio&quot;\n\n# Create backup directory\nmkdir -p $BACKUP_DIR\n\n# Backup database\nmysqldump -u $DB_USER -p$DB_PASS $DB_NAME &gt; $BACKUP_DIR/shinobi_db_$DATE.sql\n\n# Compress backup\ngzip $BACKUP_DIR/shinobi_db_$DATE.sql\n\n# Remove backups older than 30 days\nfind $BACKUP_DIR -name &quot;shinobi_db_*.sql.gz&quot; -mtime +30 -delete\n\necho &quot;Database backup completed: $BACKUP_DIR/shinobi_db_$DATE.sql.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"configuration-backup\" class=\"mobile-header\">Configuration Backup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# /opt/shinobi/scripts/backup-config.sh\n\nBACKUP_DIR=&quot;/var/backups/shinobi&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\n# Create backup directory\nmkdir -p $BACKUP_DIR\n\n# Backup configuration files\ntar -czf $BACKUP_DIR/shinobi_config_$DATE.tar.gz \\\n    /opt/shinobi/conf.json \\\n    /opt/shinobi/super.json \\\n    /opt/shinobi/ssl/ \\\n    /etc/systemd/system/shinobi.service\n\necho &quot;Configuration backup completed: $BACKUP_DIR/shinobi_config_$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"automated-backup-setup\" class=\"mobile-header\">Automated Backup Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Add to crontab\nsudo crontab -e\n\n# Daily database backup at 2 AM\n0 2 * * * /opt/shinobi/scripts/backup-db.sh\n\n# Weekly configuration backup\n0 3 * * 0 /opt/shinobi/scripts/backup-config.sh</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedures\" class=\"mobile-header\">Restore Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Restore database\ngunzip -c /var/backups/shinobi/shinobi_db_YYYYMMDD_HHMMSS.sql.gz | \\\n    mysql -u ccio -p ccio\n\n# Restore configuration\ntar -xzf /var/backups/shinobi/shinobi_config_YYYYMMDD_HHMMSS.tar.gz -C /\n\n# Restart services\nsudo systemctl restart mariadb\nsudo systemctl restart shinobi</code></pre>\n      </div>\n    </div>\n<h2 id=\"10-system-requirements\" class=\"mobile-header\">10. System Requirements</h2>\n<h3 id=\"minimum-requirements\" class=\"mobile-header\">Minimum Requirements</h3>\n<li class=\"mobile-list-item\"><strong>CPU</strong>: 2 cores, 2.0 GHz</li>\n<li class=\"mobile-list-item\"><strong>RAM</strong>: 4GB</li>\n<li class=\"mobile-list-item\"><strong>Storage</strong>: 100GB (for 1-2 cameras)</li>\n<li class=\"mobile-list-item\"><strong>Network</strong>: 100 Mbps</li>\n<h3 id=\"recommended-requirements\" class=\"mobile-header\">Recommended Requirements</h3>\n<li class=\"mobile-list-item\"><strong>CPU</strong>: 4+ cores, 3.0+ GHz (or hardware acceleration)</li>\n<li class=\"mobile-list-item\"><strong>RAM</strong>: 8GB+</li>\n<li class=\"mobile-list-item\"><strong>Storage</strong>: 1TB+ SSD/NVMe</li>\n<li class=\"mobile-list-item\"><strong>Network</strong>: Gigabit Ethernet</li>\n<h3 id=\"scaling-guidelines\" class=\"mobile-header\">Scaling Guidelines</h3>\n<li class=\"mobile-list-item\"><strong>Per camera</strong>: ~1GB RAM, 0.5 CPU cores</li>\n<li class=\"mobile-list-item\"><strong>Storage</strong>: 1-10GB per camera per day (varies by quality)</li>\n<li class=\"mobile-list-item\"><strong>Bandwidth</strong>: 2-8 Mbps per camera</li>\n<h2 id=\"11-support\" class=\"mobile-header\">11. Support</h2>\n<h3 id=\"official-resources\" class=\"mobile-header\">Official Resources</h3>\n<li class=\"mobile-list-item\"><strong>GitLab</strong>: https://gitlab.com/Shinobi-Systems/Shinobi</li>\n<li class=\"mobile-list-item\"><strong>Documentation</strong>: https://shinobi.video/docs</li>\n<li class=\"mobile-list-item\"><strong>Community Forum</strong>: https://community.shinobi.video</li>\n<li class=\"mobile-list-item\"><strong>Discord</strong>: https://discord.gg/mdhmvuH</li>\n<h3 id=\"troubleshooting-resources\" class=\"mobile-header\">Troubleshooting Resources</h3>\n<li class=\"mobile-list-item\"><strong>Wiki</strong>: https://gitlab.com/Shinobi-Systems/Shinobi/-/wikis/home</li>\n<li class=\"mobile-list-item\"><strong>Issues</strong>: https://gitlab.com/Shinobi-Systems/Shinobi/-/issues</li>\n<li class=\"mobile-list-item\"><strong>Docker Hub</strong>: https://hub.docker.com/r/shinobisystems/shinobi</li>\n<h2 id=\"12-contributing\" class=\"mobile-header\">12. Contributing</h2>\n<h3 id=\"how-to-contribute\" class=\"mobile-header\">How to Contribute</h3>\n<p class=\"mobile-paragraph\">1. Fork the repository on GitLab</p>\n<p class=\"mobile-paragraph\">2. Create a feature branch</p>\n<p class=\"mobile-paragraph\">3. Submit merge request</p>\n<p class=\"mobile-paragraph\">4. Follow coding standards</p>\n<p class=\"mobile-paragraph\">5. Include tests and documentation</p>\n<h3 id=\"development-setup\" class=\"mobile-header\">Development Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clone development version\ngit clone https://gitlab.com/Shinobi-Systems/Shinobi.git\ncd Shinobi\n\n# Install development dependencies\nnpm install --dev\n\n# Run in development mode\nnpm run dev</code></pre>\n      </div>\n    </div>\n<h2 id=\"13-license\" class=\"mobile-header\">13. License</h2>\n<p class=\"mobile-paragraph\">Shinobi is licensed under the GNU General Public License v3.0 (GPLv3).</p>\n<p class=\"mobile-paragraph\">Key points:</p>\n<li class=\"mobile-list-item\">Free to use, modify, and distribute</li>\n<li class=\"mobile-list-item\">Source code must remain open</li>\n<li class=\"mobile-list-item\">Commercial use allowed</li>\n<li class=\"mobile-list-item\">No warranty provided</li>\n<h2 id=\"14-acknowledgments\" class=\"mobile-header\">14. Acknowledgments</h2>\n<h3 id=\"credits\" class=\"mobile-header\">Credits</h3>\n<li class=\"mobile-list-item\"><strong>Moe Alam</strong>: Creator and primary developer</li>\n<li class=\"mobile-list-item\"><strong>Shinobi Systems</strong>: Development team</li>\n<li class=\"mobile-list-item\"><strong>Community Contributors</strong>: Bug reports and features</li>\n<li class=\"mobile-list-item\"><strong>FFmpeg Project</strong>: Video processing foundation</li>\n<h2 id=\"15-version-history\" class=\"mobile-header\">15. Version History</h2>\n<h3 id=\"current-releases\" class=\"mobile-header\">Current Releases</h3>\n<li class=\"mobile-list-item\"><strong>v4.0+</strong>: Modern web interface, improved performance</li>\n<li class=\"mobile-list-item\"><strong>v3.x</strong>: Stable release with plugin system</li>\n<li class=\"mobile-list-item\"><strong>v2.x</strong>: Legacy version (no longer maintained)</li>\n<h3 id=\"major-features-by-version\" class=\"mobile-header\">Major Features by Version</h3>\n<li class=\"mobile-list-item\"><strong>v4.0</strong>: React-based UI, improved API</li>\n<li class=\"mobile-list-item\"><strong>v3.5</strong>: Plugin marketplace</li>\n<li class=\"mobile-list-item\"><strong>v3.0</strong>: Multi-tenant support</li>\n<li class=\"mobile-list-item\"><strong>v2.5</strong>: Motion detection improvements</li>\n<h2 id=\"16-appendices\" class=\"mobile-header\">16. Appendices</h2>\n<h3 id=\"a-camera-configuration-examples\" class=\"mobile-header\">A. Camera Configuration Examples</h3>\n<p class=\"mobile-paragraph\">#### Generic RTSP Camera</p>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">{\n  &quot;name&quot;: &quot;Front Door&quot;,\n  &quot;type&quot;: &quot;rtsp&quot;,\n  &quot;path&quot;: &quot;rtsp://username:password@192.168.1.100:554/stream1&quot;,\n  &quot;port&quot;: 554,\n  &quot;host&quot;: &quot;192.168.1.100&quot;,\n  &quot;username&quot;: &quot;admin&quot;,\n  &quot;password&quot;: &quot;camera_password&quot;\n}</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Hikvision Camera</p>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">{\n  &quot;name&quot;: &quot;Hikvision Cam&quot;,\n  &quot;type&quot;: &quot;rtsp&quot;, \n  &quot;path&quot;: &quot;rtsp://admin:password@192.168.1.101:554/Streaming/Channels/101&quot;,\n  &quot;port&quot;: 554,\n  &quot;host&quot;: &quot;192.168.1.101&quot;\n}</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Dahua Camera</p>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">{\n  &quot;name&quot;: &quot;Dahua Cam&quot;,\n  &quot;type&quot;: &quot;rtsp&quot;,\n  &quot;path&quot;: &quot;rtsp://admin:password@192.168.1.102:554/cam/realmonitor?channel=1&amp;subtype=0&quot;,\n  &quot;port&quot;: 554,\n  &quot;host&quot;: &quot;192.168.1.102&quot;\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"b-api-examples\" class=\"mobile-header\">B. API Examples</h3>\n<p class=\"mobile-paragraph\">#### Get Monitor List</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">curl -X GET &quot;http://localhost:8080/api/monitor/list&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &#039;{&quot;ke&quot;:&quot;your_api_key&quot;,&quot;uid&quot;:&quot;your_user_id&quot;}&#039;</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Start Recording</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">curl -X POST &quot;http://localhost:8080/api/monitor/record/start&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &#039;{&quot;ke&quot;:&quot;your_api_key&quot;,&quot;uid&quot;:&quot;your_user_id&quot;,&quot;mid&quot;:&quot;monitor_id&quot;}&#039;</code></pre>\n      </div>\n    </div>\n<h3 id=\"c-performance-monitoring\" class=\"mobile-header\">C. Performance Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Monitor Shinobi performance\n\necho &quot;=== CPU Usage ===&quot;\ntop -bn1 | grep shinobi\n\necho &quot;=== Memory Usage ===&quot;\nps aux | grep shinobi | awk &#039;{sum+=$6} END {print &quot;Total Memory: &quot; sum/1024 &quot; MB&quot;}&#039;\n\necho &quot;=== Disk Usage ===&quot;\ndf -h /opt/shinobi/videos\n\necho &quot;=== Active Connections ===&quot;\nnetstat -an | grep :8080 | wc -l\n\necho &quot;=== Database Size ===&quot;\nmysql -u ccio -p ccio -e &quot;SELECT table_schema AS &#039;Database&#039;, \nROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS &#039;MB&#039; \nFROM information_schema.tables WHERE table_schema=&#039;ccio&#039;;&quot;</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\">For more information and updates, visit https://github.com/howtomgr/shinobi</p>","readTime":"12 min","wordCount":2364,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":3,"text":"Hardware Requirements","id":"hardware-requirements"},{"level":3,"text":"Software Requirements","id":"software-requirements"},{"level":3,"text":"Network Requirements","id":"network-requirements"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":2,"text":"4. Configuration","id":"4-configuration"},{"level":3,"text":"Database Configuration","id":"database-configuration"},{"level":3,"text":"Super User Configuration","id":"super-user-configuration"},{"level":3,"text":"Creating Storage Directories","id":"creating-storage-directories"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"Create Shinobi User","id":"create-shinobi-user"},{"level":3,"text":"systemd Service (RHEL, Debian, Arch, SUSE)","id":"systemd-service-rhel-debian-arch-suse"},{"level":3,"text":"OpenRC Service (Alpine Linux)","id":"openrc-service-alpine-linux"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"7. Security Considerations","id":"7-security-considerations"},{"level":3,"text":"SSL/TLS Configuration","id":"ssltls-configuration"},{"level":3,"text":"Firewall Configuration","id":"firewall-configuration"},{"level":3,"text":"User Authentication","id":"user-authentication"},{"level":2,"text":"8. Performance Tuning","id":"8-performance-tuning"},{"level":3,"text":"Hardware Acceleration","id":"hardware-acceleration"},{"level":3,"text":"CPU Optimization","id":"cpu-optimization"},{"level":3,"text":"Memory Optimization","id":"memory-optimization"},{"level":3,"text":"Storage Optimization","id":"storage-optimization"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Database Backup","id":"database-backup"},{"level":3,"text":"Configuration Backup","id":"configuration-backup"},{"level":3,"text":"Automated Backup Setup","id":"automated-backup-setup"},{"level":3,"text":"Restore Procedures","id":"restore-procedures"},{"level":2,"text":"10. System Requirements","id":"10-system-requirements"},{"level":3,"text":"Minimum Requirements","id":"minimum-requirements"},{"level":3,"text":"Recommended Requirements","id":"recommended-requirements"},{"level":3,"text":"Scaling Guidelines","id":"scaling-guidelines"},{"level":2,"text":"11. Support","id":"11-support"},{"level":3,"text":"Official Resources","id":"official-resources"},{"level":3,"text":"Troubleshooting Resources","id":"troubleshooting-resources"},{"level":2,"text":"12. Contributing","id":"12-contributing"},{"level":3,"text":"How to Contribute","id":"how-to-contribute"},{"level":3,"text":"Development Setup","id":"development-setup"},{"level":2,"text":"13. License","id":"13-license"},{"level":2,"text":"14. Acknowledgments","id":"14-acknowledgments"},{"level":3,"text":"Credits","id":"credits"},{"level":2,"text":"15. Version History","id":"15-version-history"},{"level":3,"text":"Current Releases","id":"current-releases"},{"level":3,"text":"Major Features by Version","id":"major-features-by-version"},{"level":2,"text":"16. Appendices","id":"16-appendices"},{"level":3,"text":"A. Camera Configuration Examples","id":"a-camera-configuration-examples"},{"level":3,"text":"B. API Examples","id":"b-api-examples"},{"level":3,"text":"C. Performance Monitoring","id":"c-performance-monitoring"}],"lastBuilt":"2025-10-04T18:13:01.701Z","metadataVersion":"2.0"},"category":{"key":"surveillance","name":"Surveillance","description":"Surveillance tools and applications","icon":"🔧","color":"#6272a4"},"relatedGuides":[]},"__N_SSG":true}