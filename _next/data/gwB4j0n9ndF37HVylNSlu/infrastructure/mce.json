{"pageProps":{"guide":{"name":"mce","displayName":"Mce","slug":"mce","description":"Repo for mce","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/mce","updatedAt":"2025-09-08T03:10:56Z","createdAt":"2023-08-28T03:48:56Z","readmeRaw":"# CouchPotato/HeadPhones/SickRage/Plex/Emby install\n\n## CentOS/RedHat/SL 7\n\n```bash\nyum groupinstall -y \"Development Tools\"\nyum -y install curl gcc gettext git libmediainfo libzen mediainfo p7zip par2cmdline python-configobj sqlite tar unzip wget unrar\n\nmkdir -p /mnt/media /mnt/torrents\necho \"\n10.0.254.1:/mnt/Volume_1/media           /mnt/media                   nfs defaults,rw 0 0\n10.0.254.1:/mnt/Volume_1/torrents        /mnt/torrents                nfs defaults,rw 0 0\n\" >> /etc/fstab\nmount -a\n```\n\n### CouchPotato\n\n```bash\nyum install -y transmission-daemon\nrm -Rf /usr/src/python2 /usr/src/python3\ngit clone https://git.casjay.in/interpreters/python2.git /usr/src/python2\ncd /usr/src/python2 && ./build.sh && cd\n\ngit clone https://git.casjay.in/mirrors/couchpotato.git /var/lib/couchpotato\ngit clone https://git.casjay.in/systems/couchpotato.git /tmp/couchpotato\n\nmkdir -p /var/lib/couchpotato && cd /var/lib/couchpotato\n/usr/local/bin/python2.7 -m virtualenv .\nsource /var/lib/couchpotato/bin/activate\n/var/lib/couchpotato/bin/python -m pip install cheetah cryptography sabyenc --upgrade\n/var/lib/couchpotato/bin/python -m pip install -r /tmp/couchpotato/requirements.txt\ndeactivate\n\ncd ~\n\ncp -Rfv /tmp/couchpotato/{etc,root,var}* /\nsystemctl disable transmission-daemon --now\nsystemctl enable couchpotato couchpotato-bt httpd nginx smb nmb --now\n\nrm -Rf /usr/src/python2 /usr/src/python3 /tmp/couchpotato/ \n\nmunin-node-configure --remove-also --shell | sh\nsystemctl restart munin-node httpd nginx\nhistory -c && history -w && exit\n\n```\n\n### HeadPhones\n\n```bash\nyum install -y transmission-daemon\nrm -Rf /usr/src/python2 /usr/src/python3\ngit clone https://git.casjay.in/interpreters/python2.git /usr/src/python2\ncd /usr/src/python2 && ./build.sh && cd\n\ngit clone https://git.casjay.in/mirrors/headphones.git /var/lib/headphones\ngit clone https://git.casjay.in/systems/headphones.git /tmp/headphones\n\nmkdir -p /var/lib/headphones && cd /var/lib/headphones\n/usr/local/bin/python2.7 -m virtualenv .\nsource /var/lib/headphones/bin/activate\n/var/lib/headphones/bin/python -m pip install cheetah cryptography sabyenc --upgrade\n/var/lib/headphones/bin/python -m pip install -r /tmp/headphones/requirements.txt\ndeactivate\n\ncd ~\n\ncp -Rfv /tmp/headphones/{etc,root,var}* /\nsystemctl disable transmission-daemon --now\nsystemctl enable headphones headphones-bt httpd nginx smb nmb --now\n\nrm -Rf /usr/src/python2 /usr/src/python3 /tmp/headphones/ \n\nmunin-node-configure --remove-also --shell | sh\nsystemctl restart munin-node httpd nginx\nhistory -c && history -w && exit\n\n```\n\n### SickRage\n\n```bash\nyum install -y transmission-daemon\nrm -Rf /usr/src/python2 /usr/src/python3\ngit clone https://git.casjay.in/interpreters/python2.git /usr/src/python2\ncd /usr/src/python2 && ./build.sh && cd\n\ngit clone https://git.casjay.in/mirrors/sickrage.git /var/lib/sickrage\ngit clone https://git.casjay.in/systems/sickrage.git /tmp/sickrage\n\nmkdir -p /var/lib/sickrage && cd /var/lib/sickrage\n/usr/local/bin/python2.7 -m virtualenv .\nsource /var/lib/sickrage/bin/activate\n/var/lib/sickrage/bin/python -m pip install cheetah cryptography sabyenc --upgrade\n/var/lib/sickrage/bin/python -m pip install -r /tmp/sickrage/requirements.txt\ndeactivate\n\ncd ~\n\ncp -Rfv /tmp/sickrage/{etc,root,var}* /\nsystemctl disable transmission-daemon --now\nsystemctl enable sickrage sickrage-bt httpd nginx smb nmb --now\n\nrm -Rf /usr/src/python2 /usr/src/python3 /tmp/sickrage/ \n\nmunin-node-configure --remove-also --shell | sh\nsystemctl restart munin-node httpd nginx\nhistory -c && history -w && exit\n\n```\n\n### Plex\n\n```bash\nyum install ffmpeg\nyum install -y https://downloads.plex.tv/plex-media-server/1.14.0.5470-9d51fdfaa/plexmediaserver-1.14.0.5470-9d51fdfaa.x86_64.rpm \ngo to http://yourserverip:32400/ and configure it\n\nOptional stats for plex [Tautulli]\nrm -Rf /usr/src/python2 /usr/src/python3\ngit clone https://git.casjay.in/interpreters/python2.git /usr/src/python2\ncd /usr/src/python2 && ./build.sh && cd\ngit clone https://git.casjay.in/mirrors/Plex-Tautulli.git /var/lib/tautulli\ngit clone https://git.casjay.in/mirrors/plex.git /tmp/plex\ncp -Rf /tmp/plex/{etc,root,var}* /\n```\n\n### Emby\n\n```bash\nyum install ffmpeg\nyum install -y https://github.com/MediaBrowser/Emby.Releases/releases/download/3.5.3.0/emby-server-rpm_3.5.3.0_x86_64.rpm\ngo to http://yourserverip:8096/ and configure it\n\n```\n\n### Airsonic\n\n```bash\nmkdir -p /var/airsonic\nyum install java-1.8.0-openjdk-headless -y\nwget https://github.com/airsonic/airsonic/raw/main/contrib/airsonic.service -O /etc/systemd/system/airsonic.service\nwget https://github.com/airsonic/airsonic/releases/download/v10.1.2/airsonic.war -O /var/airsonic/airsonic.war\nmkdir -p /mnt/media\necho \" 10.0.254.1:/mnt/Volume_1/media           /mnt/media                   nfs defaults,rw 0 0\" >> /etc/fstab\nmount -a\n\n```\n","readmeHtml":"<h1 id=\"couchpotatoheadphonessickrageplexemby-install\" class=\"mobile-header\">CouchPotato/HeadPhones/SickRage/Plex/Emby install</h1>\n<h2 id=\"centosredhatsl-7\" class=\"mobile-header\">CentOS/RedHat/SL 7</h2>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">yum groupinstall -y &quot;Development Tools&quot;\nyum -y install curl gcc gettext git libmediainfo libzen mediainfo p7zip par2cmdline python-configobj sqlite tar unzip wget unrar\n\nmkdir -p /mnt/media /mnt/torrents\necho &quot;\n10.0.254.1:/mnt/Volume_1/media           /mnt/media                   nfs defaults,rw 0 0\n10.0.254.1:/mnt/Volume_1/torrents        /mnt/torrents                nfs defaults,rw 0 0\n&quot; &gt;&gt; /etc/fstab\nmount -a</code></pre>\n      </div>\n    </div>\n<h3 id=\"couchpotato\" class=\"mobile-header\">CouchPotato</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">yum install -y transmission-daemon\nrm -Rf /usr/src/python2 /usr/src/python3\ngit clone https://git.casjay.in/interpreters/python2.git /usr/src/python2\ncd /usr/src/python2 &amp;&amp; ./build.sh &amp;&amp; cd\n\ngit clone https://git.casjay.in/mirrors/couchpotato.git /var/lib/couchpotato\ngit clone https://git.casjay.in/systems/couchpotato.git /tmp/couchpotato\n\nmkdir -p /var/lib/couchpotato &amp;&amp; cd /var/lib/couchpotato\n/usr/local/bin/python2.7 -m virtualenv .\nsource /var/lib/couchpotato/bin/activate\n/var/lib/couchpotato/bin/python -m pip install cheetah cryptography sabyenc --upgrade\n/var/lib/couchpotato/bin/python -m pip install -r /tmp/couchpotato/requirements.txt\ndeactivate\n\ncd ~\n\ncp -Rfv /tmp/couchpotato/{etc,root,var}* /\nsystemctl disable transmission-daemon --now\nsystemctl enable couchpotato couchpotato-bt httpd nginx smb nmb --now\n\nrm -Rf /usr/src/python2 /usr/src/python3 /tmp/couchpotato/ \n\nmunin-node-configure --remove-also --shell | sh\nsystemctl restart munin-node httpd nginx\nhistory -c &amp;&amp; history -w &amp;&amp; exit\n</code></pre>\n      </div>\n    </div>\n<h3 id=\"headphones\" class=\"mobile-header\">HeadPhones</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">yum install -y transmission-daemon\nrm -Rf /usr/src/python2 /usr/src/python3\ngit clone https://git.casjay.in/interpreters/python2.git /usr/src/python2\ncd /usr/src/python2 &amp;&amp; ./build.sh &amp;&amp; cd\n\ngit clone https://git.casjay.in/mirrors/headphones.git /var/lib/headphones\ngit clone https://git.casjay.in/systems/headphones.git /tmp/headphones\n\nmkdir -p /var/lib/headphones &amp;&amp; cd /var/lib/headphones\n/usr/local/bin/python2.7 -m virtualenv .\nsource /var/lib/headphones/bin/activate\n/var/lib/headphones/bin/python -m pip install cheetah cryptography sabyenc --upgrade\n/var/lib/headphones/bin/python -m pip install -r /tmp/headphones/requirements.txt\ndeactivate\n\ncd ~\n\ncp -Rfv /tmp/headphones/{etc,root,var}* /\nsystemctl disable transmission-daemon --now\nsystemctl enable headphones headphones-bt httpd nginx smb nmb --now\n\nrm -Rf /usr/src/python2 /usr/src/python3 /tmp/headphones/ \n\nmunin-node-configure --remove-also --shell | sh\nsystemctl restart munin-node httpd nginx\nhistory -c &amp;&amp; history -w &amp;&amp; exit\n</code></pre>\n      </div>\n    </div>\n<h3 id=\"sickrage\" class=\"mobile-header\">SickRage</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">yum install -y transmission-daemon\nrm -Rf /usr/src/python2 /usr/src/python3\ngit clone https://git.casjay.in/interpreters/python2.git /usr/src/python2\ncd /usr/src/python2 &amp;&amp; ./build.sh &amp;&amp; cd\n\ngit clone https://git.casjay.in/mirrors/sickrage.git /var/lib/sickrage\ngit clone https://git.casjay.in/systems/sickrage.git /tmp/sickrage\n\nmkdir -p /var/lib/sickrage &amp;&amp; cd /var/lib/sickrage\n/usr/local/bin/python2.7 -m virtualenv .\nsource /var/lib/sickrage/bin/activate\n/var/lib/sickrage/bin/python -m pip install cheetah cryptography sabyenc --upgrade\n/var/lib/sickrage/bin/python -m pip install -r /tmp/sickrage/requirements.txt\ndeactivate\n\ncd ~\n\ncp -Rfv /tmp/sickrage/{etc,root,var}* /\nsystemctl disable transmission-daemon --now\nsystemctl enable sickrage sickrage-bt httpd nginx smb nmb --now\n\nrm -Rf /usr/src/python2 /usr/src/python3 /tmp/sickrage/ \n\nmunin-node-configure --remove-also --shell | sh\nsystemctl restart munin-node httpd nginx\nhistory -c &amp;&amp; history -w &amp;&amp; exit\n</code></pre>\n      </div>\n    </div>\n<h3 id=\"plex\" class=\"mobile-header\">Plex</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">yum install ffmpeg\nyum install -y https://downloads.plex.tv/plex-media-server/1.14.0.5470-9d51fdfaa/plexmediaserver-1.14.0.5470-9d51fdfaa.x86_64.rpm \ngo to http://yourserverip:32400/ and configure it\n\nOptional stats for plex [Tautulli]\nrm -Rf /usr/src/python2 /usr/src/python3\ngit clone https://git.casjay.in/interpreters/python2.git /usr/src/python2\ncd /usr/src/python2 &amp;&amp; ./build.sh &amp;&amp; cd\ngit clone https://git.casjay.in/mirrors/Plex-Tautulli.git /var/lib/tautulli\ngit clone https://git.casjay.in/mirrors/plex.git /tmp/plex\ncp -Rf /tmp/plex/{etc,root,var}* /</code></pre>\n      </div>\n    </div>\n<h3 id=\"emby\" class=\"mobile-header\">Emby</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">yum install ffmpeg\nyum install -y https://github.com/MediaBrowser/Emby.Releases/releases/download/3.5.3.0/emby-server-rpm_3.5.3.0_x86_64.rpm\ngo to http://yourserverip:8096/ and configure it\n</code></pre>\n      </div>\n    </div>\n<h3 id=\"airsonic\" class=\"mobile-header\">Airsonic</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">mkdir -p /var/airsonic\nyum install java-1.8.0-openjdk-headless -y\nwget https://github.com/airsonic/airsonic/raw/main/contrib/airsonic.service -O /etc/systemd/system/airsonic.service\nwget https://github.com/airsonic/airsonic/releases/download/v10.1.2/airsonic.war -O /var/airsonic/airsonic.war\nmkdir -p /mnt/media\necho &quot; 10.0.254.1:/mnt/Volume_1/media           /mnt/media                   nfs defaults,rw 0 0&quot; &gt;&gt; /etc/fstab\nmount -a\n</code></pre>\n      </div>\n    </div>","readTime":"3 min","wordCount":448,"lastBuilt":"2025-09-14T00:58:28.049Z"},"category":{"key":"infrastructure","name":"Infrastructure","description":"DevOps and infrastructure automation tools","icon":"🏗️","color":"#44475a","keywords":["ansible","terraform","gitlab","jenkins","consul","etcd"]},"relatedGuides":[{"name":".claude","displayName":".claude","slug":".claude","description":"Repo for .claude","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/.claude","updatedAt":"2025-09-08T03:05:59Z","createdAt":"2025-09-08T03:05:48Z","readmeRaw":"## 👋 Welcome to .claude 🚀  \n\n.claude README  \n  \n  \n## Author  \n\n🤖 casjay: [Github](https://github.com/casjay) 🤖  \n","readmeHtml":"<h2 id=\"welcome-to-claude\" class=\"mobile-header\">👋 Welcome to .claude 🚀  </h2>\n<p class=\"mobile-paragraph\">.claude README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">🤖 casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> 🤖  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-14T00:58:32.668Z"},{"name":"adguard-home","displayName":"Adguard Home","slug":"adguard-home","description":"Repo for adguard-home","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/adguard-home","updatedAt":"2025-09-08T03:04:18Z","createdAt":"2025-09-08T03:04:08Z","readmeRaw":"## 👋 Welcome to adguard-home 🚀  \n\nadguard-home README  \n  \n  \n## Author  \n\n🤖 casjay: [Github](https://github.com/casjay) 🤖  \n","readmeHtml":"<h2 id=\"welcome-to-adguard-home\" class=\"mobile-header\">👋 Welcome to adguard-home 🚀  </h2>\n<p class=\"mobile-paragraph\">adguard-home README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">🤖 casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> 🤖  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-14T00:58:33.831Z"},{"name":"adminer","displayName":"Adminer","slug":"adminer","description":"Repo for adminer","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/adminer","updatedAt":"2025-09-08T03:04:32Z","createdAt":"2025-09-08T03:04:22Z","readmeRaw":"## 👋 Welcome to adminer 🚀  \n\nadminer README  \n  \n  \n## Author  \n\n🤖 casjay: [Github](https://github.com/casjay) 🤖  \n","readmeHtml":"<h2 id=\"welcome-to-adminer\" class=\"mobile-header\">👋 Welcome to adminer 🚀  </h2>\n<p class=\"mobile-paragraph\">adminer README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">🤖 casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> 🤖  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-14T00:58:33.684Z"}]},"__N_SSG":true}