{"pageProps":{"guide":{"name":"element","displayName":"Element","slug":"element","description":"Repo for element","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/element","updatedAt":"2025-09-08T03:07:16Z","createdAt":"2025-09-08T03:07:06Z","readmeRaw":"## ðŸ‘‹ Welcome to element ðŸš€  \n\nelement README  \n  \n  \n## Author  \n\nðŸ¤– casjay: [Github](https://github.com/casjay) ðŸ¤–  \n","readmeHtml":"<h2 id=\"welcome-to-element\" class=\"mobile-header\">ðŸ‘‹ Welcome to element ðŸš€  </h2>\n<p class=\"mobile-paragraph\">element README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">ðŸ¤– casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> ðŸ¤–  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-15T06:16:36.989Z"},"category":{"key":"communication","name":"Communication","description":"Team communication and collaboration platforms","icon":"ðŸ’¬","color":"#f1fa8c","keywords":["mattermost","rocketchat","matrix","mastodon","element","jitsi"]},"relatedGuides":[{"name":"jitsi","displayName":"Jitsi","slug":"jitsi","description":"Repo for jitsi","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/jitsi","updatedAt":"2025-09-08T03:09:26Z","createdAt":"2025-09-08T03:09:16Z","readmeRaw":"## ðŸ‘‹ Welcome to jitsi ðŸš€  \n\njitsi README  \n  \n  \n## Author  \n\nðŸ¤– casjay: [Github](https://github.com/casjay) ðŸ¤–  \n","readmeHtml":"<h2 id=\"welcome-to-jitsi\" class=\"mobile-header\">ðŸ‘‹ Welcome to jitsi ðŸš€  </h2>\n<p class=\"mobile-paragraph\">jitsi README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">ðŸ¤– casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> ðŸ¤–  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-15T06:16:35.162Z"},{"name":"mastodon","displayName":"Mastodon","slug":"mastodon","description":"Repo for mastodon","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/mastodon","updatedAt":"2025-09-08T03:10:44Z","createdAt":"2023-08-28T03:48:35Z","readmeRaw":"## Mastodon Install guide\n\n```shell\ncurl --silent --location https://rpm.nodesource.com/setup_8.x | bash -  \nwget https://dl.yarnpkg.com/rpm/yarn.repo -O /etc/yum.repos.d/yarn.repo  \nrpm -Uvh https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm  \n  \nwget https://github.com/CasjaysDev/packages/raw/main/rhel/mastodon.txt -O /tmp/mastodon.txt  \nyum install -y $(cat /tmp/mastodon.txt)  \n  \n/usr/pgsql-9.6/bin/postgresql96-setup initdb  \n  \nsystemctl start postgresql-9.6 redis  \nsystemctl enable postgresql-9.6 redis  \n  \nvim /var/lib/pgsql/9.6/data/pg_hba.conf  \n  \n# TYPE  DATABASE        USER            ADDRESS                 METHOD  \n  \n# \"local\" is for Unix domain socket connections only  \nlocal   all             all                                     trust  \n# IPv4 local connections:  \nhost    all             all             127.0.0.1/32            md5  \n# IPv6 local connections:  \nhost    all             all             ::1/128                 md5  \n  \nadduser mastodon  \nsu - mastodon  \ngpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB  \ncurl -sSL https://get.rvm.io | bash -s stable  \nsource /home/mastodon/.rvm/scripts/rvm  \nrvm install 2.5.1  \n  \ngem install bundler  \ncd ~  \ngit clone https://github.com/tootsuite/mastodon.git app  \ncd ~/app  \ngit checkout $(git describe --tags `git rev-list --tags --max-count=1`)  \nbundle config build.pg --with-pg-config=/usr/pgsql-9.6/bin/pg_config  \nbundle install --deployment --without development test  \nexit  \n  \npasswd postgres  \nsu - postgres -c psql  \nCREATE USER mastodon CREATEDB;  \nALTER USER mastodon WITH ENCRYPTED password 'YOURSECUREPASSWORD' CREATEDB;  \n\\q  \n  \nsu - mastodon  \ncd ~/app  \nRAILS_ENV=production bundle exec rake mastodon:setup  \n  \nsu -  \ngit clone https://github.com/casjay-base/howtos /tmp/howtos\ncp -Rfv /tmp/howtos/mastodon/{etc,usr}* /  \n  \nsystemctl daemon-reload  \nsystemctl enable mastodon-web mastodon-queue mastodon-api  \nsystemctl start mastodon-web mastodon-queue mastodon-api  \nsystemctl status mastodon-web mastodon-queue mastodon-api  \n```  \n","readmeHtml":"<h2 id=\"mastodon-install-guide\" class=\"mobile-header\">Mastodon Install guide</h2>\n<div class=\"mobile-code-block\" data-language=\"shell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">shell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-shell\">curl --silent --location https://rpm.nodesource.com/setup_8.x | bash -  \nwget https://dl.yarnpkg.com/rpm/yarn.repo -O /etc/yum.repos.d/yarn.repo  \nrpm -Uvh https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm  \n  \nwget https://github.com/CasjaysDev/packages/raw/main/rhel/mastodon.txt -O /tmp/mastodon.txt  \nyum install -y $(cat /tmp/mastodon.txt)  \n  \n/usr/pgsql-9.6/bin/postgresql96-setup initdb  \n  \nsystemctl start postgresql-9.6 redis  \nsystemctl enable postgresql-9.6 redis  \n  \nvim /var/lib/pgsql/9.6/data/pg_hba.conf  \n  \n# TYPE  DATABASE        USER            ADDRESS                 METHOD  \n  \n# &quot;local&quot; is for Unix domain socket connections only  \nlocal   all             all                                     trust  \n# IPv4 local connections:  \nhost    all             all             127.0.0.1/32            md5  \n# IPv6 local connections:  \nhost    all             all             ::1/128                 md5  \n  \nadduser mastodon  \nsu - mastodon  \ngpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB  \ncurl -sSL https://get.rvm.io | bash -s stable  \nsource /home/mastodon/.rvm/scripts/rvm  \nrvm install 2.5.1  \n  \ngem install bundler  \ncd ~  \ngit clone https://github.com/tootsuite/mastodon.git app  \ncd ~/app  \ngit checkout $(git describe --tags `git rev-list --tags --max-count=1`)  \nbundle config build.pg --with-pg-config=/usr/pgsql-9.6/bin/pg_config  \nbundle install --deployment --without development test  \nexit  \n  \npasswd postgres  \nsu - postgres -c psql  \nCREATE USER mastodon CREATEDB;  \nALTER USER mastodon WITH ENCRYPTED password &#039;YOURSECUREPASSWORD&#039; CREATEDB;  \n\\q  \n  \nsu - mastodon  \ncd ~/app  \nRAILS_ENV=production bundle exec rake mastodon:setup  \n  \nsu -  \ngit clone https://github.com/casjay-base/howtos /tmp/howtos\ncp -Rfv /tmp/howtos/mastodon/{etc,usr}* /  \n  \nsystemctl daemon-reload  \nsystemctl enable mastodon-web mastodon-queue mastodon-api  \nsystemctl start mastodon-web mastodon-queue mastodon-api  \nsystemctl status mastodon-web mastodon-queue mastodon-api  </code></pre>\n      </div>\n    </div>","readTime":"1 min","wordCount":190,"lastBuilt":"2025-09-15T06:16:33.588Z"},{"name":"mattermost","displayName":"Mattermost","slug":"mattermost","description":"Repo for mattermost","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/mattermost","updatedAt":"2025-09-14T01:30:27Z","createdAt":"2023-08-28T03:48:46Z","readmeRaw":"# Mattermost Installation Guide\n\nOpen-source, self-hosted team communication platform with enterprise-grade security. Complete alternative to Slack with advanced features for secure collaboration, workflow automation, and integrated voice/video calling.\n\n## Prerequisites\n\n- Linux system (any modern distribution)\n- Root or sudo access\n- 4GB RAM minimum, 8GB+ recommended for production\n- PostgreSQL 11+ or MySQL 8.0+ database\n- NGINX reverse proxy (recommended for production)\n- Domain name and SSL certificate for HTTPS\n\n## Installation\n\n### Ubuntu/Debian (Recommended)\n```bash\n# Update system packages\nsudo apt update && sudo apt upgrade -y\n\n# Download latest Mattermost server\nMATTERMOST_VERSION=\"9.2.4\"  # Check for latest at https://mattermost.com/download\nwget https://releases.mattermost.com/${MATTERMOST_VERSION}/mattermost-${MATTERMOST_VERSION}-linux-amd64.tar.gz\n\n# Extract and install\ntar -xzf mattermost-${MATTERMOST_VERSION}-linux-amd64.tar.gz\nsudo mv mattermost /opt/\n\n# Create system user\nsudo useradd --system --user-group mattermost\nsudo chown -R mattermost:mattermost /opt/mattermost\n\n# Create data directory\nsudo mkdir -p /opt/mattermost/data\nsudo chown mattermost:mattermost /opt/mattermost/data\nsudo chmod 755 /opt/mattermost/data\n\n# Set proper permissions\nsudo find /opt/mattermost -type d -exec chmod 755 {} \\;\nsudo find /opt/mattermost -type f -exec chmod 644 {} \\;\nsudo chmod +x /opt/mattermost/bin/mattermost\n\n# Create log directory\nsudo mkdir -p /var/log/mattermost\nsudo chown mattermost:mattermost /var/log/mattermost\n```\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n```bash\n# Install prerequisites\nsudo yum update -y\nsudo yum install -y wget tar\n\n# Download and install Mattermost\nMATTERMOST_VERSION=\"9.2.4\"\nwget https://releases.mattermost.com/${MATTERMOST_VERSION}/mattermost-${MATTERMOST_VERSION}-linux-amd64.tar.gz\ntar -xzf mattermost-${MATTERMOST_VERSION}-linux-amd64.tar.gz\nsudo mv mattermost /opt/\n\n# Create system user and directories\nsudo useradd --system --user-group mattermost\nsudo chown -R mattermost:mattermost /opt/mattermost\nsudo mkdir -p /opt/mattermost/data /var/log/mattermost\nsudo chown mattermost:mattermost /opt/mattermost/data /var/log/mattermost\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8065/tcp\nsudo firewall-cmd --reload\n```\n\n### Docker Installation (Production Ready)\n```bash\n# Create Mattermost directory structure\nmkdir -p ~/mattermost/{config,data,logs,plugins,client-plugins}\n\n# Create Docker Compose configuration\ncat > ~/mattermost/docker-compose.yml <<EOF\nversion: '3.8'\n\nservices:\n  postgres:\n    image: postgres:15-alpine\n    container_name: mattermost-postgres\n    restart: unless-stopped\n    environment:\n      - POSTGRES_DB=mattermost\n      - POSTGRES_USER=mattermost\n      - POSTGRES_PASSWORD=secure_postgres_password_2024\n      - POSTGRES_INITDB_ARGS=\"--encoding=UTF8 --lc-collate=C --lc-ctype=C\"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./postgres-custom.conf:/etc/postgresql/postgresql.conf\n    networks:\n      - mattermost\n    security_opt:\n      - no-new-privileges:true\n    read_only: true\n    tmpfs:\n      - /tmp\n      - /var/run/postgresql\n\n  mattermost:\n    image: mattermost/mattermost-enterprise-edition:latest\n    container_name: mattermost\n    restart: unless-stopped\n    depends_on:\n      - postgres\n    environment:\n      # Database settings\n      - MM_SQLSETTINGS_DRIVERNAME=postgres\n      - MM_SQLSETTINGS_DATASOURCE=postgres://mattermost:secure_postgres_password_2024@postgres:5432/mattermost?sslmode=disable&connect_timeout=10\n      \n      # Server settings\n      - MM_SERVICESETTINGS_SITEURL=https://mattermost.example.com\n      - MM_SERVICESETTINGS_LISTENADDRESS=:8000\n      - MM_SERVICESETTINGS_ENABLELINKPREVIEWS=true\n      - MM_SERVICESETTINGS_ENABLEDEVELOPER=false\n      - MM_SERVICESETTINGS_ENABLESECURITYFIXALERT=true\n      - MM_SERVICESETTINGS_ENABLEINSECUREOUTGOINGCONNECTIONS=false\n      \n      # File settings\n      - MM_FILESETTINGS_MAXFILESIZE=104857600  # 100MB\n      - MM_FILESETTINGS_DRIVERNAME=local\n      - MM_FILESETTINGS_DIRECTORY=/mattermost/data\n      \n      # Email settings (configure SMTP)\n      - MM_EMAILSETTINGS_ENABLESIGNUPWITHEMAIL=false\n      - MM_EMAILSETTINGS_ENABLESIGNINWITHEMAIL=true\n      - MM_EMAILSETTINGS_ENABLESIGNINWITHUSERNAME=true\n      - MM_EMAILSETTINGS_SMTPSERVER=smtp.example.com\n      - MM_EMAILSETTINGS_SMTPPORT=587\n      - MM_EMAILSETTINGS_SMTPUSERNAME=mattermost@example.com\n      - MM_EMAILSETTINGS_SMTPPASSWORD=smtp_secure_password\n      - MM_EMAILSETTINGS_ENABLESMTPAUTH=true\n      - MM_EMAILSETTINGS_CONNECTIONSECURITY=STARTTLS\n      \n      # Security settings\n      - MM_TEAMSETTINGS_ENABLEOPENSERVER=false\n      - MM_TEAMSETTINGS_ENABLEUSERCREATION=false\n      - MM_TEAMSETTINGS_RESTRICTCREATIONTODOMAIN=example.com\n      - MM_PASSWORDSETTINGS_MINIMUMLENGTH=12\n      - MM_PASSWORDSETTINGS_REQUIRELOWERCASE=true\n      - MM_PASSWORDSETTINGS_REQUIREUPPERCASE=true\n      - MM_PASSWORDSETTINGS_REQUIRENUMBER=true\n      - MM_PASSWORDSETTINGS_REQUIRESYMBOL=true\n      \n      # Session settings\n      - MM_SESSIONSETTINGS_SESSIONLENGTHWEBINHOURS=720  # 30 days\n      - MM_SESSIONSETTINGS_SESSIONLENGTHMOBILEINHOURS=720\n      - MM_SESSIONSETTINGS_ENABLEUSERACCESSTOKENS=false\n      \n      # Rate limiting\n      - MM_RATELIMITSETTINGS_ENABLE=true\n      - MM_RATELIMITSETTINGS_PERSEC=10\n      - MM_RATELIMITSETTINGS_MAXBURST=100\n      \n      # Privacy settings\n      - MM_PRIVACYSETTINGS_SHOWEMAILADDRESS=false\n      - MM_PRIVACYSETTINGS_SHOWFULLNAME=false\n      \n      # Logging\n      - MM_LOGSETTINGS_ENABLECONSOLE=true\n      - MM_LOGSETTINGS_CONSOLELEVEL=INFO\n      - MM_LOGSETTINGS_ENABLEFILE=true\n      - MM_LOGSETTINGS_FILELEVEL=INFO\n      - MM_LOGSETTINGS_FILELOCATION=/mattermost/logs/mattermost.log\n      \n    volumes:\n      - ./config:/mattermost/config:rw\n      - ./data:/mattermost/data:rw\n      - ./logs:/mattermost/logs:rw\n      - ./plugins:/mattermost/plugins:rw\n      - ./client-plugins:/mattermost/client/plugins:rw\n    ports:\n      - \"127.0.0.1:8065:8000\"  # Bind to localhost only\n    networks:\n      - mattermost\n    security_opt:\n      - no-new-privileges:true\n    read_only: true\n    tmpfs:\n      - /tmp\n\nnetworks:\n  mattermost:\n    driver: bridge\n\nvolumes:\n  postgres_data:\nEOF\n\n# Start Mattermost stack\ncd ~/mattermost\ndocker-compose up -d\n\n# Check logs\ndocker-compose logs -f mattermost\n```\n\n### Kubernetes Installation (Enterprise)\n```bash\n# Install Mattermost Operator\nkubectl create namespace mattermost-operator\n\n# Install via Helm\nhelm repo add mattermost https://helm.mattermost.com\nhelm repo update\n\nhelm install mattermost-operator mattermost/mattermost-operator \\\n  --namespace mattermost-operator \\\n  --set image.tag=v2.0.0\n\n# Create Mattermost cluster configuration\ncat > mattermost-cluster.yaml <<EOF\napiVersion: mattermost.com/v1alpha1\nkind: Mattermost\nmetadata:\n  name: mattermost\n  namespace: mattermost\nspec:\n  size: 1000users  # Adjust based on user count\n  ingressName: mattermost.example.com\n  version: v9.2.4\n  \n  database:\n    external:\n      url: \"postgres://mattermost:secure_password@postgres.example.com:5432/mattermost?sslmode=require\"\n  \n  fileStore:\n    external:\n      url: \"s3://mattermost-files\"\n      bucket: \"mattermost-files\"\n      region: \"us-west-2\"\n      \n  elasticSearch:\n    host: \"elasticsearch.example.com:9200\"\n    username: \"mattermost\"\n    password: \"elasticsearch_password\"\n    \n  blueGreen:\n    enable: true\n    productionDeployment: blue\n    \n  resourceRequests:\n    cpu: \"1000m\"\n    memory: \"2Gi\"\n    \n  resourceLimits:\n    cpu: \"2000m\" \n    memory: \"4Gi\"\n    \n  affinity:\n    podAntiAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        - labelSelector:\n            matchExpressions:\n              - key: app\n                operator: In\n                values:\n                  - mattermost\n          topologyKey: kubernetes.io/hostname\n          \n  livenessProbe:\n    httpGet:\n      path: /api/v4/system/ping\n      port: 8000\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    \n  readinessProbe:\n    httpGet:\n      path: /api/v4/system/ping\n      port: 8000\n    initialDelaySeconds: 15\n    periodSeconds: 5\nEOF\n\nkubectl apply -f mattermost-cluster.yaml\n```\n\n## Database Configuration\n\n### PostgreSQL Setup (Recommended)\n```bash\n# Install PostgreSQL 15\nsudo apt install -y postgresql-15 postgresql-client-15\n\n# Create Mattermost database and user\nsudo -u postgres psql <<EOF\nCREATE DATABASE mattermost WITH ENCODING 'UTF8' LC_COLLATE='en_US.UTF-8' LC_CTYPE='en_US.UTF-8' TEMPLATE=template0;\nCREATE USER mattermost WITH ENCRYPTED PASSWORD 'MattermostDBPassword2024!';\nGRANT ALL PRIVILEGES ON DATABASE mattermost TO mattermost;\n\n-- Performance optimization for Mattermost\nALTER SYSTEM SET shared_buffers = '1GB';\nALTER SYSTEM SET effective_cache_size = '3GB';\nALTER SYSTEM SET work_mem = '16MB';\nALTER SYSTEM SET maintenance_work_mem = '256MB';\nALTER SYSTEM SET checkpoint_completion_target = 0.9;\nALTER SYSTEM SET wal_buffers = '16MB';\nALTER SYSTEM SET random_page_cost = 1.1;\n\n-- Mattermost-specific settings\nALTER DATABASE mattermost SET default_text_search_config = 'pg_catalog.english';\n\nSELECT pg_reload_conf();\nEOF\n\n# Configure PostgreSQL for Mattermost\nsudo tee -a /etc/postgresql/15/main/postgresql.conf > /dev/null <<EOF\n\n# Mattermost optimizations\nmax_connections = 300\nshared_preload_libraries = 'pg_stat_statements'\ntrack_activity_query_size = 2048\npg_stat_statements.track = all\nEOF\n\nsudo systemctl restart postgresql\n```\n\n### MySQL 8.0 Setup (Alternative)\n```bash\n# Install MySQL 8.0\nsudo apt install -y mysql-server\n\n# Secure installation\nsudo mysql_secure_installation\n\n# Create Mattermost database\nmysql -u root -p <<EOF\nCREATE DATABASE mattermost CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\nCREATE USER 'mattermost'@'localhost' IDENTIFIED BY 'MattermostDBPassword2024!';\nGRANT ALL PRIVILEGES ON mattermost.* TO 'mattermost'@'localhost';\n\n-- MySQL optimization for Mattermost\nSET GLOBAL innodb_buffer_pool_size = 1073741824;  -- 1GB\nSET GLOBAL max_connections = 300;\nSET GLOBAL wait_timeout = 600;\nSET GLOBAL interactive_timeout = 600;\n\nFLUSH PRIVILEGES;\nEOF\n```\n\n## Production Configuration\n\n### Mattermost Server Configuration\n```bash\n# Create production configuration\nsudo tee /opt/mattermost/config/config.json > /dev/null <<'EOF'\n{\n  \"ServiceSettings\": {\n    \"SiteURL\": \"https://mattermost.example.com\",\n    \"WebsocketURL\": \"\",\n    \"LicenseFileLocation\": \"\",\n    \"ListenAddress\": \":8065\",\n    \"ConnectionSecurity\": \"\",\n    \"TLSCertFile\": \"\",\n    \"TLSKeyFile\": \"\",\n    \"TLSMinVer\": \"1.2\",\n    \"TLSStrictTransport\": false,\n    \"TLSStrictTransportMaxAge\": 63072000,\n    \"TLSOverwriteCiphers\": [],\n    \"UseLetsEncrypt\": false,\n    \"LetsEncryptCertificateCacheFile\": \"./config/letsencrypt.cache\",\n    \"Forward80To443\": false,\n    \"ReadTimeout\": 300,\n    \"WriteTimeout\": 300,\n    \"IdleTimeout\": 60,\n    \"MaximumLoginAttempts\": 10,\n    \"GoroutineHealthThreshold\": -1,\n    \"GoogleDeveloperKey\": \"\",\n    \"EnableBotAccountCreation\": false,\n    \"EnableUserAccessTokens\": false,\n    \"EnableLinkPreviews\": false,\n    \"EnableTesting\": false,\n    \"EnableDeveloper\": false,\n    \"EnableOpenTracing\": false,\n    \"EnableSecurityFixAlert\": true,\n    \"EnableInsecureOutgoingConnections\": false,\n    \"AllowedUntrustedInternalConnections\": \"\",\n    \"EnablePostSearch\": true,\n    \"EnableUserStatuses\": true,\n    \"ExperimentalEnableAuthenticationTransfer\": true,\n    \"ClusterLogTimeoutMilliseconds\": 2000,\n    \"CloseUnusedDirectMessages\": false,\n    \"EnablePreviewFeatures\": true,\n    \"EnableTutorial\": true,\n    \"ExperimentalEnableDefaultChannelLeaveJoinMessages\": true,\n    \"ExperimentalGroupUnreadChannels\": \"disabled\",\n    \"ExperimentalChannelOrganization\": false,\n    \"EnableAPITeamDeletion\": false,\n    \"ExperimentalEnableHardenedMode\": false,\n    \"DisableLegacyMFA\": true,\n    \"ExperimentalStrictCSRFEnforcement\": false,\n    \"EnableEmailInvitations\": false,\n    \"DisableBotsWhenOwnerIsDeactivated\": true,\n    \"EnableBotAccountCreation\": false,\n    \"EnableSVGs\": false,\n    \"EnableLatex\": false,\n    \"EnableLocalMode\": false,\n    \"LocalModeSocketLocation\": \"/var/tmp/mattermost_local.socket\",\n    \"EnableAWSMetering\": false,\n    \"SplitKey\": \"\",\n    \"FeatureFlagSyncIntervalSeconds\": 30,\n    \"DebugSplit\": false,\n    \"ThreadAutoFollow\": true,\n    \"ManagedResourcePaths\": \"\",\n    \"EnableLegacySidebar\": false,\n    \"CollapsedThreads\": \"default_off\"\n  },\n  \n  \"TeamSettings\": {\n    \"SiteName\": \"Mattermost\",\n    \"MaxUsersPerTeam\": 50000,\n    \"EnableTeamCreation\": false,\n    \"EnableUserCreation\": false,\n    \"EnableOpenServer\": false,\n    \"EnableUserDeactivation\": true,\n    \"RestrictCreationToDomains\": \"example.com\",\n    \"EnableCustomBrand\": false,\n    \"CustomBrandText\": \"\",\n    \"CustomDescriptionText\": \"\",\n    \"RestrictDirectMessage\": \"any\",\n    \"RestrictTeamInvite\": \"all\",\n    \"RestrictPublicChannelManagement\": \"all\",\n    \"RestrictPrivateChannelManagement\": \"all\",\n    \"RestrictPublicChannelCreation\": \"all\",\n    \"RestrictPrivateChannelCreation\": \"all\",\n    \"RestrictPublicChannelDeletion\": \"all\",\n    \"RestrictPrivateChannelDeletion\": \"all\",\n    \"RestrictPrivateChannelManageMembers\": \"all\",\n    \"EnableXToLeaveChannelsFromLHS\": false,\n    \"UserStatusAwayTimeout\": 300,\n    \"MaxChannelsPerTeam\": 50000,\n    \"MaxNotificationsPerChannel\": 1000000,\n    \"EnableConfirmNotificationsToChannel\": true,\n    \"TeammateNameDisplay\": \"username\",\n    \"ExperimentalViewArchivedChannels\": false,\n    \"ExperimentalEnableAutomaticReplies\": false,\n    \"ExperimentalHideTownSquareinLHS\": false,\n    \"ExperimentalTownSquareIsReadOnly\": false,\n    \"LockTeammateNameDisplay\": false,\n    \"ExperimentalPrimaryTeam\": \"\",\n    \"ExperimentalDefaultChannels\": []\n  },\n  \n  \"SqlSettings\": {\n    \"DriverName\": \"postgres\",\n    \"DataSource\": \"postgres://mattermost:MattermostDBPassword2024!@localhost:5432/mattermost?sslmode=disable&connect_timeout=10\",\n    \"DataSourceReplicas\": [],\n    \"DataSourceSearchReplicas\": [],\n    \"MaxIdleConns\": 20,\n    \"ConnMaxLifetimeMilliseconds\": 3600000,\n    \"ConnMaxIdleTimeMilliseconds\": 300000,\n    \"MaxOpenConns\": 300,\n    \"Trace\": false,\n    \"AtRestEncryptKey\": \"\",\n    \"QueryTimeout\": 30,\n    \"DisableDatabaseSearch\": false\n  },\n  \n  \"LogSettings\": {\n    \"EnableConsole\": true,\n    \"ConsoleLevel\": \"INFO\",\n    \"ConsoleJson\": true,\n    \"EnableFile\": true,\n    \"FileLevel\": \"INFO\",\n    \"FileJson\": true,\n    \"FileLocation\": \"/mattermost/logs/mattermost.log\",\n    \"EnableWebhookDebugging\": true,\n    \"EnableDiagnostics\": false,\n    \"EnableSentry\": false,\n    \"AdvancedLoggingConfig\": \"\"\n  },\n  \n  \"PasswordSettings\": {\n    \"MinimumLength\": 12,\n    \"Lowercase\": true,\n    \"Number\": true,\n    \"Uppercase\": true,\n    \"Symbol\": true\n  },\n  \n  \"FileSettings\": {\n    \"EnableFileAttachments\": true,\n    \"EnableMobileUpload\": true,\n    \"EnableMobileDownload\": true,\n    \"MaxFileSize\": 104857600,\n    \"DriverName\": \"local\",\n    \"Directory\": \"/opt/mattermost/data/\",\n    \"EnablePublicLink\": false,\n    \"ExtractContent\": true,\n    \"ArchiveRecursion\": false,\n    \"PublicLinkSalt\": \"\",\n    \"InitialFont\": \"nunito-bold.ttf\",\n    \"AmazonS3AccessKeyId\": \"\",\n    \"AmazonS3SecretAccessKey\": \"\",\n    \"AmazonS3Bucket\": \"\",\n    \"AmazonS3PathPrefix\": \"\",\n    \"AmazonS3Region\": \"\",\n    \"AmazonS3Endpoint\": \"\",\n    \"AmazonS3SSL\": true,\n    \"AmazonS3SignV2\": false,\n    \"AmazonS3SSE\": false,\n    \"AmazonS3Trace\": false\n  },\n  \n  \"EmailSettings\": {\n    \"EnableSignUpWithEmail\": false,\n    \"EnableSignInWithEmail\": true,\n    \"EnableSignInWithUsername\": true,\n    \"SendEmailNotifications\": true,\n    \"UseChannelInEmailNotifications\": false,\n    \"RequireEmailVerification\": true,\n    \"FeedbackName\": \"Mattermost\",\n    \"FeedbackEmail\": \"mattermost@example.com\",\n    \"ReplyToAddress\": \"mattermost@example.com\",\n    \"FeedbackOrganization\": \"\",\n    \"EnableSMTPAuth\": true,\n    \"SMTPUsername\": \"mattermost@example.com\",\n    \"SMTPPassword\": \"smtp_secure_password\",\n    \"SMTPServer\": \"smtp.example.com\",\n    \"SMTPPort\": \"587\",\n    \"SMTPServerTimeout\": 10,\n    \"ConnectionSecurity\": \"STARTTLS\",\n    \"SendPushNotifications\": true,\n    \"PushNotificationServer\": \"https://push.mattermost.com\",\n    \"PushNotificationContents\": \"generic\",\n    \"PushNotificationBuffer\": 1000\n  },\n  \n  \"RateLimitSettings\": {\n    \"Enable\": true,\n    \"PerSec\": 10,\n    \"MaxBurst\": 100,\n    \"MemoryStoreSize\": 10000,\n    \"VaryByRemoteAddr\": true,\n    \"VaryByUser\": false,\n    \"VaryByHeader\": \"\"\n  },\n  \n  \"PrivacySettings\": {\n    \"ShowEmailAddress\": false,\n    \"ShowFullName\": false\n  },\n  \n  \"SupportSettings\": {\n    \"TermsOfServiceLink\": \"https://mattermost.org/terms-of-service/\",\n    \"PrivacyPolicyLink\": \"https://mattermost.org/privacy-policy/\",\n    \"AboutLink\": \"https://about.mattermost.com/default-about/\",\n    \"HelpLink\": \"https://about.mattermost.com/default-help/\",\n    \"ReportAProblemLink\": \"https://about.mattermost.com/default-report-a-problem/\",\n    \"SupportEmail\": \"feedback@mattermost.com\",\n    \"CustomTermsOfServiceEnabled\": false,\n    \"CustomTermsOfServiceReAcceptancePeriod\": 365,\n    \"EnableAskCommunityLink\": true\n  },\n  \n  \"AnnouncementSettings\": {\n    \"EnableBanner\": false,\n    \"BannerText\": \"\",\n    \"BannerColor\": \"#f2a93b\",\n    \"BannerTextColor\": \"#333333\",\n    \"AllowBannerDismissal\": true\n  },\n  \n  \"ThemeSettings\": {\n    \"EnableThemeSelection\": true,\n    \"DefaultTheme\": \"default\",\n    \"AllowCustomThemes\": true,\n    \"AllowedThemes\": []\n  },\n  \n  \"GitLabSettings\": {\n    \"Enable\": false,\n    \"Secret\": \"\",\n    \"Id\": \"\",\n    \"Scope\": \"\",\n    \"AuthEndpoint\": \"\",\n    \"TokenEndpoint\": \"\",\n    \"UserApiEndpoint\": \"\"\n  },\n  \n  \"GoogleSettings\": {\n    \"Enable\": false,\n    \"Secret\": \"\",\n    \"Id\": \"\",\n    \"Scope\": \"profile email\",\n    \"AuthEndpoint\": \"https://accounts.google.com/o/oauth2/v2/auth\",\n    \"TokenEndpoint\": \"https://www.googleapis.com/oauth2/v4/token\",\n    \"UserApiEndpoint\": \"https://people.googleapis.com/v1/people/me?personFields=names%2CemailAddresses%2Cnicknames%2Cmetadata\"\n  },\n  \n  \"Office365Settings\": {\n    \"Enable\": false,\n    \"Secret\": \"\",\n    \"Id\": \"\",\n    \"Scope\": \"User.Read\",\n    \"AuthEndpoint\": \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n    \"TokenEndpoint\": \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n    \"UserApiEndpoint\": \"https://graph.microsoft.com/v1.0/me\",\n    \"Directory\": \"\"\n  },\n  \n  \"LdapSettings\": {\n    \"Enable\": false,\n    \"EnableSync\": false,\n    \"LdapServer\": \"ldap.example.com\",\n    \"LdapPort\": 636,\n    \"ConnectionSecurity\": \"TLS\",\n    \"BaseDN\": \"DC=example,DC=com\",\n    \"BindUsername\": \"CN=mattermost,OU=Service Accounts,DC=example,DC=com\",\n    \"BindPassword\": \"ldap_service_password\",\n    \"UserFilter\": \"\",\n    \"GroupFilter\": \"\",\n    \"GuestFilter\": \"\",\n    \"EnableAdminFilter\": true,\n    \"AdminFilter\": \"(memberOf=CN=Mattermost Admins,OU=Groups,DC=example,DC=com)\",\n    \"GroupDisplayNameAttribute\": \"cn\",\n    \"GroupIdAttribute\": \"cn\",\n    \"FirstNameAttribute\": \"givenName\",\n    \"LastNameAttribute\": \"sn\",\n    \"EmailAttribute\": \"mail\",\n    \"UsernameAttribute\": \"sAMAccountName\",\n    \"NicknameAttribute\": \"\",\n    \"IdAttribute\": \"objectGUID\",\n    \"PositionAttribute\": \"title\",\n    \"LoginIdAttribute\": \"sAMAccountName\",\n    \"PictureAttribute\": \"\",\n    \"SyncIntervalMinutes\": 60,\n    \"SkipCertificateVerification\": false,\n    \"PublicCertificateFile\": \"\",\n    \"PrivateKeyFile\": \"\",\n    \"QueryTimeout\": 60,\n    \"MaxPageSize\": 0,\n    \"LoginFieldName\": \"\",\n    \"LoginButtonColor\": \"#0000\",\n    \"LoginButtonBorderColor\": \"#2389D7\",\n    \"LoginButtonTextColor\": \"#2389D7\"\n  }\n}\nEOF\n\nsudo chown mattermost:mattermost /opt/mattermost/config/config.json\nsudo chmod 600 /opt/mattermost/config/config.json\n```\n\n### SystemD Service Configuration\n```bash\n# Create secure systemd service\nsudo tee /etc/systemd/system/mattermost.service > /dev/null <<EOF\n[Unit]\nDescription=Mattermost Team Communication Service\nAfter=network.target postgresql.service mysql.service\nWants=network.target\n\n[Service]\nType=notify\nUser=mattermost\nGroup=mattermost\nExecStart=/opt/mattermost/bin/mattermost\nWorkingDirectory=/opt/mattermost\nLimitNOFILE=49152\nRestart=always\nRestartSec=10\n\n# Security settings\nNoNewPrivileges=true\nPrivateTmp=true\nPrivateDevices=true\nProtectHome=true\nProtectSystem=strict\nReadWritePaths=/opt/mattermost/data /opt/mattermost/logs /opt/mattermost/config /opt/mattermost/plugins\nProtectKernelTunables=true\nProtectKernelModules=true\nProtectControlGroups=true\n\n# Resource limits\nMemoryMax=4G\nCPUQuota=200%\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable --now mattermost\n\n# Verify service status\nsudo systemctl status mattermost\n```\n\n## Security Hardening\n\n### NGINX Reverse Proxy with Security\n```bash\n# Create secure NGINX configuration\nsudo tee /etc/nginx/sites-available/mattermost > /dev/null <<EOF\n# Mattermost NGINX Configuration with Security Headers\n\nupstream mattermost {\n    server 127.0.0.1:8065;\n    keepalive 64;\n}\n\nproxy_cache_path /var/cache/nginx/mattermost levels=1:2 keys_zone=mattermost_cache:10m max_size=3g inactive=120m use_temp_path=off;\n\n# HTTP to HTTPS redirect\nserver {\n    listen 80;\n    server_name mattermost.example.com;\n    return 301 https://\\$server_name\\$request_uri;\n}\n\n# HTTPS server\nserver {\n    listen 443 ssl http2;\n    server_name mattermost.example.com;\n\n    # SSL configuration\n    ssl_certificate /etc/letsencrypt/live/mattermost.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/mattermost.example.com/privkey.pem;\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;\n    ssl_prefer_server_ciphers off;\n    ssl_session_cache shared:SSL:50m;\n    ssl_session_timeout 1d;\n    ssl_session_tickets off;\n\n    # Security headers\n    add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;\n    add_header X-Content-Type-Options nosniff always;\n    add_header X-Frame-Options DENY always;\n    add_header X-XSS-Protection \"1; mode=block\" always;\n    add_header Referrer-Policy \"strict-origin-when-cross-origin\" always;\n    add_header Content-Security-Policy \"frame-ancestors 'none'\" always;\n\n    # Rate limiting\n    limit_req_zone \\$binary_remote_addr zone=mattermost_ratelimit:10m rate=10r/s;\n    limit_req zone=mattermost_ratelimit burst=20 nodelay;\n\n    # Max upload size for file attachments\n    client_max_body_size 50M;\n\n    location ~ /api/v[0-9]+/(users/)?websocket\\$ {\n        proxy_set_header Upgrade \\$http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        client_max_body_size 50M;\n        proxy_set_header Host \\$http_host;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n        proxy_set_header X-Frame-Options SAMEORIGIN;\n        proxy_buffers 256 16k;\n        proxy_buffer_size 16k;\n        client_body_timeout 60;\n        send_timeout 300;\n        lingering_timeout 5;\n        proxy_connect_timeout 90;\n        proxy_send_timeout 300;\n        proxy_read_timeout 90s;\n        proxy_pass http://mattermost;\n    }\n\n    location / {\n        client_max_body_size 50M;\n        proxy_set_header Connection \"\";\n        proxy_set_header Host \\$http_host;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n        proxy_set_header X-Frame-Options SAMEORIGIN;\n        proxy_buffers 256 16k;\n        proxy_buffer_size 16k;\n        proxy_read_timeout 600s;\n        proxy_cache mattermost_cache;\n        proxy_cache_revalidate on;\n        proxy_cache_min_uses 2;\n        proxy_cache_use_stale timeout;\n        proxy_cache_lock on;\n        proxy_http_version 1.1;\n        proxy_pass http://mattermost;\n    }\n}\nEOF\n\n# Enable site and install SSL\nsudo ln -s /etc/nginx/sites-available/mattermost /etc/nginx/sites-enabled/\nsudo certbot --nginx -d mattermost.example.com\nsudo nginx -t && sudo systemctl reload nginx\n```\n\n### Advanced Security Configuration\n```bash\n# Configure fail2ban for Mattermost\nsudo tee /etc/fail2ban/filter.d/mattermost.conf > /dev/null <<EOF\n[Definition]\nfailregex = ^.*\"level\":\"error\".*\"msg\":\"Invalid login attempt\".*\"user_id\":\"[^\"]*\".*\"ip\":\"<HOST>\"\nignoreregex =\nEOF\n\nsudo tee /etc/fail2ban/jail.d/mattermost.conf > /dev/null <<EOF\n[mattermost]\nenabled = true\nport = http,https\nfilter = mattermost\nlogpath = /opt/mattermost/logs/mattermost.log\nmaxretry = 5\nbantime = 3600\nfindtime = 600\naction = iptables-multiport[name=Mattermost, port=\"http,https\", protocol=tcp]\nEOF\n\nsudo systemctl restart fail2ban\n```\n\n## Backup and Monitoring\n\n### Backup Strategy\n```bash\nsudo tee /usr/local/bin/mattermost-backup.sh > /dev/null <<'EOF'\n#!/bin/bash\nBACKUP_DIR=\"/backup/mattermost\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p ${BACKUP_DIR}/{database,config,data,plugins}\n\necho \"Starting Mattermost backup...\"\n\n# Stop Mattermost service\nsystemctl stop mattermost\n\n# Backup database\nsudo -u postgres pg_dump mattermost > ${BACKUP_DIR}/database/mattermost-${DATE}.sql\ngzip ${BACKUP_DIR}/database/mattermost-${DATE}.sql\n\n# Backup configuration\ncp /opt/mattermost/config/config.json ${BACKUP_DIR}/config/config-${DATE}.json\n\n# Backup user data and files\ntar -czf ${BACKUP_DIR}/data/mattermost-data-${DATE}.tar.gz -C /opt/mattermost data/\n\n# Backup plugins\nif [ -d \"/opt/mattermost/plugins\" ]; then\n    tar -czf ${BACKUP_DIR}/plugins/mattermost-plugins-${DATE}.tar.gz -C /opt/mattermost plugins/\nfi\n\n# Start Mattermost\nsystemctl start mattermost\n\n# Upload to cloud storage\naws s3 cp ${BACKUP_DIR}/ s3://mattermost-backups/ --recursive\ngsutil cp -r ${BACKUP_DIR}/* gs://mattermost-backups/\n\n# Keep last 7 backups\nfind ${BACKUP_DIR} -name \"mattermost-*\" -type f -mtime +7 -delete\n\necho \"Mattermost backup completed: ${DATE}\"\nEOF\n\nsudo chmod +x /usr/local/bin/mattermost-backup.sh\necho \"0 2 * * * root /usr/local/bin/mattermost-backup.sh\" | sudo tee -a /etc/crontab\n```\n\n### Health Monitoring\n```bash\nsudo tee /usr/local/bin/mattermost-health.sh > /dev/null <<'EOF'\n#!/bin/bash\nHEALTH_LOG=\"/var/log/mattermost-health.log\"\n\nlog_message() {\n    echo \"$(date '+%Y-%m-%d %H:%M:%S') - $1\" | tee -a ${HEALTH_LOG}\n}\n\n# Check service status\nif systemctl is-active mattermost >/dev/null 2>&1; then\n    log_message \"âœ“ Mattermost service is running\"\nelse\n    log_message \"âœ— Mattermost service is not running\"\n    exit 1\nfi\n\n# Check web interface\nHTTP_STATUS=$(curl -s -o /dev/null -w \"%{http_code}\" http://localhost:8065/api/v4/system/ping)\nif [ \"${HTTP_STATUS}\" = \"200\" ]; then\n    log_message \"âœ“ Mattermost API is responding\"\nelse\n    log_message \"âœ— Mattermost API issues (HTTP ${HTTP_STATUS})\"\nfi\n\n# Check database connectivity\nDB_STATUS=$(curl -s http://localhost:8065/api/v4/database/ping | jq -r '.database_status' 2>/dev/null)\nif [ \"$DB_STATUS\" = \"OK\" ]; then\n    log_message \"âœ“ Database connection healthy\"\nelse\n    log_message \"âš  Database connection issues\"\nfi\n\n# Check disk space\nDISK_USAGE=$(df /opt/mattermost | awk 'NR==2 {print $5}' | sed 's/%//')\nif [ ${DISK_USAGE} -gt 85 ]; then\n    log_message \"âš  High disk usage: ${DISK_USAGE}%\"\nelse\n    log_message \"âœ“ Disk usage: ${DISK_USAGE}%\"\nfi\n\nlog_message \"Mattermost health check completed\"\nEOF\n\nsudo chmod +x /usr/local/bin/mattermost-health.sh\necho \"*/15 * * * * root /usr/local/bin/mattermost-health.sh\" | sudo tee -a /etc/crontab\n```\n\n## Troubleshooting\n\n### Common Issues and Solutions\n```bash\n# Check Mattermost service status\nsudo systemctl status mattermost\nsudo journalctl -u mattermost -f\n\n# Check Mattermost logs\nsudo tail -f /opt/mattermost/logs/mattermost.log\n\n# Test API connectivity\ncurl -i http://localhost:8065/api/v4/system/ping\n\n# Check database connection\nsudo -u postgres psql mattermost -c \"SELECT version();\"\n\n# Check file permissions\nls -la /opt/mattermost/\nsudo chown -R mattermost:mattermost /opt/mattermost\n\n# Memory usage\nps aux --sort=-%mem | grep mattermost\npmap -x $(pgrep mattermost)\n\n# Network connectivity\nss -tulpn | grep 8065\nnetstat -tulpn | grep mattermost\n\n# Configuration validation\n/opt/mattermost/bin/mattermost config validate\n\n# Reset admin password (CLI)\nsudo -u mattermost /opt/mattermost/bin/mattermost user password admin new_password\n\n# Check plugin status\nsudo -u mattermost /opt/mattermost/bin/mattermost plugin list\n\n# Database migration (if needed)\nsudo -u mattermost /opt/mattermost/bin/mattermost db migrate\n\n# Clear cache\nsudo rm -rf /opt/mattermost/data/cache/*\nsudo systemctl restart mattermost\n```\n\n## Additional Resources\n\n- [Mattermost Documentation](https://docs.mattermost.com/)\n- [Installation Guide](https://docs.mattermost.com/guides/deployment.html)\n- [Security Guide](https://docs.mattermost.com/overview/security.html)\n- [Admin Guide](https://docs.mattermost.com/guides/administration.html)\n- [Mattermost Community](https://community.mattermost.com/)\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection.","readmeHtml":"<h1 id=\"mattermost-installation-guide\" class=\"mobile-header\">Mattermost Installation Guide</h1>\n<p class=\"mobile-paragraph\">Open-source, self-hosted team communication platform with enterprise-grade security. Complete alternative to Slack with advanced features for secure collaboration, workflow automation, and integrated voice/video calling.</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\">Linux system (any modern distribution)</li>\n<li class=\"mobile-list-item\">Root or sudo access</li>\n<li class=\"mobile-list-item\">4GB RAM minimum, 8GB+ recommended for production</li>\n<li class=\"mobile-list-item\">PostgreSQL 11+ or MySQL 8.0+ database</li>\n<li class=\"mobile-list-item\">NGINX reverse proxy (recommended for production)</li>\n<li class=\"mobile-list-item\">Domain name and SSL certificate for HTTPS</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"ubuntudebian-recommended\" class=\"mobile-header\">Ubuntu/Debian (Recommended)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update system packages\nsudo apt update &amp;&amp; sudo apt upgrade -y\n\n# Download latest Mattermost server\nMATTERMOST_VERSION=&quot;9.2.4&quot;  # Check for latest at https://mattermost.com/download\nwget https://releases.mattermost.com/${MATTERMOST_VERSION}/mattermost-${MATTERMOST_VERSION}-linux-amd64.tar.gz\n\n# Extract and install\ntar -xzf mattermost-${MATTERMOST_VERSION}-linux-amd64.tar.gz\nsudo mv mattermost /opt/\n\n# Create system user\nsudo useradd --system --user-group mattermost\nsudo chown -R mattermost:mattermost /opt/mattermost\n\n# Create data directory\nsudo mkdir -p /opt/mattermost/data\nsudo chown mattermost:mattermost /opt/mattermost/data\nsudo chmod 755 /opt/mattermost/data\n\n# Set proper permissions\nsudo find /opt/mattermost -type d -exec chmod 755 {} \\;\nsudo find /opt/mattermost -type f -exec chmod 644 {} \\;\nsudo chmod +x /opt/mattermost/bin/mattermost\n\n# Create log directory\nsudo mkdir -p /var/log/mattermost\nsudo chown mattermost:mattermost /var/log/mattermost</code></pre>\n      </div>\n    </div>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install prerequisites\nsudo yum update -y\nsudo yum install -y wget tar\n\n# Download and install Mattermost\nMATTERMOST_VERSION=&quot;9.2.4&quot;\nwget https://releases.mattermost.com/${MATTERMOST_VERSION}/mattermost-${MATTERMOST_VERSION}-linux-amd64.tar.gz\ntar -xzf mattermost-${MATTERMOST_VERSION}-linux-amd64.tar.gz\nsudo mv mattermost /opt/\n\n# Create system user and directories\nsudo useradd --system --user-group mattermost\nsudo chown -R mattermost:mattermost /opt/mattermost\nsudo mkdir -p /opt/mattermost/data /var/log/mattermost\nsudo chown mattermost:mattermost /opt/mattermost/data /var/log/mattermost\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8065/tcp\nsudo firewall-cmd --reload</code></pre>\n      </div>\n    </div>\n<h3 id=\"docker-installation-production-ready\" class=\"mobile-header\">Docker Installation (Production Ready)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create Mattermost directory structure\nmkdir -p ~/mattermost/{config,data,logs,plugins,client-plugins}\n\n# Create Docker Compose configuration\ncat &gt; ~/mattermost/docker-compose.yml &lt;&lt;EOF\nversion: &#039;3.8&#039;\n\nservices:\n  postgres:\n    image: postgres:15-alpine\n    container_name: mattermost-postgres\n    restart: unless-stopped\n    environment:\n      - POSTGRES_DB=mattermost\n      - POSTGRES_USER=mattermost\n      - POSTGRES_PASSWORD=secure_postgres_password_2024\n      - POSTGRES_INITDB_ARGS=&quot;--encoding=UTF8 --lc-collate=C --lc-ctype=C&quot;\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./postgres-custom.conf:/etc/postgresql/postgresql.conf\n    networks:\n      - mattermost\n    security_opt:\n      - no-new-privileges:true\n    read_only: true\n    tmpfs:\n      - /tmp\n      - /var/run/postgresql\n\n  mattermost:\n    image: mattermost/mattermost-enterprise-edition:latest\n    container_name: mattermost\n    restart: unless-stopped\n    depends_on:\n      - postgres\n    environment:\n      # Database settings\n      - MM_SQLSETTINGS_DRIVERNAME=postgres\n      - MM_SQLSETTINGS_DATASOURCE=postgres://mattermost:secure_postgres_password_2024@postgres:5432/mattermost?sslmode=disable&amp;connect_timeout=10\n      \n      # Server settings\n      - MM_SERVICESETTINGS_SITEURL=https://mattermost.example.com\n      - MM_SERVICESETTINGS_LISTENADDRESS=:8000\n      - MM_SERVICESETTINGS_ENABLELINKPREVIEWS=true\n      - MM_SERVICESETTINGS_ENABLEDEVELOPER=false\n      - MM_SERVICESETTINGS_ENABLESECURITYFIXALERT=true\n      - MM_SERVICESETTINGS_ENABLEINSECUREOUTGOINGCONNECTIONS=false\n      \n      # File settings\n      - MM_FILESETTINGS_MAXFILESIZE=104857600  # 100MB\n      - MM_FILESETTINGS_DRIVERNAME=local\n      - MM_FILESETTINGS_DIRECTORY=/mattermost/data\n      \n      # Email settings (configure SMTP)\n      - MM_EMAILSETTINGS_ENABLESIGNUPWITHEMAIL=false\n      - MM_EMAILSETTINGS_ENABLESIGNINWITHEMAIL=true\n      - MM_EMAILSETTINGS_ENABLESIGNINWITHUSERNAME=true\n      - MM_EMAILSETTINGS_SMTPSERVER=smtp.example.com\n      - MM_EMAILSETTINGS_SMTPPORT=587\n      - MM_EMAILSETTINGS_SMTPUSERNAME=mattermost@example.com\n      - MM_EMAILSETTINGS_SMTPPASSWORD=smtp_secure_password\n      - MM_EMAILSETTINGS_ENABLESMTPAUTH=true\n      - MM_EMAILSETTINGS_CONNECTIONSECURITY=STARTTLS\n      \n      # Security settings\n      - MM_TEAMSETTINGS_ENABLEOPENSERVER=false\n      - MM_TEAMSETTINGS_ENABLEUSERCREATION=false\n      - MM_TEAMSETTINGS_RESTRICTCREATIONTODOMAIN=example.com\n      - MM_PASSWORDSETTINGS_MINIMUMLENGTH=12\n      - MM_PASSWORDSETTINGS_REQUIRELOWERCASE=true\n      - MM_PASSWORDSETTINGS_REQUIREUPPERCASE=true\n      - MM_PASSWORDSETTINGS_REQUIRENUMBER=true\n      - MM_PASSWORDSETTINGS_REQUIRESYMBOL=true\n      \n      # Session settings\n      - MM_SESSIONSETTINGS_SESSIONLENGTHWEBINHOURS=720  # 30 days\n      - MM_SESSIONSETTINGS_SESSIONLENGTHMOBILEINHOURS=720\n      - MM_SESSIONSETTINGS_ENABLEUSERACCESSTOKENS=false\n      \n      # Rate limiting\n      - MM_RATELIMITSETTINGS_ENABLE=true\n      - MM_RATELIMITSETTINGS_PERSEC=10\n      - MM_RATELIMITSETTINGS_MAXBURST=100\n      \n      # Privacy settings\n      - MM_PRIVACYSETTINGS_SHOWEMAILADDRESS=false\n      - MM_PRIVACYSETTINGS_SHOWFULLNAME=false\n      \n      # Logging\n      - MM_LOGSETTINGS_ENABLECONSOLE=true\n      - MM_LOGSETTINGS_CONSOLELEVEL=INFO\n      - MM_LOGSETTINGS_ENABLEFILE=true\n      - MM_LOGSETTINGS_FILELEVEL=INFO\n      - MM_LOGSETTINGS_FILELOCATION=/mattermost/logs/mattermost.log\n      \n    volumes:\n      - ./config:/mattermost/config:rw\n      - ./data:/mattermost/data:rw\n      - ./logs:/mattermost/logs:rw\n      - ./plugins:/mattermost/plugins:rw\n      - ./client-plugins:/mattermost/client/plugins:rw\n    ports:\n      - &quot;127.0.0.1:8065:8000&quot;  # Bind to localhost only\n    networks:\n      - mattermost\n    security_opt:\n      - no-new-privileges:true\n    read_only: true\n    tmpfs:\n      - /tmp\n\nnetworks:\n  mattermost:\n    driver: bridge\n\nvolumes:\n  postgres_data:\nEOF\n\n# Start Mattermost stack\ncd ~/mattermost\ndocker-compose up -d\n\n# Check logs\ndocker-compose logs -f mattermost</code></pre>\n      </div>\n    </div>\n<h3 id=\"kubernetes-installation-enterprise\" class=\"mobile-header\">Kubernetes Installation (Enterprise)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install Mattermost Operator\nkubectl create namespace mattermost-operator\n\n# Install via Helm\nhelm repo add mattermost https://helm.mattermost.com\nhelm repo update\n\nhelm install mattermost-operator mattermost/mattermost-operator \\\n  --namespace mattermost-operator \\\n  --set image.tag=v2.0.0\n\n# Create Mattermost cluster configuration\ncat &gt; mattermost-cluster.yaml &lt;&lt;EOF\napiVersion: mattermost.com/v1alpha1\nkind: Mattermost\nmetadata:\n  name: mattermost\n  namespace: mattermost\nspec:\n  size: 1000users  # Adjust based on user count\n  ingressName: mattermost.example.com\n  version: v9.2.4\n  \n  database:\n    external:\n      url: &quot;postgres://mattermost:secure_password@postgres.example.com:5432/mattermost?sslmode=require&quot;\n  \n  fileStore:\n    external:\n      url: &quot;s3://mattermost-files&quot;\n      bucket: &quot;mattermost-files&quot;\n      region: &quot;us-west-2&quot;\n      \n  elasticSearch:\n    host: &quot;elasticsearch.example.com:9200&quot;\n    username: &quot;mattermost&quot;\n    password: &quot;elasticsearch_password&quot;\n    \n  blueGreen:\n    enable: true\n    productionDeployment: blue\n    \n  resourceRequests:\n    cpu: &quot;1000m&quot;\n    memory: &quot;2Gi&quot;\n    \n  resourceLimits:\n    cpu: &quot;2000m&quot; \n    memory: &quot;4Gi&quot;\n    \n  affinity:\n    podAntiAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        - labelSelector:\n            matchExpressions:\n              - key: app\n                operator: In\n                values:\n                  - mattermost\n          topologyKey: kubernetes.io/hostname\n          \n  livenessProbe:\n    httpGet:\n      path: /api/v4/system/ping\n      port: 8000\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    \n  readinessProbe:\n    httpGet:\n      path: /api/v4/system/ping\n      port: 8000\n    initialDelaySeconds: 15\n    periodSeconds: 5\nEOF\n\nkubectl apply -f mattermost-cluster.yaml</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-configuration\" class=\"mobile-header\">Database Configuration</h2>\n<h3 id=\"postgresql-setup-recommended\" class=\"mobile-header\">PostgreSQL Setup (Recommended)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install PostgreSQL 15\nsudo apt install -y postgresql-15 postgresql-client-15\n\n# Create Mattermost database and user\nsudo -u postgres psql &lt;&lt;EOF\nCREATE DATABASE mattermost WITH ENCODING &#039;UTF8&#039; LC_COLLATE=&#039;en_US.UTF-8&#039; LC_CTYPE=&#039;en_US.UTF-8&#039; TEMPLATE=template0;\nCREATE USER mattermost WITH ENCRYPTED PASSWORD &#039;MattermostDBPassword2024!&#039;;\nGRANT ALL PRIVILEGES ON DATABASE mattermost TO mattermost;\n\n-- Performance optimization for Mattermost\nALTER SYSTEM SET shared_buffers = &#039;1GB&#039;;\nALTER SYSTEM SET effective_cache_size = &#039;3GB&#039;;\nALTER SYSTEM SET work_mem = &#039;16MB&#039;;\nALTER SYSTEM SET maintenance_work_mem = &#039;256MB&#039;;\nALTER SYSTEM SET checkpoint_completion_target = 0.9;\nALTER SYSTEM SET wal_buffers = &#039;16MB&#039;;\nALTER SYSTEM SET random_page_cost = 1.1;\n\n-- Mattermost-specific settings\nALTER DATABASE mattermost SET default_text_search_config = &#039;pg_catalog.english&#039;;\n\nSELECT pg_reload_conf();\nEOF\n\n# Configure PostgreSQL for Mattermost\nsudo tee -a /etc/postgresql/15/main/postgresql.conf &gt; /dev/null &lt;&lt;EOF\n\n# Mattermost optimizations\nmax_connections = 300\nshared_preload_libraries = &#039;pg_stat_statements&#039;\ntrack_activity_query_size = 2048\npg_stat_statements.track = all\nEOF\n\nsudo systemctl restart postgresql</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysql-80-setup-alternative\" class=\"mobile-header\">MySQL 8.0 Setup (Alternative)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install MySQL 8.0\nsudo apt install -y mysql-server\n\n# Secure installation\nsudo mysql_secure_installation\n\n# Create Mattermost database\nmysql -u root -p &lt;&lt;EOF\nCREATE DATABASE mattermost CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\nCREATE USER &#039;mattermost&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;MattermostDBPassword2024!&#039;;\nGRANT ALL PRIVILEGES ON mattermost.* TO &#039;mattermost&#039;@&#039;localhost&#039;;\n\n-- MySQL optimization for Mattermost\nSET GLOBAL innodb_buffer_pool_size = 1073741824;  -- 1GB\nSET GLOBAL max_connections = 300;\nSET GLOBAL wait_timeout = 600;\nSET GLOBAL interactive_timeout = 600;\n\nFLUSH PRIVILEGES;\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"production-configuration\" class=\"mobile-header\">Production Configuration</h2>\n<h3 id=\"mattermost-server-configuration\" class=\"mobile-header\">Mattermost Server Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create production configuration\nsudo tee /opt/mattermost/config/config.json &gt; /dev/null &lt;&lt;&#039;EOF&#039;\n{\n  &quot;ServiceSettings&quot;: {\n    &quot;SiteURL&quot;: &quot;https://mattermost.example.com&quot;,\n    &quot;WebsocketURL&quot;: &quot;&quot;,\n    &quot;LicenseFileLocation&quot;: &quot;&quot;,\n    &quot;ListenAddress&quot;: &quot;:8065&quot;,\n    &quot;ConnectionSecurity&quot;: &quot;&quot;,\n    &quot;TLSCertFile&quot;: &quot;&quot;,\n    &quot;TLSKeyFile&quot;: &quot;&quot;,\n    &quot;TLSMinVer&quot;: &quot;1.2&quot;,\n    &quot;TLSStrictTransport&quot;: false,\n    &quot;TLSStrictTransportMaxAge&quot;: 63072000,\n    &quot;TLSOverwriteCiphers&quot;: [],\n    &quot;UseLetsEncrypt&quot;: false,\n    &quot;LetsEncryptCertificateCacheFile&quot;: &quot;./config/letsencrypt.cache&quot;,\n    &quot;Forward80To443&quot;: false,\n    &quot;ReadTimeout&quot;: 300,\n    &quot;WriteTimeout&quot;: 300,\n    &quot;IdleTimeout&quot;: 60,\n    &quot;MaximumLoginAttempts&quot;: 10,\n    &quot;GoroutineHealthThreshold&quot;: -1,\n    &quot;GoogleDeveloperKey&quot;: &quot;&quot;,\n    &quot;EnableBotAccountCreation&quot;: false,\n    &quot;EnableUserAccessTokens&quot;: false,\n    &quot;EnableLinkPreviews&quot;: false,\n    &quot;EnableTesting&quot;: false,\n    &quot;EnableDeveloper&quot;: false,\n    &quot;EnableOpenTracing&quot;: false,\n    &quot;EnableSecurityFixAlert&quot;: true,\n    &quot;EnableInsecureOutgoingConnections&quot;: false,\n    &quot;AllowedUntrustedInternalConnections&quot;: &quot;&quot;,\n    &quot;EnablePostSearch&quot;: true,\n    &quot;EnableUserStatuses&quot;: true,\n    &quot;ExperimentalEnableAuthenticationTransfer&quot;: true,\n    &quot;ClusterLogTimeoutMilliseconds&quot;: 2000,\n    &quot;CloseUnusedDirectMessages&quot;: false,\n    &quot;EnablePreviewFeatures&quot;: true,\n    &quot;EnableTutorial&quot;: true,\n    &quot;ExperimentalEnableDefaultChannelLeaveJoinMessages&quot;: true,\n    &quot;ExperimentalGroupUnreadChannels&quot;: &quot;disabled&quot;,\n    &quot;ExperimentalChannelOrganization&quot;: false,\n    &quot;EnableAPITeamDeletion&quot;: false,\n    &quot;ExperimentalEnableHardenedMode&quot;: false,\n    &quot;DisableLegacyMFA&quot;: true,\n    &quot;ExperimentalStrictCSRFEnforcement&quot;: false,\n    &quot;EnableEmailInvitations&quot;: false,\n    &quot;DisableBotsWhenOwnerIsDeactivated&quot;: true,\n    &quot;EnableBotAccountCreation&quot;: false,\n    &quot;EnableSVGs&quot;: false,\n    &quot;EnableLatex&quot;: false,\n    &quot;EnableLocalMode&quot;: false,\n    &quot;LocalModeSocketLocation&quot;: &quot;/var/tmp/mattermost_local.socket&quot;,\n    &quot;EnableAWSMetering&quot;: false,\n    &quot;SplitKey&quot;: &quot;&quot;,\n    &quot;FeatureFlagSyncIntervalSeconds&quot;: 30,\n    &quot;DebugSplit&quot;: false,\n    &quot;ThreadAutoFollow&quot;: true,\n    &quot;ManagedResourcePaths&quot;: &quot;&quot;,\n    &quot;EnableLegacySidebar&quot;: false,\n    &quot;CollapsedThreads&quot;: &quot;default_off&quot;\n  },\n  \n  &quot;TeamSettings&quot;: {\n    &quot;SiteName&quot;: &quot;Mattermost&quot;,\n    &quot;MaxUsersPerTeam&quot;: 50000,\n    &quot;EnableTeamCreation&quot;: false,\n    &quot;EnableUserCreation&quot;: false,\n    &quot;EnableOpenServer&quot;: false,\n    &quot;EnableUserDeactivation&quot;: true,\n    &quot;RestrictCreationToDomains&quot;: &quot;example.com&quot;,\n    &quot;EnableCustomBrand&quot;: false,\n    &quot;CustomBrandText&quot;: &quot;&quot;,\n    &quot;CustomDescriptionText&quot;: &quot;&quot;,\n    &quot;RestrictDirectMessage&quot;: &quot;any&quot;,\n    &quot;RestrictTeamInvite&quot;: &quot;all&quot;,\n    &quot;RestrictPublicChannelManagement&quot;: &quot;all&quot;,\n    &quot;RestrictPrivateChannelManagement&quot;: &quot;all&quot;,\n    &quot;RestrictPublicChannelCreation&quot;: &quot;all&quot;,\n    &quot;RestrictPrivateChannelCreation&quot;: &quot;all&quot;,\n    &quot;RestrictPublicChannelDeletion&quot;: &quot;all&quot;,\n    &quot;RestrictPrivateChannelDeletion&quot;: &quot;all&quot;,\n    &quot;RestrictPrivateChannelManageMembers&quot;: &quot;all&quot;,\n    &quot;EnableXToLeaveChannelsFromLHS&quot;: false,\n    &quot;UserStatusAwayTimeout&quot;: 300,\n    &quot;MaxChannelsPerTeam&quot;: 50000,\n    &quot;MaxNotificationsPerChannel&quot;: 1000000,\n    &quot;EnableConfirmNotificationsToChannel&quot;: true,\n    &quot;TeammateNameDisplay&quot;: &quot;username&quot;,\n    &quot;ExperimentalViewArchivedChannels&quot;: false,\n    &quot;ExperimentalEnableAutomaticReplies&quot;: false,\n    &quot;ExperimentalHideTownSquareinLHS&quot;: false,\n    &quot;ExperimentalTownSquareIsReadOnly&quot;: false,\n    &quot;LockTeammateNameDisplay&quot;: false,\n    &quot;ExperimentalPrimaryTeam&quot;: &quot;&quot;,\n    &quot;ExperimentalDefaultChannels&quot;: []\n  },\n  \n  &quot;SqlSettings&quot;: {\n    &quot;DriverName&quot;: &quot;postgres&quot;,\n    &quot;DataSource&quot;: &quot;postgres://mattermost:MattermostDBPassword2024!@localhost:5432/mattermost?sslmode=disable&amp;connect_timeout=10&quot;,\n    &quot;DataSourceReplicas&quot;: [],\n    &quot;DataSourceSearchReplicas&quot;: [],\n    &quot;MaxIdleConns&quot;: 20,\n    &quot;ConnMaxLifetimeMilliseconds&quot;: 3600000,\n    &quot;ConnMaxIdleTimeMilliseconds&quot;: 300000,\n    &quot;MaxOpenConns&quot;: 300,\n    &quot;Trace&quot;: false,\n    &quot;AtRestEncryptKey&quot;: &quot;&quot;,\n    &quot;QueryTimeout&quot;: 30,\n    &quot;DisableDatabaseSearch&quot;: false\n  },\n  \n  &quot;LogSettings&quot;: {\n    &quot;EnableConsole&quot;: true,\n    &quot;ConsoleLevel&quot;: &quot;INFO&quot;,\n    &quot;ConsoleJson&quot;: true,\n    &quot;EnableFile&quot;: true,\n    &quot;FileLevel&quot;: &quot;INFO&quot;,\n    &quot;FileJson&quot;: true,\n    &quot;FileLocation&quot;: &quot;/mattermost/logs/mattermost.log&quot;,\n    &quot;EnableWebhookDebugging&quot;: true,\n    &quot;EnableDiagnostics&quot;: false,\n    &quot;EnableSentry&quot;: false,\n    &quot;AdvancedLoggingConfig&quot;: &quot;&quot;\n  },\n  \n  &quot;PasswordSettings&quot;: {\n    &quot;MinimumLength&quot;: 12,\n    &quot;Lowercase&quot;: true,\n    &quot;Number&quot;: true,\n    &quot;Uppercase&quot;: true,\n    &quot;Symbol&quot;: true\n  },\n  \n  &quot;FileSettings&quot;: {\n    &quot;EnableFileAttachments&quot;: true,\n    &quot;EnableMobileUpload&quot;: true,\n    &quot;EnableMobileDownload&quot;: true,\n    &quot;MaxFileSize&quot;: 104857600,\n    &quot;DriverName&quot;: &quot;local&quot;,\n    &quot;Directory&quot;: &quot;/opt/mattermost/data/&quot;,\n    &quot;EnablePublicLink&quot;: false,\n    &quot;ExtractContent&quot;: true,\n    &quot;ArchiveRecursion&quot;: false,\n    &quot;PublicLinkSalt&quot;: &quot;&quot;,\n    &quot;InitialFont&quot;: &quot;nunito-bold.ttf&quot;,\n    &quot;AmazonS3AccessKeyId&quot;: &quot;&quot;,\n    &quot;AmazonS3SecretAccessKey&quot;: &quot;&quot;,\n    &quot;AmazonS3Bucket&quot;: &quot;&quot;,\n    &quot;AmazonS3PathPrefix&quot;: &quot;&quot;,\n    &quot;AmazonS3Region&quot;: &quot;&quot;,\n    &quot;AmazonS3Endpoint&quot;: &quot;&quot;,\n    &quot;AmazonS3SSL&quot;: true,\n    &quot;AmazonS3SignV2&quot;: false,\n    &quot;AmazonS3SSE&quot;: false,\n    &quot;AmazonS3Trace&quot;: false\n  },\n  \n  &quot;EmailSettings&quot;: {\n    &quot;EnableSignUpWithEmail&quot;: false,\n    &quot;EnableSignInWithEmail&quot;: true,\n    &quot;EnableSignInWithUsername&quot;: true,\n    &quot;SendEmailNotifications&quot;: true,\n    &quot;UseChannelInEmailNotifications&quot;: false,\n    &quot;RequireEmailVerification&quot;: true,\n    &quot;FeedbackName&quot;: &quot;Mattermost&quot;,\n    &quot;FeedbackEmail&quot;: &quot;mattermost@example.com&quot;,\n    &quot;ReplyToAddress&quot;: &quot;mattermost@example.com&quot;,\n    &quot;FeedbackOrganization&quot;: &quot;&quot;,\n    &quot;EnableSMTPAuth&quot;: true,\n    &quot;SMTPUsername&quot;: &quot;mattermost@example.com&quot;,\n    &quot;SMTPPassword&quot;: &quot;smtp_secure_password&quot;,\n    &quot;SMTPServer&quot;: &quot;smtp.example.com&quot;,\n    &quot;SMTPPort&quot;: &quot;587&quot;,\n    &quot;SMTPServerTimeout&quot;: 10,\n    &quot;ConnectionSecurity&quot;: &quot;STARTTLS&quot;,\n    &quot;SendPushNotifications&quot;: true,\n    &quot;PushNotificationServer&quot;: &quot;https://push.mattermost.com&quot;,\n    &quot;PushNotificationContents&quot;: &quot;generic&quot;,\n    &quot;PushNotificationBuffer&quot;: 1000\n  },\n  \n  &quot;RateLimitSettings&quot;: {\n    &quot;Enable&quot;: true,\n    &quot;PerSec&quot;: 10,\n    &quot;MaxBurst&quot;: 100,\n    &quot;MemoryStoreSize&quot;: 10000,\n    &quot;VaryByRemoteAddr&quot;: true,\n    &quot;VaryByUser&quot;: false,\n    &quot;VaryByHeader&quot;: &quot;&quot;\n  },\n  \n  &quot;PrivacySettings&quot;: {\n    &quot;ShowEmailAddress&quot;: false,\n    &quot;ShowFullName&quot;: false\n  },\n  \n  &quot;SupportSettings&quot;: {\n    &quot;TermsOfServiceLink&quot;: &quot;https://mattermost.org/terms-of-service/&quot;,\n    &quot;PrivacyPolicyLink&quot;: &quot;https://mattermost.org/privacy-policy/&quot;,\n    &quot;AboutLink&quot;: &quot;https://about.mattermost.com/default-about/&quot;,\n    &quot;HelpLink&quot;: &quot;https://about.mattermost.com/default-help/&quot;,\n    &quot;ReportAProblemLink&quot;: &quot;https://about.mattermost.com/default-report-a-problem/&quot;,\n    &quot;SupportEmail&quot;: &quot;feedback@mattermost.com&quot;,\n    &quot;CustomTermsOfServiceEnabled&quot;: false,\n    &quot;CustomTermsOfServiceReAcceptancePeriod&quot;: 365,\n    &quot;EnableAskCommunityLink&quot;: true\n  },\n  \n  &quot;AnnouncementSettings&quot;: {\n    &quot;EnableBanner&quot;: false,\n    &quot;BannerText&quot;: &quot;&quot;,\n    &quot;BannerColor&quot;: &quot;#f2a93b&quot;,\n    &quot;BannerTextColor&quot;: &quot;#333333&quot;,\n    &quot;AllowBannerDismissal&quot;: true\n  },\n  \n  &quot;ThemeSettings&quot;: {\n    &quot;EnableThemeSelection&quot;: true,\n    &quot;DefaultTheme&quot;: &quot;default&quot;,\n    &quot;AllowCustomThemes&quot;: true,\n    &quot;AllowedThemes&quot;: []\n  },\n  \n  &quot;GitLabSettings&quot;: {\n    &quot;Enable&quot;: false,\n    &quot;Secret&quot;: &quot;&quot;,\n    &quot;Id&quot;: &quot;&quot;,\n    &quot;Scope&quot;: &quot;&quot;,\n    &quot;AuthEndpoint&quot;: &quot;&quot;,\n    &quot;TokenEndpoint&quot;: &quot;&quot;,\n    &quot;UserApiEndpoint&quot;: &quot;&quot;\n  },\n  \n  &quot;GoogleSettings&quot;: {\n    &quot;Enable&quot;: false,\n    &quot;Secret&quot;: &quot;&quot;,\n    &quot;Id&quot;: &quot;&quot;,\n    &quot;Scope&quot;: &quot;profile email&quot;,\n    &quot;AuthEndpoint&quot;: &quot;https://accounts.google.com/o/oauth2/v2/auth&quot;,\n    &quot;TokenEndpoint&quot;: &quot;https://www.googleapis.com/oauth2/v4/token&quot;,\n    &quot;UserApiEndpoint&quot;: &quot;https://people.googleapis.com/v1/people/me?personFields=names%2CemailAddresses%2Cnicknames%2Cmetadata&quot;\n  },\n  \n  &quot;Office365Settings&quot;: {\n    &quot;Enable&quot;: false,\n    &quot;Secret&quot;: &quot;&quot;,\n    &quot;Id&quot;: &quot;&quot;,\n    &quot;Scope&quot;: &quot;User.Read&quot;,\n    &quot;AuthEndpoint&quot;: &quot;https://login.microsoftonline.com/common/oauth2/v2.0/authorize&quot;,\n    &quot;TokenEndpoint&quot;: &quot;https://login.microsoftonline.com/common/oauth2/v2.0/token&quot;,\n    &quot;UserApiEndpoint&quot;: &quot;https://graph.microsoft.com/v1.0/me&quot;,\n    &quot;Directory&quot;: &quot;&quot;\n  },\n  \n  &quot;LdapSettings&quot;: {\n    &quot;Enable&quot;: false,\n    &quot;EnableSync&quot;: false,\n    &quot;LdapServer&quot;: &quot;ldap.example.com&quot;,\n    &quot;LdapPort&quot;: 636,\n    &quot;ConnectionSecurity&quot;: &quot;TLS&quot;,\n    &quot;BaseDN&quot;: &quot;DC=example,DC=com&quot;,\n    &quot;BindUsername&quot;: &quot;CN=mattermost,OU=Service Accounts,DC=example,DC=com&quot;,\n    &quot;BindPassword&quot;: &quot;ldap_service_password&quot;,\n    &quot;UserFilter&quot;: &quot;&quot;,\n    &quot;GroupFilter&quot;: &quot;&quot;,\n    &quot;GuestFilter&quot;: &quot;&quot;,\n    &quot;EnableAdminFilter&quot;: true,\n    &quot;AdminFilter&quot;: &quot;(memberOf=CN=Mattermost Admins,OU=Groups,DC=example,DC=com)&quot;,\n    &quot;GroupDisplayNameAttribute&quot;: &quot;cn&quot;,\n    &quot;GroupIdAttribute&quot;: &quot;cn&quot;,\n    &quot;FirstNameAttribute&quot;: &quot;givenName&quot;,\n    &quot;LastNameAttribute&quot;: &quot;sn&quot;,\n    &quot;EmailAttribute&quot;: &quot;mail&quot;,\n    &quot;UsernameAttribute&quot;: &quot;sAMAccountName&quot;,\n    &quot;NicknameAttribute&quot;: &quot;&quot;,\n    &quot;IdAttribute&quot;: &quot;objectGUID&quot;,\n    &quot;PositionAttribute&quot;: &quot;title&quot;,\n    &quot;LoginIdAttribute&quot;: &quot;sAMAccountName&quot;,\n    &quot;PictureAttribute&quot;: &quot;&quot;,\n    &quot;SyncIntervalMinutes&quot;: 60,\n    &quot;SkipCertificateVerification&quot;: false,\n    &quot;PublicCertificateFile&quot;: &quot;&quot;,\n    &quot;PrivateKeyFile&quot;: &quot;&quot;,\n    &quot;QueryTimeout&quot;: 60,\n    &quot;MaxPageSize&quot;: 0,\n    &quot;LoginFieldName&quot;: &quot;&quot;,\n    &quot;LoginButtonColor&quot;: &quot;#0000&quot;,\n    &quot;LoginButtonBorderColor&quot;: &quot;#2389D7&quot;,\n    &quot;LoginButtonTextColor&quot;: &quot;#2389D7&quot;\n  }\n}\nEOF\n\nsudo chown mattermost:mattermost /opt/mattermost/config/config.json\nsudo chmod 600 /opt/mattermost/config/config.json</code></pre>\n      </div>\n    </div>\n<h3 id=\"systemd-service-configuration\" class=\"mobile-header\">SystemD Service Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create secure systemd service\nsudo tee /etc/systemd/system/mattermost.service &gt; /dev/null &lt;&lt;EOF\n[Unit]\nDescription=Mattermost Team Communication Service\nAfter=network.target postgresql.service mysql.service\nWants=network.target\n\n[Service]\nType=notify\nUser=mattermost\nGroup=mattermost\nExecStart=/opt/mattermost/bin/mattermost\nWorkingDirectory=/opt/mattermost\nLimitNOFILE=49152\nRestart=always\nRestartSec=10\n\n# Security settings\nNoNewPrivileges=true\nPrivateTmp=true\nPrivateDevices=true\nProtectHome=true\nProtectSystem=strict\nReadWritePaths=/opt/mattermost/data /opt/mattermost/logs /opt/mattermost/config /opt/mattermost/plugins\nProtectKernelTunables=true\nProtectKernelModules=true\nProtectControlGroups=true\n\n# Resource limits\nMemoryMax=4G\nCPUQuota=200%\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable --now mattermost\n\n# Verify service status\nsudo systemctl status mattermost</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-hardening\" class=\"mobile-header\">Security Hardening</h2>\n<h3 id=\"nginx-reverse-proxy-with-security\" class=\"mobile-header\">NGINX Reverse Proxy with Security</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create secure NGINX configuration\nsudo tee /etc/nginx/sites-available/mattermost &gt; /dev/null &lt;&lt;EOF\n# Mattermost NGINX Configuration with Security Headers\n\nupstream mattermost {\n    server 127.0.0.1:8065;\n    keepalive 64;\n}\n\nproxy_cache_path /var/cache/nginx/mattermost levels=1:2 keys_zone=mattermost_cache:10m max_size=3g inactive=120m use_temp_path=off;\n\n# HTTP to HTTPS redirect\nserver {\n    listen 80;\n    server_name mattermost.example.com;\n    return 301 https://\\$server_name\\$request_uri;\n}\n\n# HTTPS server\nserver {\n    listen 443 ssl http2;\n    server_name mattermost.example.com;\n\n    # SSL configuration\n    ssl_certificate /etc/letsencrypt/live/mattermost.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/mattermost.example.com/privkey.pem;\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;\n    ssl_prefer_server_ciphers off;\n    ssl_session_cache shared:SSL:50m;\n    ssl_session_timeout 1d;\n    ssl_session_tickets off;\n\n    # Security headers\n    add_header Strict-Transport-Security &quot;max-age=31536000; includeSubDomains&quot; always;\n    add_header X-Content-Type-Options nosniff always;\n    add_header X-Frame-Options DENY always;\n    add_header X-XSS-Protection &quot;1; mode=block&quot; always;\n    add_header Referrer-Policy &quot;strict-origin-when-cross-origin&quot; always;\n    add_header Content-Security-Policy &quot;frame-ancestors &#039;none&#039;&quot; always;\n\n    # Rate limiting\n    limit_req_zone \\$binary_remote_addr zone=mattermost_ratelimit:10m rate=10r/s;\n    limit_req zone=mattermost_ratelimit burst=20 nodelay;\n\n    # Max upload size for file attachments\n    client_max_body_size 50M;\n\n    location ~ /api/v[0-9]+/(users/)?websocket\\$ {\n        proxy_set_header Upgrade \\$http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n        client_max_body_size 50M;\n        proxy_set_header Host \\$http_host;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n        proxy_set_header X-Frame-Options SAMEORIGIN;\n        proxy_buffers 256 16k;\n        proxy_buffer_size 16k;\n        client_body_timeout 60;\n        send_timeout 300;\n        lingering_timeout 5;\n        proxy_connect_timeout 90;\n        proxy_send_timeout 300;\n        proxy_read_timeout 90s;\n        proxy_pass http://mattermost;\n    }\n\n    location / {\n        client_max_body_size 50M;\n        proxy_set_header Connection &quot;&quot;;\n        proxy_set_header Host \\$http_host;\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n        proxy_set_header X-Frame-Options SAMEORIGIN;\n        proxy_buffers 256 16k;\n        proxy_buffer_size 16k;\n        proxy_read_timeout 600s;\n        proxy_cache mattermost_cache;\n        proxy_cache_revalidate on;\n        proxy_cache_min_uses 2;\n        proxy_cache_use_stale timeout;\n        proxy_cache_lock on;\n        proxy_http_version 1.1;\n        proxy_pass http://mattermost;\n    }\n}\nEOF\n\n# Enable site and install SSL\nsudo ln -s /etc/nginx/sites-available/mattermost /etc/nginx/sites-enabled/\nsudo certbot --nginx -d mattermost.example.com\nsudo nginx -t &amp;&amp; sudo systemctl reload nginx</code></pre>\n      </div>\n    </div>\n<h3 id=\"advanced-security-configuration\" class=\"mobile-header\">Advanced Security Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure fail2ban for Mattermost\nsudo tee /etc/fail2ban/filter.d/mattermost.conf &gt; /dev/null &lt;&lt;EOF\n[Definition]\nfailregex = ^.*&quot;level&quot;:&quot;error&quot;.*&quot;msg&quot;:&quot;Invalid login attempt&quot;.*&quot;user_id&quot;:&quot;[^&quot;]*&quot;.*&quot;ip&quot;:&quot;&lt;HOST&gt;&quot;\nignoreregex =\nEOF\n\nsudo tee /etc/fail2ban/jail.d/mattermost.conf &gt; /dev/null &lt;&lt;EOF\n[mattermost]\nenabled = true\nport = http,https\nfilter = mattermost\nlogpath = /opt/mattermost/logs/mattermost.log\nmaxretry = 5\nbantime = 3600\nfindtime = 600\naction = iptables-multiport[name=Mattermost, port=&quot;http,https&quot;, protocol=tcp]\nEOF\n\nsudo systemctl restart fail2ban</code></pre>\n      </div>\n    </div>\n<h2 id=\"backup-and-monitoring\" class=\"mobile-header\">Backup and Monitoring</h2>\n<h3 id=\"backup-strategy\" class=\"mobile-header\">Backup Strategy</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo tee /usr/local/bin/mattermost-backup.sh &gt; /dev/null &lt;&lt;&#039;EOF&#039;\n#!/bin/bash\nBACKUP_DIR=&quot;/backup/mattermost&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p ${BACKUP_DIR}/{database,config,data,plugins}\n\necho &quot;Starting Mattermost backup...&quot;\n\n# Stop Mattermost service\nsystemctl stop mattermost\n\n# Backup database\nsudo -u postgres pg_dump mattermost &gt; ${BACKUP_DIR}/database/mattermost-${DATE}.sql\ngzip ${BACKUP_DIR}/database/mattermost-${DATE}.sql\n\n# Backup configuration\ncp /opt/mattermost/config/config.json ${BACKUP_DIR}/config/config-${DATE}.json\n\n# Backup user data and files\ntar -czf ${BACKUP_DIR}/data/mattermost-data-${DATE}.tar.gz -C /opt/mattermost data/\n\n# Backup plugins\nif [ -d &quot;/opt/mattermost/plugins&quot; ]; then\n    tar -czf ${BACKUP_DIR}/plugins/mattermost-plugins-${DATE}.tar.gz -C /opt/mattermost plugins/\nfi\n\n# Start Mattermost\nsystemctl start mattermost\n\n# Upload to cloud storage\naws s3 cp ${BACKUP_DIR}/ s3://mattermost-backups/ --recursive\ngsutil cp -r ${BACKUP_DIR}/* gs://mattermost-backups/\n\n# Keep last 7 backups\nfind ${BACKUP_DIR} -name &quot;mattermost-*&quot; -type f -mtime +7 -delete\n\necho &quot;Mattermost backup completed: ${DATE}&quot;\nEOF\n\nsudo chmod +x /usr/local/bin/mattermost-backup.sh\necho &quot;0 2 * * * root /usr/local/bin/mattermost-backup.sh&quot; | sudo tee -a /etc/crontab</code></pre>\n      </div>\n    </div>\n<h3 id=\"health-monitoring\" class=\"mobile-header\">Health Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">sudo tee /usr/local/bin/mattermost-health.sh &gt; /dev/null &lt;&lt;&#039;EOF&#039;\n#!/bin/bash\nHEALTH_LOG=&quot;/var/log/mattermost-health.log&quot;\n\nlog_message() {\n    echo &quot;$(date &#039;+%Y-%m-%d %H:%M:%S&#039;) - $1&quot; | tee -a ${HEALTH_LOG}\n}\n\n# Check service status\nif systemctl is-active mattermost &gt;/dev/null 2&gt;&amp;1; then\n    log_message &quot;âœ“ Mattermost service is running&quot;\nelse\n    log_message &quot;âœ— Mattermost service is not running&quot;\n    exit 1\nfi\n\n# Check web interface\nHTTP_STATUS=$(curl -s -o /dev/null -w &quot;%{http_code}&quot; http://localhost:8065/api/v4/system/ping)\nif [ &quot;${HTTP_STATUS}&quot; = &quot;200&quot; ]; then\n    log_message &quot;âœ“ Mattermost API is responding&quot;\nelse\n    log_message &quot;âœ— Mattermost API issues (HTTP ${HTTP_STATUS})&quot;\nfi\n\n# Check database connectivity\nDB_STATUS=$(curl -s http://localhost:8065/api/v4/database/ping | jq -r &#039;.database_status&#039; 2&gt;/dev/null)\nif [ &quot;$DB_STATUS&quot; = &quot;OK&quot; ]; then\n    log_message &quot;âœ“ Database connection healthy&quot;\nelse\n    log_message &quot;âš  Database connection issues&quot;\nfi\n\n# Check disk space\nDISK_USAGE=$(df /opt/mattermost | awk &#039;NR==2 {print $5}&#039; | sed &#039;s/%//&#039;)\nif [ ${DISK_USAGE} -gt 85 ]; then\n    log_message &quot;âš  High disk usage: ${DISK_USAGE}%&quot;\nelse\n    log_message &quot;âœ“ Disk usage: ${DISK_USAGE}%&quot;\nfi\n\nlog_message &quot;Mattermost health check completed&quot;\nEOF\n\nsudo chmod +x /usr/local/bin/mattermost-health.sh\necho &quot;*/15 * * * * root /usr/local/bin/mattermost-health.sh&quot; | sudo tee -a /etc/crontab</code></pre>\n      </div>\n    </div>\n<h2 id=\"troubleshooting\" class=\"mobile-header\">Troubleshooting</h2>\n<h3 id=\"common-issues-and-solutions\" class=\"mobile-header\">Common Issues and Solutions</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check Mattermost service status\nsudo systemctl status mattermost\nsudo journalctl -u mattermost -f\n\n# Check Mattermost logs\nsudo tail -f /opt/mattermost/logs/mattermost.log\n\n# Test API connectivity\ncurl -i http://localhost:8065/api/v4/system/ping\n\n# Check database connection\nsudo -u postgres psql mattermost -c &quot;SELECT version();&quot;\n\n# Check file permissions\nls -la /opt/mattermost/\nsudo chown -R mattermost:mattermost /opt/mattermost\n\n# Memory usage\nps aux --sort=-%mem | grep mattermost\npmap -x $(pgrep mattermost)\n\n# Network connectivity\nss -tulpn | grep 8065\nnetstat -tulpn | grep mattermost\n\n# Configuration validation\n/opt/mattermost/bin/mattermost config validate\n\n# Reset admin password (CLI)\nsudo -u mattermost /opt/mattermost/bin/mattermost user password admin new_password\n\n# Check plugin status\nsudo -u mattermost /opt/mattermost/bin/mattermost plugin list\n\n# Database migration (if needed)\nsudo -u mattermost /opt/mattermost/bin/mattermost db migrate\n\n# Clear cache\nsudo rm -rf /opt/mattermost/data/cache/*\nsudo systemctl restart mattermost</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\"><a href=\"https://docs.mattermost.com/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Mattermost Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://docs.mattermost.com/guides/deployment.html\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Installation Guide</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://docs.mattermost.com/overview/security.html\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Security Guide</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://docs.mattermost.com/guides/administration.html\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Admin Guide</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://community.mattermost.com/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Mattermost Community</a></li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection.</p>","readTime":"12 min","wordCount":2308,"lastBuilt":"2025-09-15T06:16:20.615Z"}]},"__N_SSG":true}