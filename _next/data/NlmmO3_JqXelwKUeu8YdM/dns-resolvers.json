{"pageProps":{"category":{"key":"dns-resolvers","name":"Dns resolvers","description":"Dns resolvers tools and applications","icon":"🌐","color":"#50fa7b"},"guides":[{"name":"unbound","displayName":"Unbound Installation Guide","slug":"unbound","description":"Unbound is a free and open-source DNS Resolver. A validating, recursive, and caching DNS resolver","category":"dns-resolvers","subcategory":"dns-resolvers","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[53,80,443,2048],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["dns-resolvers","containerization","orchestration","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/dns-resolvers/unbound","documentationUrl":"https://howtomgr.github.io/dns-resolvers/unbound","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/unbound","updatedAt":"2025-09-16T17:59:32Z","createdAt":"2025-09-16T08:34:36Z","readmeRaw":"# Unbound Installation Guide\n\nUnbound is a free and open-source DNS Resolver. A validating, recursive, and caching DNS resolver\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2 cores minimum (4+ cores recommended)\n  - RAM: 2GB minimum (4GB+ recommended)\n  - Storage: 1GB for installation\n  - Network: 53 ports\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 53 (default unbound port)\n- **Dependencies**:\n  - unbound-anchor, unbound-control\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install unbound\nsudo dnf install -y unbound unbound-anchor, unbound-control\n\n# Enable and start service\nsudo systemctl enable --now unbound\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=unbound\nsudo firewall-cmd --reload\n\n# Verify installation\nunbound --version || systemctl status unbound\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install unbound\nsudo apt install -y unbound unbound-anchor, unbound-control\n\n# Enable and start service\nsudo systemctl enable --now unbound\n\n# Configure firewall\nsudo ufw allow 53\n\n# Verify installation\nunbound --version || systemctl status unbound\n```\n\n### Arch Linux\n\n```bash\n# Install unbound\nsudo pacman -S unbound\n\n# Enable and start service\nsudo systemctl enable --now unbound\n\n# Verify installation\nunbound --version || systemctl status unbound\n```\n\n### Alpine Linux\n\n```bash\n# Install unbound\napk add --no-cache unbound\n\n# Enable and start service\nrc-update add unbound default\nrc-service unbound start\n\n# Verify installation\nunbound --version || rc-service unbound status\n```\n\n### openSUSE/SLES\n\n```bash\n# Install unbound\nsudo zypper install -y unbound unbound-anchor, unbound-control\n\n# Enable and start service\nsudo systemctl enable --now unbound\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=unbound\nsudo firewall-cmd --reload\n\n# Verify installation\nunbound --version || systemctl status unbound\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install unbound\n\n# Start service\nbrew services start unbound\n\n# Verify installation\nunbound --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install unbound\n\n# Enable in rc.conf\necho 'unbound_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice unbound start\n\n# Verify installation\nunbound --version || service unbound status\n```\n\n### Windows\n\n```powershell\n# Using Chocolatey\nchoco install unbound\n\n# Or using Scoop\nscoop install unbound\n\n# Verify installation\nunbound --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory if needed\nsudo mkdir -p /etc/unbound\n\n# Set up basic configuration\nsudo tee /etc/unbound/unbound.conf << 'EOF'\n# Unbound Configuration\nnum-threads: 4, msg-cache-size: 50m, rrset-cache-size: 100m\nEOF\n\n# Test configuration\nsudo unbound -t || sudo unbound configtest\n\n# Reload service\nsudo systemctl reload unbound\n```\n\n### Security Hardening\n\n```bash\n# Set appropriate permissions\nsudo chown -R unbound:unbound /etc/unbound\nsudo chmod 750 /etc/unbound\n\n# Enable security features\n# See security section for detailed hardening steps\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable unbound\n\n# Start service\nsudo systemctl start unbound\n\n# Stop service\nsudo systemctl stop unbound\n\n# Restart service\nsudo systemctl restart unbound\n\n# Reload configuration\nsudo systemctl reload unbound\n\n# Check status\nsudo systemctl status unbound\n\n# View logs\nsudo journalctl -u unbound -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add unbound default\n\n# Start service\nrc-service unbound start\n\n# Stop service\nrc-service unbound stop\n\n# Restart service\nrc-service unbound restart\n\n# Check status\nrc-service unbound status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'unbound_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice unbound start\n\n# Stop service\nservice unbound stop\n\n# Restart service\nservice unbound restart\n\n# Check status\nservice unbound status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start unbound\nbrew services stop unbound\nbrew services restart unbound\n\n# Check status\nbrew services list | grep unbound\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start unbound\n\n# Stop service\nnet stop unbound\n\n# Using PowerShell\nStart-Service unbound\nStop-Service unbound\nRestart-Service unbound\n\n# Check status\nGet-Service unbound\n```\n\n## Advanced Configuration\n\n### Performance Optimization\n\n```bash\n# Configure performance settings\ncat >> /etc/unbound/unbound.conf << 'EOF'\nnum-threads: 4, msg-cache-size: 50m, rrset-cache-size: 100m\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart unbound\n```\n\n### Clustering and High Availability\n\n```bash\n# Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports\n```\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream unbound_backend {\n    server 127.0.0.1:53;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name unbound.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name unbound.example.com;\n\n    ssl_certificate /etc/ssl/certs/unbound.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/unbound.example.com.key;\n\n    location / {\n        proxy_pass http://unbound_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName unbound.example.com\n    Redirect permanent / https://unbound.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName unbound.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/unbound.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/unbound.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:53/\n    ProxyPassReverse / http://127.0.0.1:53/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) \"ws://127.0.0.1:53/$1\" [P,L]\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend unbound_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/unbound.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend unbound_backend\n\nbackend unbound_backend\n    balance roundrobin\n    option httpchk GET /health\n    server unbound1 127.0.0.1:53 check\n    server unbound2 127.0.0.1:{default_port}1 check backup\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R unbound:unbound /etc/unbound\nsudo chmod 750 /etc/unbound\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=unbound\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/unbound.conf << 'EOF'\n[unbound]\nenabled = true\nport = 53\nfilter = unbound\nlogpath = /var/log/unbound/*.log\nmaxretry = 5\nbantime = 3600\nEOF\n```\n\n### SSL/TLS Configuration\n\n```bash\n# Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/unbound.key \\\n    -out /etc/ssl/certs/unbound.crt\n\n# Configure SSL in unbound\n# See official documentation for SSL configuration\n```\n\n## Database Setup\n\n### PostgreSQL Backend (if applicable)\n\n```bash\n# Create database and user\nsudo -u postgres psql << EOF\nCREATE DATABASE unbound_db;\nCREATE USER unbound_user WITH ENCRYPTED PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE unbound_db TO unbound_user;\nEOF\n\n# Configure unbound to use PostgreSQL\n# See official documentation for database configuration\n```\n\n### MySQL/MariaDB Backend (if applicable)\n\n```bash\n# Create database and user\nsudo mysql << EOF\nCREATE DATABASE unbound_db;\nCREATE USER 'unbound_user'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON unbound_db.* TO 'unbound_user'@'localhost';\nFLUSH PRIVILEGES;\nEOF\n```\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Kernel parameters\nsudo tee -a /etc/sysctl.conf << EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Unbound specific tuning\nnum-threads: 4, msg-cache-size: 50m, rrset-cache-size: 100m\n```\n\n### Resource Limits\n\n```bash\n# Configure system limits\nsudo tee -a /etc/security/limits.conf << EOF\nunbound soft nofile 65535\nunbound hard nofile 65535\nunbound soft nproc 32768\nunbound hard nproc 32768\nEOF\n```\n\n## Monitoring\n\n### Prometheus Integration\n\n```yaml\n# prometheus.yml configuration\nscrape_configs:\n  - job_name: 'unbound'\n    static_configs:\n      - targets: ['localhost:53']\n    metrics_path: '/metrics'\n```\n\n### Health Checks\n\n```bash\n# Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet unbound; then\n    echo \"Unbound is running\"\n    exit 0\nelse\n    echo \"Unbound is not running\"\n    exit 1\nfi\n```\n\n### Log Monitoring\n\n```bash\n# Configure log rotation\nsudo tee /etc/logrotate.d/unbound << 'EOF'\n/var/log/unbound/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 unbound unbound\n    postrotate\n        systemctl reload unbound > /dev/null 2>&1 || true\n    endscript\n}\nEOF\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Unbound backup script\nBACKUP_DIR=\"/backup/unbound\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\n\n# Stop service (if required)\nsystemctl stop unbound\n\n# Backup configuration\ntar -czf \"$BACKUP_DIR/unbound-config-$DATE.tar.gz\" /etc/unbound\n\n# Backup data (adjust paths as needed)\ntar -czf \"$BACKUP_DIR/unbound-data-$DATE.tar.gz\" /var/lib/unbound\n\n# Start service\nsystemctl start unbound\n\n# Clean old backups (keep 30 days)\nfind \"$BACKUP_DIR\" -name \"*.tar.gz\" -mtime +30 -delete\n\necho \"Backup completed: $BACKUP_DIR\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop unbound\n\n# Restore configuration\nsudo tar -xzf /backup/unbound/unbound-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/unbound/unbound-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R unbound:unbound /etc/unbound\nsudo chown -R unbound:unbound /var/lib/unbound\n\n# Start service\nsudo systemctl start unbound\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u unbound -n 100\nsudo tail -f /var/log/unbound/*.log\n\n# Check configuration\nsudo unbound -t || sudo unbound configtest\n\n# Check permissions\nls -la /etc/unbound\nls -la /var/lib/unbound\n```\n\n2. **Connection refused**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 53\nsudo netstat -tlnp | grep 53\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 53\nnc -zv localhost 53\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep unbound)\nhtop -p $(pgrep unbound)\n\n# Check connections\nss -ant | grep :53 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep unbound)\n```\n\n### Debug Mode\n\n```bash\n# Run in debug mode\nsudo unbound -d\n# or\nsudo unbound debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging\n```\n\n## Integration Examples\n\n### Docker Compose\n\n```yaml\nversion: '3.8'\nservices:\n  unbound:\n    image: unbound:latest\n    container_name: unbound\n    ports:\n      - \"53:53\"\n    volumes:\n      - ./config:/etc/unbound\n      - ./data:/var/lib/unbound\n    environment:\n      - unbound_CONFIG=/etc/unbound/unbound.conf\n    restart: unless-stopped\n    networks:\n      - unbound_net\n\nnetworks:\n  unbound_net:\n    driver: bridge\n```\n\n### Kubernetes Deployment\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: unbound\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: unbound\n  template:\n    metadata:\n      labels:\n        app: unbound\n    spec:\n      containers:\n      - name: unbound\n        image: unbound:latest\n        ports:\n        - containerPort: 53\n        volumeMounts:\n        - name: config\n          mountPath: /etc/unbound\n      volumes:\n      - name: config\n        configMap:\n          name: unbound-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: unbound\nspec:\n  selector:\n    app: unbound\n  ports:\n  - port: 53\n    targetPort: 53\n  type: LoadBalancer\n```\n\n### Ansible Playbook\n\n```yaml\n---\n- name: Install and configure Unbound\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install unbound\n      package:\n        name: unbound\n        state: present\n    \n    - name: Configure unbound\n      template:\n        src: unbound.conf.j2\n        dest: /etc/unbound/unbound.conf\n        owner: unbound\n        group: unbound\n        mode: '0640'\n      notify: restart unbound\n    \n    - name: Start and enable unbound\n      systemd:\n        name: unbound\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart unbound\n      systemd:\n        name: unbound\n        state: restarted\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update unbound\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade unbound\n\n# Arch Linux\nsudo pacman -Syu unbound\n\n# Alpine Linux\napk update && apk upgrade unbound\n\n# openSUSE\nsudo zypper update unbound\n\n# FreeBSD\npkg update && pkg upgrade unbound\n\n# Always backup before updates\ntar -czf /backup/unbound-pre-update-$(date +%Y%m%d).tar.gz /etc/unbound\n\n# Restart after updates\nsudo systemctl restart unbound\n```\n\n### Regular Maintenance Tasks\n\n```bash\n# Clean logs\nfind /var/log/unbound -name \"*.log\" -mtime +30 -delete\n\n# Verify integrity\nsudo unbound --verify || sudo unbound check\n\n# Update databases (if applicable)\nsudo unbound-update-db\n\n# Optimize performance\nsudo unbound-optimize\n\n# Check for security updates\nsudo unbound --security-check\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.unbound.org/\n- GitHub Repository: https://github.com/unbound/unbound\n- Community Forum: https://forum.unbound.org/\n- Wiki: https://wiki.unbound.org/\n- Comparison vs BIND, PowerDNS Recursor, Knot Resolver: https://docs.unbound.org/comparison\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">Unbound is a free and open-source DNS Resolver. A validating, recursive, and caching DNS resolver</p>\n<h2 id=\"table-of-contents\" class=\"mobile-header\">Table of Contents</h2>\n<p class=\"mobile-paragraph\">1. <a href=\"#prerequisites\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Prerequisites</a></p>\n<p class=\"mobile-paragraph\">2. <a href=\"#supported-operating-systems\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Supported Operating Systems</a></p>\n<p class=\"mobile-paragraph\">3. <a href=\"#installation\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Installation</a></p>\n<p class=\"mobile-paragraph\">4. <a href=\"#configuration\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Configuration</a></p>\n<p class=\"mobile-paragraph\">5. <a href=\"#service-management\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Service Management</a></p>\n<p class=\"mobile-paragraph\">6. <a href=\"#troubleshooting\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Troubleshooting</a></p>\n<p class=\"mobile-paragraph\">7. <a href=\"#security-considerations\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Security Considerations</a></p>\n<p class=\"mobile-paragraph\">8. <a href=\"#performance-tuning\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Performance Tuning</a></p>\n<p class=\"mobile-paragraph\">9. <a href=\"#backup-and-restore\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Backup and Restore</a></p>\n<p class=\"mobile-paragraph\">10. <a href=\"#system-requirements\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">System Requirements</a></p>\n<p class=\"mobile-paragraph\">11. <a href=\"#support\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Support</a></p>\n<p class=\"mobile-paragraph\">12. <a href=\"#contributing\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Contributing</a></p>\n<p class=\"mobile-paragraph\">13. <a href=\"#license\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">License</a></p>\n<p class=\"mobile-paragraph\">14. <a href=\"#acknowledgments\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Acknowledgments</a></p>\n<p class=\"mobile-paragraph\">15. <a href=\"#version-history\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Version History</a></p>\n<p class=\"mobile-paragraph\">16. <a href=\"#appendices\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Appendices</a></p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2 cores minimum (4+ cores recommended)</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum (4GB+ recommended)</li>\n<li class=\"mobile-list-item\">Storage: 1GB for installation</li>\n<li class=\"mobile-list-item\">Network: 53 ports</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 53 (default unbound port)</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">unbound-anchor, unbound-control</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install unbound\nsudo dnf install -y unbound unbound-anchor, unbound-control\n\n# Enable and start service\nsudo systemctl enable --now unbound\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=unbound\nsudo firewall-cmd --reload\n\n# Verify installation\nunbound --version || systemctl status unbound</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install unbound\nsudo apt install -y unbound unbound-anchor, unbound-control\n\n# Enable and start service\nsudo systemctl enable --now unbound\n\n# Configure firewall\nsudo ufw allow 53\n\n# Verify installation\nunbound --version || systemctl status unbound</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install unbound\nsudo pacman -S unbound\n\n# Enable and start service\nsudo systemctl enable --now unbound\n\n# Verify installation\nunbound --version || systemctl status unbound</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install unbound\napk add --no-cache unbound\n\n# Enable and start service\nrc-update add unbound default\nrc-service unbound start\n\n# Verify installation\nunbound --version || rc-service unbound status</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install unbound\nsudo zypper install -y unbound unbound-anchor, unbound-control\n\n# Enable and start service\nsudo systemctl enable --now unbound\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=unbound\nsudo firewall-cmd --reload\n\n# Verify installation\nunbound --version || systemctl status unbound</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install unbound\n\n# Start service\nbrew services start unbound\n\n# Verify installation\nunbound --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install unbound\n\n# Enable in rc.conf\necho &#039;unbound_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice unbound start\n\n# Verify installation\nunbound --version || service unbound status</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Using Chocolatey\nchoco install unbound\n\n# Or using Scoop\nscoop install unbound\n\n# Verify installation\nunbound --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory if needed\nsudo mkdir -p /etc/unbound\n\n# Set up basic configuration\nsudo tee /etc/unbound/unbound.conf &lt;&lt; &#039;EOF&#039;\n# Unbound Configuration\nnum-threads: 4, msg-cache-size: 50m, rrset-cache-size: 100m\nEOF\n\n# Test configuration\nsudo unbound -t || sudo unbound configtest\n\n# Reload service\nsudo systemctl reload unbound</code></pre>\n      </div>\n    </div>\n<h3 id=\"security-hardening\" class=\"mobile-header\">Security Hardening</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R unbound:unbound /etc/unbound\nsudo chmod 750 /etc/unbound\n\n# Enable security features\n# See security section for detailed hardening steps</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable unbound\n\n# Start service\nsudo systemctl start unbound\n\n# Stop service\nsudo systemctl stop unbound\n\n# Restart service\nsudo systemctl restart unbound\n\n# Reload configuration\nsudo systemctl reload unbound\n\n# Check status\nsudo systemctl status unbound\n\n# View logs\nsudo journalctl -u unbound -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add unbound default\n\n# Start service\nrc-service unbound start\n\n# Stop service\nrc-service unbound stop\n\n# Restart service\nrc-service unbound restart\n\n# Check status\nrc-service unbound status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;unbound_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice unbound start\n\n# Stop service\nservice unbound stop\n\n# Restart service\nservice unbound restart\n\n# Check status\nservice unbound status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start unbound\nbrew services stop unbound\nbrew services restart unbound\n\n# Check status\nbrew services list | grep unbound</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start unbound\n\n# Stop service\nnet stop unbound\n\n# Using PowerShell\nStart-Service unbound\nStop-Service unbound\nRestart-Service unbound\n\n# Check status\nGet-Service unbound</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<h3 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure performance settings\ncat &gt;&gt; /etc/unbound/unbound.conf &lt;&lt; &#039;EOF&#039;\nnum-threads: 4, msg-cache-size: 50m, rrset-cache-size: 100m\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart unbound</code></pre>\n      </div>\n    </div>\n<h3 id=\"clustering-and-high-availability\" class=\"mobile-header\">Clustering and High Availability</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports</code></pre>\n      </div>\n    </div>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream unbound_backend {\n    server 127.0.0.1:53;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name unbound.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name unbound.example.com;\n\n    ssl_certificate /etc/ssl/certs/unbound.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/unbound.example.com.key;\n\n    location / {\n        proxy_pass http://unbound_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName unbound.example.com\n    Redirect permanent / https://unbound.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName unbound.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/unbound.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/unbound.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:53/\n    ProxyPassReverse / http://127.0.0.1:53/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) &quot;ws://127.0.0.1:53/$1&quot; [P,L]\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend unbound_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/unbound.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend unbound_backend\n\nbackend unbound_backend\n    balance roundrobin\n    option httpchk GET /health\n    server unbound1 127.0.0.1:53 check\n    server unbound2 127.0.0.1:{default_port}1 check backup</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R unbound:unbound /etc/unbound\nsudo chmod 750 /etc/unbound\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=unbound\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/unbound.conf &lt;&lt; &#039;EOF&#039;\n[unbound]\nenabled = true\nport = 53\nfilter = unbound\nlogpath = /var/log/unbound/*.log\nmaxretry = 5\nbantime = 3600\nEOF</code></pre>\n      </div>\n    </div>\n<h3 id=\"ssltls-configuration\" class=\"mobile-header\">SSL/TLS Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/unbound.key \\\n    -out /etc/ssl/certs/unbound.crt\n\n# Configure SSL in unbound\n# See official documentation for SSL configuration</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<h3 id=\"postgresql-backend-if-applicable\" class=\"mobile-header\">PostgreSQL Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo -u postgres psql &lt;&lt; EOF\nCREATE DATABASE unbound_db;\nCREATE USER unbound_user WITH ENCRYPTED PASSWORD &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON DATABASE unbound_db TO unbound_user;\nEOF\n\n# Configure unbound to use PostgreSQL\n# See official documentation for database configuration</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysqlmariadb-backend-if-applicable\" class=\"mobile-header\">MySQL/MariaDB Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo mysql &lt;&lt; EOF\nCREATE DATABASE unbound_db;\nCREATE USER &#039;unbound_user&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON unbound_db.* TO &#039;unbound_user&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Kernel parameters\nsudo tee -a /etc/sysctl.conf &lt;&lt; EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Unbound specific tuning\nnum-threads: 4, msg-cache-size: 50m, rrset-cache-size: 100m</code></pre>\n      </div>\n    </div>\n<h3 id=\"resource-limits\" class=\"mobile-header\">Resource Limits</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure system limits\nsudo tee -a /etc/security/limits.conf &lt;&lt; EOF\nunbound soft nofile 65535\nunbound hard nofile 65535\nunbound soft nproc 32768\nunbound hard nproc 32768\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"prometheus-integration\" class=\"mobile-header\">Prometheus Integration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># prometheus.yml configuration\nscrape_configs:\n  - job_name: &#039;unbound&#039;\n    static_configs:\n      - targets: [&#039;localhost:53&#039;]\n    metrics_path: &#039;/metrics&#039;</code></pre>\n      </div>\n    </div>\n<h3 id=\"health-checks\" class=\"mobile-header\">Health Checks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet unbound; then\n    echo &quot;Unbound is running&quot;\n    exit 0\nelse\n    echo &quot;Unbound is not running&quot;\n    exit 1\nfi</code></pre>\n      </div>\n    </div>\n<h3 id=\"log-monitoring\" class=\"mobile-header\">Log Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure log rotation\nsudo tee /etc/logrotate.d/unbound &lt;&lt; &#039;EOF&#039;\n/var/log/unbound/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 unbound unbound\n    postrotate\n        systemctl reload unbound &gt; /dev/null 2&gt;&amp;1 || true\n    endscript\n}\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Unbound backup script\nBACKUP_DIR=&quot;/backup/unbound&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\n\n# Stop service (if required)\nsystemctl stop unbound\n\n# Backup configuration\ntar -czf &quot;$BACKUP_DIR/unbound-config-$DATE.tar.gz&quot; /etc/unbound\n\n# Backup data (adjust paths as needed)\ntar -czf &quot;$BACKUP_DIR/unbound-data-$DATE.tar.gz&quot; /var/lib/unbound\n\n# Start service\nsystemctl start unbound\n\n# Clean old backups (keep 30 days)\nfind &quot;$BACKUP_DIR&quot; -name &quot;*.tar.gz&quot; -mtime +30 -delete\n\necho &quot;Backup completed: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop unbound\n\n# Restore configuration\nsudo tar -xzf /backup/unbound/unbound-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/unbound/unbound-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R unbound:unbound /etc/unbound\nsudo chown -R unbound:unbound /var/lib/unbound\n\n# Start service\nsudo systemctl start unbound</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u unbound -n 100\nsudo tail -f /var/log/unbound/*.log\n\n# Check configuration\nsudo unbound -t || sudo unbound configtest\n\n# Check permissions\nls -la /etc/unbound\nls -la /var/lib/unbound</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection refused</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 53\nsudo netstat -tlnp | grep 53\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 53\nnc -zv localhost 53</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep unbound)\nhtop -p $(pgrep unbound)\n\n# Check connections\nss -ant | grep :53 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep unbound)</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode\" class=\"mobile-header\">Debug Mode</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Run in debug mode\nsudo unbound -d\n# or\nsudo unbound debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose\" class=\"mobile-header\">Docker Compose</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  unbound:\n    image: unbound:latest\n    container_name: unbound\n    ports:\n      - &quot;53:53&quot;\n    volumes:\n      - ./config:/etc/unbound\n      - ./data:/var/lib/unbound\n    environment:\n      - unbound_CONFIG=/etc/unbound/unbound.conf\n    restart: unless-stopped\n    networks:\n      - unbound_net\n\nnetworks:\n  unbound_net:\n    driver: bridge</code></pre>\n      </div>\n    </div>\n<h3 id=\"kubernetes-deployment\" class=\"mobile-header\">Kubernetes Deployment</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: unbound\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: unbound\n  template:\n    metadata:\n      labels:\n        app: unbound\n    spec:\n      containers:\n      - name: unbound\n        image: unbound:latest\n        ports:\n        - containerPort: 53\n        volumeMounts:\n        - name: config\n          mountPath: /etc/unbound\n      volumes:\n      - name: config\n        configMap:\n          name: unbound-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: unbound\nspec:\n  selector:\n    app: unbound\n  ports:\n  - port: 53\n    targetPort: 53\n  type: LoadBalancer</code></pre>\n      </div>\n    </div>\n<h3 id=\"ansible-playbook\" class=\"mobile-header\">Ansible Playbook</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">---\n- name: Install and configure Unbound\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install unbound\n      package:\n        name: unbound\n        state: present\n    \n    - name: Configure unbound\n      template:\n        src: unbound.conf.j2\n        dest: /etc/unbound/unbound.conf\n        owner: unbound\n        group: unbound\n        mode: &#039;0640&#039;\n      notify: restart unbound\n    \n    - name: Start and enable unbound\n      systemd:\n        name: unbound\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart unbound\n      systemd:\n        name: unbound\n        state: restarted</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update unbound\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade unbound\n\n# Arch Linux\nsudo pacman -Syu unbound\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade unbound\n\n# openSUSE\nsudo zypper update unbound\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade unbound\n\n# Always backup before updates\ntar -czf /backup/unbound-pre-update-$(date +%Y%m%d).tar.gz /etc/unbound\n\n# Restart after updates\nsudo systemctl restart unbound</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance-tasks\" class=\"mobile-header\">Regular Maintenance Tasks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clean logs\nfind /var/log/unbound -name &quot;*.log&quot; -mtime +30 -delete\n\n# Verify integrity\nsudo unbound --verify || sudo unbound check\n\n# Update databases (if applicable)\nsudo unbound-update-db\n\n# Optimize performance\nsudo unbound-optimize\n\n# Check for security updates\nsudo unbound --security-check</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.unbound.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/unbound/unbound</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.unbound.org/</li>\n<li class=\"mobile-list-item\">Wiki: https://wiki.unbound.org/</li>\n<li class=\"mobile-list-item\">Comparison vs BIND, PowerDNS Recursor, Knot Resolver: https://docs.unbound.org/comparison</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"10 min","wordCount":1999,"tableOfContents":[{"level":2,"text":"Table of Contents","id":"table-of-contents"},{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":1,"text":"Install EPEL repository if needed","id":"install-epel-repository-if-needed"},{"level":1,"text":"Install unbound","id":"install-unbound"},{"level":1,"text":"Enable and start service","id":"enable-and-start-service"},{"level":1,"text":"Configure firewall","id":"configure-firewall"},{"level":1,"text":"Verify installation","id":"verify-installation"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":1,"text":"Update package index","id":"update-package-index"},{"level":1,"text":"Install unbound","id":"install-unbound"},{"level":1,"text":"Enable and start service","id":"enable-and-start-service"},{"level":1,"text":"Configure firewall","id":"configure-firewall"},{"level":1,"text":"Verify installation","id":"verify-installation"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":1,"text":"Install unbound","id":"install-unbound"},{"level":1,"text":"Enable and start service","id":"enable-and-start-service"},{"level":1,"text":"Verify installation","id":"verify-installation"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":1,"text":"Install unbound","id":"install-unbound"},{"level":1,"text":"Enable and start service","id":"enable-and-start-service"},{"level":1,"text":"Verify installation","id":"verify-installation"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":1,"text":"Install unbound","id":"install-unbound"},{"level":1,"text":"Enable and start service","id":"enable-and-start-service"},{"level":1,"text":"Configure firewall","id":"configure-firewall"},{"level":1,"text":"Verify installation","id":"verify-installation"},{"level":3,"text":"macOS","id":"macos"},{"level":1,"text":"Using Homebrew","id":"using-homebrew"},{"level":1,"text":"Start service","id":"start-service"},{"level":1,"text":"Verify installation","id":"verify-installation"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":1,"text":"Using pkg","id":"using-pkg"},{"level":1,"text":"Enable in rc.conf","id":"enable-in-rcconf"},{"level":1,"text":"Start service","id":"start-service"},{"level":1,"text":"Verify installation","id":"verify-installation"},{"level":3,"text":"Windows","id":"windows"},{"level":1,"text":"Using Chocolatey","id":"using-chocolatey"},{"level":1,"text":"Or using Scoop","id":"or-using-scoop"},{"level":1,"text":"Verify installation","id":"verify-installation"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":1,"text":"Create configuration directory if needed","id":"create-configuration-directory-if-needed"},{"level":1,"text":"Set up basic configuration","id":"set-up-basic-configuration"},{"level":1,"text":"Unbound Configuration","id":"unbound-configuration"},{"level":1,"text":"Test configuration","id":"test-configuration"},{"level":1,"text":"Reload service","id":"reload-service"},{"level":3,"text":"Security Hardening","id":"security-hardening"},{"level":1,"text":"Set appropriate permissions","id":"set-appropriate-permissions"},{"level":1,"text":"Enable security features","id":"enable-security-features"},{"level":1,"text":"See security section for detailed hardening steps","id":"see-security-section-for-detailed-hardening-steps"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":1,"text":"Enable service","id":"enable-service"},{"level":1,"text":"Start service","id":"start-service"},{"level":1,"text":"Stop service","id":"stop-service"},{"level":1,"text":"Restart service","id":"restart-service"},{"level":1,"text":"Reload configuration","id":"reload-configuration"},{"level":1,"text":"Check status","id":"check-status"},{"level":1,"text":"View logs","id":"view-logs"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":1,"text":"Enable service","id":"enable-service"},{"level":1,"text":"Start service","id":"start-service"},{"level":1,"text":"Stop service","id":"stop-service"},{"level":1,"text":"Restart service","id":"restart-service"},{"level":1,"text":"Check status","id":"check-status"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":1,"text":"Enable in /etc/rc.conf","id":"enable-in-etcrcconf"},{"level":1,"text":"Start service","id":"start-service"},{"level":1,"text":"Stop service","id":"stop-service"},{"level":1,"text":"Restart service","id":"restart-service"},{"level":1,"text":"Check status","id":"check-status"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":1,"text":"Using Homebrew services","id":"using-homebrew-services"},{"level":1,"text":"Check status","id":"check-status"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":1,"text":"Start service","id":"start-service"},{"level":1,"text":"Stop service","id":"stop-service"},{"level":1,"text":"Using PowerShell","id":"using-powershell"},{"level":1,"text":"Check status","id":"check-status"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":3,"text":"Performance Optimization","id":"performance-optimization"},{"level":1,"text":"Configure performance settings","id":"configure-performance-settings"},{"level":1,"text":"Apply system tuning","id":"apply-system-tuning"},{"level":1,"text":"Restart service","id":"restart-service"},{"level":3,"text":"Clustering and High Availability","id":"clustering-and-high-availability"},{"level":1,"text":"Configure clustering (if supported)","id":"configure-clustering-if-supported"},{"level":1,"text":"See official documentation for cluster setup","id":"see-official-documentation-for-cluster-setup"},{"level":1,"text":"Basic load balancing setup example","id":"basic-load-balancing-setup-example"},{"level":1,"text":"Configure multiple instances on different ports","id":"configure-multiple-instances-on-different-ports"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":1,"text":"Set appropriate permissions","id":"set-appropriate-permissions"},{"level":1,"text":"Configure firewall","id":"configure-firewall"},{"level":1,"text":"Enable SELinux policies (if applicable)","id":"enable-selinux-policies-if-applicable"},{"level":1,"text":"Configure fail2ban","id":"configure-fail2ban"},{"level":3,"text":"SSL/TLS Configuration","id":"ssltls-configuration"},{"level":1,"text":"Generate SSL certificates","id":"generate-ssl-certificates"},{"level":1,"text":"Configure SSL in unbound","id":"configure-ssl-in-unbound"},{"level":1,"text":"See official documentation for SSL configuration","id":"see-official-documentation-for-ssl-configuration"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":3,"text":"PostgreSQL Backend (if applicable)","id":"postgresql-backend-if-applicable"},{"level":1,"text":"Create database and user","id":"create-database-and-user"},{"level":1,"text":"Configure unbound to use PostgreSQL","id":"configure-unbound-to-use-postgresql"},{"level":1,"text":"See official documentation for database configuration","id":"see-official-documentation-for-database-configuration"},{"level":3,"text":"MySQL/MariaDB Backend (if applicable)","id":"mysqlmariadb-backend-if-applicable"},{"level":1,"text":"Create database and user","id":"create-database-and-user"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":1,"text":"Kernel parameters","id":"kernel-parameters"},{"level":1,"text":"Unbound specific tuning","id":"unbound-specific-tuning"},{"level":3,"text":"Resource Limits","id":"resource-limits"},{"level":1,"text":"Configure system limits","id":"configure-system-limits"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Prometheus Integration","id":"prometheus-integration"},{"level":1,"text":"prometheus.yml configuration","id":"prometheusyml-configuration"},{"level":3,"text":"Health Checks","id":"health-checks"},{"level":1,"text":"Basic health check script","id":"basic-health-check-script"},{"level":3,"text":"Log Monitoring","id":"log-monitoring"},{"level":1,"text":"Configure log rotation","id":"configure-log-rotation"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":1,"text":"Unbound backup script","id":"unbound-backup-script"},{"level":1,"text":"Stop service (if required)","id":"stop-service-if-required"},{"level":1,"text":"Backup configuration","id":"backup-configuration"},{"level":1,"text":"Backup data (adjust paths as needed)","id":"backup-data-adjust-paths-as-needed"},{"level":1,"text":"Start service","id":"start-service"},{"level":1,"text":"Clean old backups (keep 30 days)","id":"clean-old-backups-keep-30-days"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":1,"text":"Stop service","id":"stop-service"},{"level":1,"text":"Restore configuration","id":"restore-configuration"},{"level":1,"text":"Restore data","id":"restore-data"},{"level":1,"text":"Set permissions","id":"set-permissions"},{"level":1,"text":"Start service","id":"start-service"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":1,"text":"Check logs","id":"check-logs"},{"level":1,"text":"Check configuration","id":"check-configuration"},{"level":1,"text":"Check permissions","id":"check-permissions"},{"level":1,"text":"Check if service is listening","id":"check-if-service-is-listening"},{"level":1,"text":"Check firewall","id":"check-firewall"},{"level":1,"text":"Test connection","id":"test-connection"},{"level":1,"text":"Check resource usage","id":"check-resource-usage"},{"level":1,"text":"Check connections","id":"check-connections"},{"level":1,"text":"Monitor I/O","id":"monitor-io"},{"level":3,"text":"Debug Mode","id":"debug-mode"},{"level":1,"text":"Run in debug mode","id":"run-in-debug-mode"},{"level":1,"text":"or","id":"or"},{"level":1,"text":"Increase log verbosity","id":"increase-log-verbosity"},{"level":1,"text":"Edit configuration to enable debug logging","id":"edit-configuration-to-enable-debug-logging"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose","id":"docker-compose"},{"level":3,"text":"Kubernetes Deployment","id":"kubernetes-deployment"},{"level":3,"text":"Ansible Playbook","id":"ansible-playbook"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":1,"text":"RHEL/CentOS/Rocky/AlmaLinux","id":"rhelcentosrockyalmalinux"},{"level":1,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":1,"text":"Arch Linux","id":"arch-linux"},{"level":1,"text":"Alpine Linux","id":"alpine-linux"},{"level":1,"text":"openSUSE","id":"opensuse"},{"level":1,"text":"FreeBSD","id":"freebsd"},{"level":1,"text":"Always backup before updates","id":"always-backup-before-updates"},{"level":1,"text":"Restart after updates","id":"restart-after-updates"},{"level":3,"text":"Regular Maintenance Tasks","id":"regular-maintenance-tasks"},{"level":1,"text":"Clean logs","id":"clean-logs"},{"level":1,"text":"Verify integrity","id":"verify-integrity"},{"level":1,"text":"Update databases (if applicable)","id":"update-databases-if-applicable"},{"level":1,"text":"Optimize performance","id":"optimize-performance"},{"level":1,"text":"Check for security updates","id":"check-for-security-updates"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-09-17T18:14:37.545Z","metadataVersion":"2.0"}]},"__N_SSG":true}