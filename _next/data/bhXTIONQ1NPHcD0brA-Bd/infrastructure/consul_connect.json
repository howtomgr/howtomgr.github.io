{"pageProps":{"guide":{"name":"consul_connect","displayName":"Consul_connect","slug":"consul_connect","description":"consul-connect is a free and open-source service mesh. HashiCorp Consul Connect provides service mesh with service discovery","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/consul_connect","updatedAt":"2025-09-16T02:31:44Z","createdAt":"2025-09-16T02:28:12Z","readmeRaw":"# consul-connect Installation Guide\n\nconsul-connect is a free and open-source service mesh. HashiCorp Consul Connect provides service mesh with service discovery\n\n## Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2+ cores\n  - RAM: 2GB minimum\n  - Storage: 5GB for data\n  - Network: Various protocols\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 8500 (default consul-connect port)\n  - Mesh on various\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n## Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install consul-connect\nsudo dnf install -y consul_connect\n\n# Enable and start service\nsudo systemctl enable --now consul-connect\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8500/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nconsul-connect --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install consul-connect\nsudo apt install -y consul_connect\n\n# Enable and start service\nsudo systemctl enable --now consul-connect\n\n# Configure firewall\nsudo ufw allow 8500\n\n# Verify installation\nconsul-connect --version\n```\n\n### Arch Linux\n\n```bash\n# Install consul-connect\nsudo pacman -S consul_connect\n\n# Enable and start service\nsudo systemctl enable --now consul-connect\n\n# Verify installation\nconsul-connect --version\n```\n\n### Alpine Linux\n\n```bash\n# Install consul-connect\napk add --no-cache consul_connect\n\n# Enable and start service\nrc-update add consul-connect default\nrc-service consul-connect start\n\n# Verify installation\nconsul-connect --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install consul-connect\nsudo zypper install -y consul_connect\n\n# Enable and start service\nsudo systemctl enable --now consul-connect\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8500/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nconsul-connect --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install consul_connect\n\n# Start service\nbrew services start consul_connect\n\n# Verify installation\nconsul-connect --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install consul_connect\n\n# Enable in rc.conf\necho 'consul-connect_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice consul-connect start\n\n# Verify installation\nconsul-connect --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install consul_connect\n\n# Or using Scoop\nscoop install consul_connect\n\n# Verify installation\nconsul-connect --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/consul_connect\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nconsul-connect --version\n```\n\n## Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable consul-connect\n\n# Start service\nsudo systemctl start consul-connect\n\n# Stop service\nsudo systemctl stop consul-connect\n\n# Restart service\nsudo systemctl restart consul-connect\n\n# Check status\nsudo systemctl status consul-connect\n\n# View logs\nsudo journalctl -u consul-connect -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add consul-connect default\n\n# Start service\nrc-service consul-connect start\n\n# Stop service\nrc-service consul-connect stop\n\n# Restart service\nrc-service consul-connect restart\n\n# Check status\nrc-service consul-connect status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'consul-connect_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice consul-connect start\n\n# Stop service\nservice consul-connect stop\n\n# Restart service\nservice consul-connect restart\n\n# Check status\nservice consul-connect status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start consul_connect\nbrew services stop consul_connect\nbrew services restart consul_connect\n\n# Check status\nbrew services list | grep consul_connect\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start consul-connect\n\n# Stop service\nnet stop consul-connect\n\n# Using PowerShell\nStart-Service consul-connect\nStop-Service consul-connect\nRestart-Service consul-connect\n\n# Check status\nGet-Service consul-connect\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream consul_connect_backend {\n    server 127.0.0.1:8500;\n}\n\nserver {\n    listen 80;\n    server_name consul_connect.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name consul_connect.example.com;\n\n    ssl_certificate /etc/ssl/certs/consul_connect.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/consul_connect.example.com.key;\n\n    location / {\n        proxy_pass http://consul_connect_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName consul_connect.example.com\n    Redirect permanent / https://consul_connect.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName consul_connect.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/consul_connect.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/consul_connect.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:8500/\n    ProxyPassReverse / http://127.0.0.1:8500/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend consul_connect_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/consul_connect.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend consul_connect_backend\n\nbackend consul_connect_backend\n    balance roundrobin\n    server consul_connect1 127.0.0.1:8500 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R consul_connect:consul_connect /etc/consul_connect\nsudo chmod 750 /etc/consul_connect\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8500/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status consul-connect\n\n# View logs\nsudo journalctl -u consul-connect -f\n\n# Monitor resource usage\ntop -p $(pgrep consul_connect)\n```\n\n## Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/consul_connect\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/consul_connect-backup-$DATE.tar.gz\" /etc/consul_connect /var/lib/consul_connect\n\necho \"Backup completed: $BACKUP_DIR/consul_connect-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop consul-connect\n\n# Restore from backup\ntar -xzf /backup/consul_connect/consul_connect-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start consul-connect\n```\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u consul-connect -n 100\nsudo tail -f /var/log/consul_connect/consul_connect.log\n\n# Check configuration\nconsul-connect --version\n\n# Check permissions\nls -la /etc/consul_connect\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 8500\n\n# Test connectivity\ntelnet localhost 8500\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep consul_connect)\n\n# Check disk I/O\niotop -p $(pgrep consul_connect)\n\n# Check connections\nss -an | grep 8500\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  consul_connect:\n    image: consul_connect:latest\n    ports:\n      - \"8500:8500\"\n    volumes:\n      - ./config:/etc/consul_connect\n      - ./data:/var/lib/consul_connect\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update consul_connect\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade consul_connect\n\n# Arch Linux\nsudo pacman -Syu consul_connect\n\n# Alpine Linux\napk update && apk upgrade consul_connect\n\n# openSUSE\nsudo zypper update consul_connect\n\n# FreeBSD\npkg update && pkg upgrade consul_connect\n\n# Always backup before updates\ntar -czf /backup/consul_connect-pre-update-$(date +%Y%m%d).tar.gz /etc/consul_connect\n\n# Restart after updates\nsudo systemctl restart consul-connect\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/consul_connect\n\n# Clean old logs\nfind /var/log/consul_connect -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/consul_connect\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.consul_connect.org/\n- GitHub Repository: https://github.com/consul_connect/consul_connect\n- Community Forum: https://forum.consul_connect.org/\n- Best Practices Guide: https://docs.consul_connect.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<h1 id=\"consul-connect-installation-guide\" class=\"mobile-header\">consul-connect Installation Guide</h1>\n<p class=\"mobile-paragraph\">consul-connect is a free and open-source service mesh. HashiCorp Consul Connect provides service mesh with service discovery</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2+ cores</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum</li>\n<li class=\"mobile-list-item\">Storage: 5GB for data</li>\n<li class=\"mobile-list-item\">Network: Various protocols</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 8500 (default consul-connect port)</li>\n<li class=\"mobile-list-item\">Mesh on various</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install consul-connect\nsudo dnf install -y consul_connect\n\n# Enable and start service\nsudo systemctl enable --now consul-connect\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8500/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nconsul-connect --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install consul-connect\nsudo apt install -y consul_connect\n\n# Enable and start service\nsudo systemctl enable --now consul-connect\n\n# Configure firewall\nsudo ufw allow 8500\n\n# Verify installation\nconsul-connect --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install consul-connect\nsudo pacman -S consul_connect\n\n# Enable and start service\nsudo systemctl enable --now consul-connect\n\n# Verify installation\nconsul-connect --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install consul-connect\napk add --no-cache consul_connect\n\n# Enable and start service\nrc-update add consul-connect default\nrc-service consul-connect start\n\n# Verify installation\nconsul-connect --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install consul-connect\nsudo zypper install -y consul_connect\n\n# Enable and start service\nsudo systemctl enable --now consul-connect\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8500/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nconsul-connect --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install consul_connect\n\n# Start service\nbrew services start consul_connect\n\n# Verify installation\nconsul-connect --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install consul_connect\n\n# Enable in rc.conf\necho &#039;consul-connect_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice consul-connect start\n\n# Verify installation\nconsul-connect --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install consul_connect\n\n# Or using Scoop\nscoop install consul_connect\n\n# Verify installation\nconsul-connect --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/consul_connect\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nconsul-connect --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"service-management\" class=\"mobile-header\">Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable consul-connect\n\n# Start service\nsudo systemctl start consul-connect\n\n# Stop service\nsudo systemctl stop consul-connect\n\n# Restart service\nsudo systemctl restart consul-connect\n\n# Check status\nsudo systemctl status consul-connect\n\n# View logs\nsudo journalctl -u consul-connect -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add consul-connect default\n\n# Start service\nrc-service consul-connect start\n\n# Stop service\nrc-service consul-connect stop\n\n# Restart service\nrc-service consul-connect restart\n\n# Check status\nrc-service consul-connect status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;consul-connect_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice consul-connect start\n\n# Stop service\nservice consul-connect stop\n\n# Restart service\nservice consul-connect restart\n\n# Check status\nservice consul-connect status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start consul_connect\nbrew services stop consul_connect\nbrew services restart consul_connect\n\n# Check status\nbrew services list | grep consul_connect</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start consul-connect\n\n# Stop service\nnet stop consul-connect\n\n# Using PowerShell\nStart-Service consul-connect\nStop-Service consul-connect\nRestart-Service consul-connect\n\n# Check status\nGet-Service consul-connect</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream consul_connect_backend {\n    server 127.0.0.1:8500;\n}\n\nserver {\n    listen 80;\n    server_name consul_connect.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name consul_connect.example.com;\n\n    ssl_certificate /etc/ssl/certs/consul_connect.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/consul_connect.example.com.key;\n\n    location / {\n        proxy_pass http://consul_connect_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName consul_connect.example.com\n    Redirect permanent / https://consul_connect.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName consul_connect.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/consul_connect.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/consul_connect.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:8500/\n    ProxyPassReverse / http://127.0.0.1:8500/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend consul_connect_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/consul_connect.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend consul_connect_backend\n\nbackend consul_connect_backend\n    balance roundrobin\n    server consul_connect1 127.0.0.1:8500 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R consul_connect:consul_connect /etc/consul_connect\nsudo chmod 750 /etc/consul_connect\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=8500/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status consul-connect\n\n# View logs\nsudo journalctl -u consul-connect -f\n\n# Monitor resource usage\ntop -p $(pgrep consul_connect)</code></pre>\n      </div>\n    </div>\n<h2 id=\"backup-and-restore\" class=\"mobile-header\">Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/consul_connect&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/consul_connect-backup-$DATE.tar.gz&quot; /etc/consul_connect /var/lib/consul_connect\n\necho &quot;Backup completed: $BACKUP_DIR/consul_connect-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop consul-connect\n\n# Restore from backup\ntar -xzf /backup/consul_connect/consul_connect-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start consul-connect</code></pre>\n      </div>\n    </div>\n<h2 id=\"troubleshooting\" class=\"mobile-header\">Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u consul-connect -n 100\nsudo tail -f /var/log/consul_connect/consul_connect.log\n\n# Check configuration\nconsul-connect --version\n\n# Check permissions\nls -la /etc/consul_connect</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 8500\n\n# Test connectivity\ntelnet localhost 8500\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep consul_connect)\n\n# Check disk I/O\niotop -p $(pgrep consul_connect)\n\n# Check connections\nss -an | grep 8500</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  consul_connect:\n    image: consul_connect:latest\n    ports:\n      - &quot;8500:8500&quot;\n    volumes:\n      - ./config:/etc/consul_connect\n      - ./data:/var/lib/consul_connect\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update consul_connect\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade consul_connect\n\n# Arch Linux\nsudo pacman -Syu consul_connect\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade consul_connect\n\n# openSUSE\nsudo zypper update consul_connect\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade consul_connect\n\n# Always backup before updates\ntar -czf /backup/consul_connect-pre-update-$(date +%Y%m%d).tar.gz /etc/consul_connect\n\n# Restart after updates\nsudo systemctl restart consul-connect</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/consul_connect\n\n# Clean old logs\nfind /var/log/consul_connect -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/consul_connect</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.consul_connect.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/consul_connect/consul_connect</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.consul_connect.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.consul_connect.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"6 min","wordCount":1156,"lastBuilt":"2025-09-16T02:44:28.554Z"},"category":{"key":"infrastructure","name":"Infrastructure","description":"DevOps and infrastructure automation tools","icon":"🏗️","color":"#44475a","keywords":["ansible","terraform","gitlab","jenkins","consul","etcd"]},"relatedGuides":[{"name":"ackee","displayName":"Ackee","slug":"ackee","description":"ackee is a free and open-source analytics tool. Ackee provides self-hosted, privacy-focused analytics","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/ackee","updatedAt":"2025-09-16T02:31:02Z","createdAt":"2025-09-16T02:15:54Z","readmeRaw":"# ackee Installation Guide\n\nackee is a free and open-source analytics tool. Ackee provides self-hosted, privacy-focused analytics\n\n## Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 1 core minimum\n  - RAM: 512MB minimum\n  - Storage: 1GB for data\n  - Network: HTTP/HTTPS access\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 3000 (default ackee port)\n  - None\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n## Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install ackee\nsudo dnf install -y ackee\n\n# Enable and start service\nsudo systemctl enable --now ackee\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3000/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nackee --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install ackee\nsudo apt install -y ackee\n\n# Enable and start service\nsudo systemctl enable --now ackee\n\n# Configure firewall\nsudo ufw allow 3000\n\n# Verify installation\nackee --version\n```\n\n### Arch Linux\n\n```bash\n# Install ackee\nsudo pacman -S ackee\n\n# Enable and start service\nsudo systemctl enable --now ackee\n\n# Verify installation\nackee --version\n```\n\n### Alpine Linux\n\n```bash\n# Install ackee\napk add --no-cache ackee\n\n# Enable and start service\nrc-update add ackee default\nrc-service ackee start\n\n# Verify installation\nackee --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install ackee\nsudo zypper install -y ackee\n\n# Enable and start service\nsudo systemctl enable --now ackee\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3000/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nackee --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install ackee\n\n# Start service\nbrew services start ackee\n\n# Verify installation\nackee --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install ackee\n\n# Enable in rc.conf\necho 'ackee_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice ackee start\n\n# Verify installation\nackee --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install ackee\n\n# Or using Scoop\nscoop install ackee\n\n# Verify installation\nackee --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/ackee\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nackee --version\n```\n\n## Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable ackee\n\n# Start service\nsudo systemctl start ackee\n\n# Stop service\nsudo systemctl stop ackee\n\n# Restart service\nsudo systemctl restart ackee\n\n# Check status\nsudo systemctl status ackee\n\n# View logs\nsudo journalctl -u ackee -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add ackee default\n\n# Start service\nrc-service ackee start\n\n# Stop service\nrc-service ackee stop\n\n# Restart service\nrc-service ackee restart\n\n# Check status\nrc-service ackee status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'ackee_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice ackee start\n\n# Stop service\nservice ackee stop\n\n# Restart service\nservice ackee restart\n\n# Check status\nservice ackee status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start ackee\nbrew services stop ackee\nbrew services restart ackee\n\n# Check status\nbrew services list | grep ackee\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start ackee\n\n# Stop service\nnet stop ackee\n\n# Using PowerShell\nStart-Service ackee\nStop-Service ackee\nRestart-Service ackee\n\n# Check status\nGet-Service ackee\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream ackee_backend {\n    server 127.0.0.1:3000;\n}\n\nserver {\n    listen 80;\n    server_name ackee.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name ackee.example.com;\n\n    ssl_certificate /etc/ssl/certs/ackee.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/ackee.example.com.key;\n\n    location / {\n        proxy_pass http://ackee_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName ackee.example.com\n    Redirect permanent / https://ackee.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName ackee.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/ackee.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/ackee.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:3000/\n    ProxyPassReverse / http://127.0.0.1:3000/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend ackee_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/ackee.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend ackee_backend\n\nbackend ackee_backend\n    balance roundrobin\n    server ackee1 127.0.0.1:3000 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R ackee:ackee /etc/ackee\nsudo chmod 750 /etc/ackee\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3000/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status ackee\n\n# View logs\nsudo journalctl -u ackee -f\n\n# Monitor resource usage\ntop -p $(pgrep ackee)\n```\n\n## Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/ackee\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/ackee-backup-$DATE.tar.gz\" /etc/ackee /var/lib/ackee\n\necho \"Backup completed: $BACKUP_DIR/ackee-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop ackee\n\n# Restore from backup\ntar -xzf /backup/ackee/ackee-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start ackee\n```\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u ackee -n 100\nsudo tail -f /var/log/ackee/ackee.log\n\n# Check configuration\nackee --version\n\n# Check permissions\nls -la /etc/ackee\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 3000\n\n# Test connectivity\ntelnet localhost 3000\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep ackee)\n\n# Check disk I/O\niotop -p $(pgrep ackee)\n\n# Check connections\nss -an | grep 3000\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  ackee:\n    image: ackee:latest\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - ./config:/etc/ackee\n      - ./data:/var/lib/ackee\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update ackee\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade ackee\n\n# Arch Linux\nsudo pacman -Syu ackee\n\n# Alpine Linux\napk update && apk upgrade ackee\n\n# openSUSE\nsudo zypper update ackee\n\n# FreeBSD\npkg update && pkg upgrade ackee\n\n# Always backup before updates\ntar -czf /backup/ackee-pre-update-$(date +%Y%m%d).tar.gz /etc/ackee\n\n# Restart after updates\nsudo systemctl restart ackee\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/ackee\n\n# Clean old logs\nfind /var/log/ackee -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/ackee\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.ackee.org/\n- GitHub Repository: https://github.com/ackee/ackee\n- Community Forum: https://forum.ackee.org/\n- Best Practices Guide: https://docs.ackee.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<h1 id=\"ackee-installation-guide\" class=\"mobile-header\">ackee Installation Guide</h1>\n<p class=\"mobile-paragraph\">ackee is a free and open-source analytics tool. Ackee provides self-hosted, privacy-focused analytics</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 1 core minimum</li>\n<li class=\"mobile-list-item\">RAM: 512MB minimum</li>\n<li class=\"mobile-list-item\">Storage: 1GB for data</li>\n<li class=\"mobile-list-item\">Network: HTTP/HTTPS access</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 3000 (default ackee port)</li>\n<li class=\"mobile-list-item\">None</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install ackee\nsudo dnf install -y ackee\n\n# Enable and start service\nsudo systemctl enable --now ackee\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3000/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nackee --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install ackee\nsudo apt install -y ackee\n\n# Enable and start service\nsudo systemctl enable --now ackee\n\n# Configure firewall\nsudo ufw allow 3000\n\n# Verify installation\nackee --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install ackee\nsudo pacman -S ackee\n\n# Enable and start service\nsudo systemctl enable --now ackee\n\n# Verify installation\nackee --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install ackee\napk add --no-cache ackee\n\n# Enable and start service\nrc-update add ackee default\nrc-service ackee start\n\n# Verify installation\nackee --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install ackee\nsudo zypper install -y ackee\n\n# Enable and start service\nsudo systemctl enable --now ackee\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3000/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nackee --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install ackee\n\n# Start service\nbrew services start ackee\n\n# Verify installation\nackee --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install ackee\n\n# Enable in rc.conf\necho &#039;ackee_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice ackee start\n\n# Verify installation\nackee --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install ackee\n\n# Or using Scoop\nscoop install ackee\n\n# Verify installation\nackee --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/ackee\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nackee --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"service-management\" class=\"mobile-header\">Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable ackee\n\n# Start service\nsudo systemctl start ackee\n\n# Stop service\nsudo systemctl stop ackee\n\n# Restart service\nsudo systemctl restart ackee\n\n# Check status\nsudo systemctl status ackee\n\n# View logs\nsudo journalctl -u ackee -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add ackee default\n\n# Start service\nrc-service ackee start\n\n# Stop service\nrc-service ackee stop\n\n# Restart service\nrc-service ackee restart\n\n# Check status\nrc-service ackee status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;ackee_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice ackee start\n\n# Stop service\nservice ackee stop\n\n# Restart service\nservice ackee restart\n\n# Check status\nservice ackee status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start ackee\nbrew services stop ackee\nbrew services restart ackee\n\n# Check status\nbrew services list | grep ackee</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start ackee\n\n# Stop service\nnet stop ackee\n\n# Using PowerShell\nStart-Service ackee\nStop-Service ackee\nRestart-Service ackee\n\n# Check status\nGet-Service ackee</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream ackee_backend {\n    server 127.0.0.1:3000;\n}\n\nserver {\n    listen 80;\n    server_name ackee.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name ackee.example.com;\n\n    ssl_certificate /etc/ssl/certs/ackee.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/ackee.example.com.key;\n\n    location / {\n        proxy_pass http://ackee_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName ackee.example.com\n    Redirect permanent / https://ackee.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName ackee.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/ackee.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/ackee.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:3000/\n    ProxyPassReverse / http://127.0.0.1:3000/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend ackee_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/ackee.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend ackee_backend\n\nbackend ackee_backend\n    balance roundrobin\n    server ackee1 127.0.0.1:3000 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R ackee:ackee /etc/ackee\nsudo chmod 750 /etc/ackee\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=3000/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status ackee\n\n# View logs\nsudo journalctl -u ackee -f\n\n# Monitor resource usage\ntop -p $(pgrep ackee)</code></pre>\n      </div>\n    </div>\n<h2 id=\"backup-and-restore\" class=\"mobile-header\">Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/ackee&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/ackee-backup-$DATE.tar.gz&quot; /etc/ackee /var/lib/ackee\n\necho &quot;Backup completed: $BACKUP_DIR/ackee-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop ackee\n\n# Restore from backup\ntar -xzf /backup/ackee/ackee-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start ackee</code></pre>\n      </div>\n    </div>\n<h2 id=\"troubleshooting\" class=\"mobile-header\">Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u ackee -n 100\nsudo tail -f /var/log/ackee/ackee.log\n\n# Check configuration\nackee --version\n\n# Check permissions\nls -la /etc/ackee</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 3000\n\n# Test connectivity\ntelnet localhost 3000\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep ackee)\n\n# Check disk I/O\niotop -p $(pgrep ackee)\n\n# Check connections\nss -an | grep 3000</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  ackee:\n    image: ackee:latest\n    ports:\n      - &quot;3000:3000&quot;\n    volumes:\n      - ./config:/etc/ackee\n      - ./data:/var/lib/ackee\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update ackee\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade ackee\n\n# Arch Linux\nsudo pacman -Syu ackee\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade ackee\n\n# openSUSE\nsudo zypper update ackee\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade ackee\n\n# Always backup before updates\ntar -czf /backup/ackee-pre-update-$(date +%Y%m%d).tar.gz /etc/ackee\n\n# Restart after updates\nsudo systemctl restart ackee</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/ackee\n\n# Clean old logs\nfind /var/log/ackee -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/ackee</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.ackee.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/ackee/ackee</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.ackee.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.ackee.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"6 min","wordCount":1151,"lastBuilt":"2025-09-16T02:44:52.662Z"},{"name":"adguard-home","displayName":"Adguard Home","slug":"adguard-home","description":"adguard-home README","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/adguard-home","updatedAt":"2025-09-16T02:31:03Z","createdAt":"2025-09-08T03:04:08Z","readmeRaw":"## 👋 Welcome to adguard-home 🚀  \n\nadguard-home README  \n  \n  \n## Author  \n\n🤖 casjay: [Github](https://github.com/casjay) 🤖  \n","readmeHtml":"<h2 id=\"welcome-to-adguard-home\" class=\"mobile-header\">👋 Welcome to adguard-home 🚀  </h2>\n<p class=\"mobile-paragraph\">adguard-home README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">🤖 casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> 🤖  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-16T02:44:52.345Z"},{"name":"adguardhome","displayName":"Adguardhome","slug":"adguardhome","description":"adguard-home is a free and open-source network-wide ads and tracking blocking. AdGuard Home provides DNS-based blocking of ads and trackers with a modern UI, serving as an alternative to Pi-hole","category":"infrastructure","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/adguardhome","updatedAt":"2025-09-16T02:31:03Z","createdAt":"2025-09-16T02:16:06Z","readmeRaw":"# adguard-home Installation Guide\n\nadguard-home is a free and open-source network-wide ads and tracking blocking. AdGuard Home provides DNS-based blocking of ads and trackers with a modern UI, serving as an alternative to Pi-hole\n\n## Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 1 core minimum\n  - RAM: 256MB minimum\n  - Storage: 100MB for installation\n  - Network: DNS and HTTPS\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 53 (default adguard-home port)\n  - Port 3000 for setup\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n## Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install adguard-home\nsudo dnf install -y adguardhome\n\n# Enable and start service\nsudo systemctl enable --now adguardhome\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=53/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nadguardhome --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install adguard-home\nsudo apt install -y adguardhome\n\n# Enable and start service\nsudo systemctl enable --now adguardhome\n\n# Configure firewall\nsudo ufw allow 53\n\n# Verify installation\nadguardhome --version\n```\n\n### Arch Linux\n\n```bash\n# Install adguard-home\nsudo pacman -S adguardhome\n\n# Enable and start service\nsudo systemctl enable --now adguardhome\n\n# Verify installation\nadguardhome --version\n```\n\n### Alpine Linux\n\n```bash\n# Install adguard-home\napk add --no-cache adguardhome\n\n# Enable and start service\nrc-update add adguardhome default\nrc-service adguardhome start\n\n# Verify installation\nadguardhome --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install adguard-home\nsudo zypper install -y adguardhome\n\n# Enable and start service\nsudo systemctl enable --now adguardhome\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=53/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nadguardhome --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install adguardhome\n\n# Start service\nbrew services start adguardhome\n\n# Verify installation\nadguardhome --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install adguardhome\n\n# Enable in rc.conf\necho 'adguardhome_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice adguardhome start\n\n# Verify installation\nadguardhome --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install adguardhome\n\n# Or using Scoop\nscoop install adguardhome\n\n# Verify installation\nadguardhome --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/adguardhome\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nadguardhome --version\n```\n\n## Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable adguardhome\n\n# Start service\nsudo systemctl start adguardhome\n\n# Stop service\nsudo systemctl stop adguardhome\n\n# Restart service\nsudo systemctl restart adguardhome\n\n# Check status\nsudo systemctl status adguardhome\n\n# View logs\nsudo journalctl -u adguardhome -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add adguardhome default\n\n# Start service\nrc-service adguardhome start\n\n# Stop service\nrc-service adguardhome stop\n\n# Restart service\nrc-service adguardhome restart\n\n# Check status\nrc-service adguardhome status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'adguardhome_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice adguardhome start\n\n# Stop service\nservice adguardhome stop\n\n# Restart service\nservice adguardhome restart\n\n# Check status\nservice adguardhome status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start adguardhome\nbrew services stop adguardhome\nbrew services restart adguardhome\n\n# Check status\nbrew services list | grep adguardhome\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start adguardhome\n\n# Stop service\nnet stop adguardhome\n\n# Using PowerShell\nStart-Service adguardhome\nStop-Service adguardhome\nRestart-Service adguardhome\n\n# Check status\nGet-Service adguardhome\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream adguardhome_backend {\n    server 127.0.0.1:53;\n}\n\nserver {\n    listen 80;\n    server_name adguardhome.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name adguardhome.example.com;\n\n    ssl_certificate /etc/ssl/certs/adguardhome.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/adguardhome.example.com.key;\n\n    location / {\n        proxy_pass http://adguardhome_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName adguardhome.example.com\n    Redirect permanent / https://adguardhome.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName adguardhome.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/adguardhome.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/adguardhome.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:53/\n    ProxyPassReverse / http://127.0.0.1:53/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend adguardhome_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/adguardhome.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend adguardhome_backend\n\nbackend adguardhome_backend\n    balance roundrobin\n    server adguardhome1 127.0.0.1:53 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R adguardhome:adguardhome /etc/adguardhome\nsudo chmod 750 /etc/adguardhome\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=53/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status adguardhome\n\n# View logs\nsudo journalctl -u adguardhome -f\n\n# Monitor resource usage\ntop -p $(pgrep adguardhome)\n```\n\n## Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/adguardhome\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/adguardhome-backup-$DATE.tar.gz\" /etc/adguardhome /var/lib/adguardhome\n\necho \"Backup completed: $BACKUP_DIR/adguardhome-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop adguardhome\n\n# Restore from backup\ntar -xzf /backup/adguardhome/adguardhome-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start adguardhome\n```\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u adguardhome -n 100\nsudo tail -f /var/log/adguardhome/adguardhome.log\n\n# Check configuration\nadguardhome --version\n\n# Check permissions\nls -la /etc/adguardhome\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 53\n\n# Test connectivity\ntelnet localhost 53\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep adguardhome)\n\n# Check disk I/O\niotop -p $(pgrep adguardhome)\n\n# Check connections\nss -an | grep 53\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  adguardhome:\n    image: adguardhome:latest\n    ports:\n      - \"53:53\"\n    volumes:\n      - ./config:/etc/adguardhome\n      - ./data:/var/lib/adguardhome\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update adguardhome\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade adguardhome\n\n# Arch Linux\nsudo pacman -Syu adguardhome\n\n# Alpine Linux\napk update && apk upgrade adguardhome\n\n# openSUSE\nsudo zypper update adguardhome\n\n# FreeBSD\npkg update && pkg upgrade adguardhome\n\n# Always backup before updates\ntar -czf /backup/adguardhome-pre-update-$(date +%Y%m%d).tar.gz /etc/adguardhome\n\n# Restart after updates\nsudo systemctl restart adguardhome\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/adguardhome\n\n# Clean old logs\nfind /var/log/adguardhome -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/adguardhome\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.adguardhome.org/\n- GitHub Repository: https://github.com/adguardhome/adguardhome\n- Community Forum: https://forum.adguardhome.org/\n- Best Practices Guide: https://docs.adguardhome.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<h1 id=\"adguard-home-installation-guide\" class=\"mobile-header\">adguard-home Installation Guide</h1>\n<p class=\"mobile-paragraph\">adguard-home is a free and open-source network-wide ads and tracking blocking. AdGuard Home provides DNS-based blocking of ads and trackers with a modern UI, serving as an alternative to Pi-hole</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 1 core minimum</li>\n<li class=\"mobile-list-item\">RAM: 256MB minimum</li>\n<li class=\"mobile-list-item\">Storage: 100MB for installation</li>\n<li class=\"mobile-list-item\">Network: DNS and HTTPS</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 53 (default adguard-home port)</li>\n<li class=\"mobile-list-item\">Port 3000 for setup</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install adguard-home\nsudo dnf install -y adguardhome\n\n# Enable and start service\nsudo systemctl enable --now adguardhome\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=53/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nadguardhome --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install adguard-home\nsudo apt install -y adguardhome\n\n# Enable and start service\nsudo systemctl enable --now adguardhome\n\n# Configure firewall\nsudo ufw allow 53\n\n# Verify installation\nadguardhome --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install adguard-home\nsudo pacman -S adguardhome\n\n# Enable and start service\nsudo systemctl enable --now adguardhome\n\n# Verify installation\nadguardhome --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install adguard-home\napk add --no-cache adguardhome\n\n# Enable and start service\nrc-update add adguardhome default\nrc-service adguardhome start\n\n# Verify installation\nadguardhome --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install adguard-home\nsudo zypper install -y adguardhome\n\n# Enable and start service\nsudo systemctl enable --now adguardhome\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=53/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nadguardhome --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install adguardhome\n\n# Start service\nbrew services start adguardhome\n\n# Verify installation\nadguardhome --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install adguardhome\n\n# Enable in rc.conf\necho &#039;adguardhome_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice adguardhome start\n\n# Verify installation\nadguardhome --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install adguardhome\n\n# Or using Scoop\nscoop install adguardhome\n\n# Verify installation\nadguardhome --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/adguardhome\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nadguardhome --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"service-management\" class=\"mobile-header\">Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable adguardhome\n\n# Start service\nsudo systemctl start adguardhome\n\n# Stop service\nsudo systemctl stop adguardhome\n\n# Restart service\nsudo systemctl restart adguardhome\n\n# Check status\nsudo systemctl status adguardhome\n\n# View logs\nsudo journalctl -u adguardhome -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add adguardhome default\n\n# Start service\nrc-service adguardhome start\n\n# Stop service\nrc-service adguardhome stop\n\n# Restart service\nrc-service adguardhome restart\n\n# Check status\nrc-service adguardhome status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;adguardhome_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice adguardhome start\n\n# Stop service\nservice adguardhome stop\n\n# Restart service\nservice adguardhome restart\n\n# Check status\nservice adguardhome status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start adguardhome\nbrew services stop adguardhome\nbrew services restart adguardhome\n\n# Check status\nbrew services list | grep adguardhome</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start adguardhome\n\n# Stop service\nnet stop adguardhome\n\n# Using PowerShell\nStart-Service adguardhome\nStop-Service adguardhome\nRestart-Service adguardhome\n\n# Check status\nGet-Service adguardhome</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream adguardhome_backend {\n    server 127.0.0.1:53;\n}\n\nserver {\n    listen 80;\n    server_name adguardhome.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name adguardhome.example.com;\n\n    ssl_certificate /etc/ssl/certs/adguardhome.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/adguardhome.example.com.key;\n\n    location / {\n        proxy_pass http://adguardhome_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName adguardhome.example.com\n    Redirect permanent / https://adguardhome.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName adguardhome.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/adguardhome.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/adguardhome.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:53/\n    ProxyPassReverse / http://127.0.0.1:53/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend adguardhome_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/adguardhome.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend adguardhome_backend\n\nbackend adguardhome_backend\n    balance roundrobin\n    server adguardhome1 127.0.0.1:53 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R adguardhome:adguardhome /etc/adguardhome\nsudo chmod 750 /etc/adguardhome\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=53/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status adguardhome\n\n# View logs\nsudo journalctl -u adguardhome -f\n\n# Monitor resource usage\ntop -p $(pgrep adguardhome)</code></pre>\n      </div>\n    </div>\n<h2 id=\"backup-and-restore\" class=\"mobile-header\">Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/adguardhome&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/adguardhome-backup-$DATE.tar.gz&quot; /etc/adguardhome /var/lib/adguardhome\n\necho &quot;Backup completed: $BACKUP_DIR/adguardhome-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop adguardhome\n\n# Restore from backup\ntar -xzf /backup/adguardhome/adguardhome-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start adguardhome</code></pre>\n      </div>\n    </div>\n<h2 id=\"troubleshooting\" class=\"mobile-header\">Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u adguardhome -n 100\nsudo tail -f /var/log/adguardhome/adguardhome.log\n\n# Check configuration\nadguardhome --version\n\n# Check permissions\nls -la /etc/adguardhome</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 53\n\n# Test connectivity\ntelnet localhost 53\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep adguardhome)\n\n# Check disk I/O\niotop -p $(pgrep adguardhome)\n\n# Check connections\nss -an | grep 53</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  adguardhome:\n    image: adguardhome:latest\n    ports:\n      - &quot;53:53&quot;\n    volumes:\n      - ./config:/etc/adguardhome\n      - ./data:/var/lib/adguardhome\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update adguardhome\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade adguardhome\n\n# Arch Linux\nsudo pacman -Syu adguardhome\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade adguardhome\n\n# openSUSE\nsudo zypper update adguardhome\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade adguardhome\n\n# Always backup before updates\ntar -czf /backup/adguardhome-pre-update-$(date +%Y%m%d).tar.gz /etc/adguardhome\n\n# Restart after updates\nsudo systemctl restart adguardhome</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/adguardhome\n\n# Clean old logs\nfind /var/log/adguardhome -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/adguardhome</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.adguardhome.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/adguardhome/adguardhome</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.adguardhome.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.adguardhome.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"6 min","wordCount":1172,"lastBuilt":"2025-09-16T02:44:52.097Z"}]},"__N_SSG":true}