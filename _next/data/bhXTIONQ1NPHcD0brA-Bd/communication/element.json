{"pageProps":{"guide":{"name":"element","displayName":"Element","slug":"element","description":"element README","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/element","updatedAt":"2025-09-16T02:33:54Z","createdAt":"2025-09-08T03:07:06Z","readmeRaw":"## ðŸ‘‹ Welcome to element ðŸš€  \n\nelement README  \n  \n  \n## Author  \n\nðŸ¤– casjay: [Github](https://github.com/casjay) ðŸ¤–  \n","readmeHtml":"<h2 id=\"welcome-to-element\" class=\"mobile-header\">ðŸ‘‹ Welcome to element ðŸš€  </h2>\n<p class=\"mobile-paragraph\">element README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">ðŸ¤– casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> ðŸ¤–  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-16T02:44:19.937Z"},"category":{"key":"communication","name":"Communication","description":"Team communication and collaboration platforms","icon":"ðŸ’¬","color":"#f1fa8c","keywords":["mattermost","rocketchat","matrix","mastodon","element","jitsi"]},"relatedGuides":[{"name":"dendrite","displayName":"Dendrite","slug":"dendrite","description":"Dendrite is a free and open-source Matrix Server. Second-generation Matrix homeserver","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/dendrite","updatedAt":"2025-09-16T02:31:53Z","createdAt":"2025-09-16T02:30:56Z","readmeRaw":"# Dendrite Installation Guide\n\nDendrite is a free and open-source Matrix Server. Second-generation Matrix homeserver\n\n## Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2 cores minimum (4+ cores recommended)\n  - RAM: 2GB minimum (4GB+ recommended)\n  - Storage: 1GB for installation\n  - Network: 8008/8448 ports\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 8008/8448 (default dendrite port)\n- **Dependencies**:\n  - postgresql\n- **System Access**: root or sudo privileges required\n\n## Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install dendrite\nsudo dnf install -y dendrite postgresql\n\n# Enable and start service\nsudo systemctl enable --now dendrite\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=dendrite\nsudo firewall-cmd --reload\n\n# Verify installation\ndendrite --version || systemctl status dendrite\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install dendrite\nsudo apt install -y dendrite postgresql\n\n# Enable and start service\nsudo systemctl enable --now dendrite\n\n# Configure firewall\nsudo ufw allow 8008/8448\n\n# Verify installation\ndendrite --version || systemctl status dendrite\n```\n\n### Arch Linux\n\n```bash\n# Install dendrite\nsudo pacman -S dendrite\n\n# Enable and start service\nsudo systemctl enable --now dendrite\n\n# Verify installation\ndendrite --version || systemctl status dendrite\n```\n\n### Alpine Linux\n\n```bash\n# Install dendrite\napk add --no-cache dendrite\n\n# Enable and start service\nrc-update add dendrite default\nrc-service dendrite start\n\n# Verify installation\ndendrite --version || rc-service dendrite status\n```\n\n### openSUSE/SLES\n\n```bash\n# Install dendrite\nsudo zypper install -y dendrite postgresql\n\n# Enable and start service\nsudo systemctl enable --now dendrite\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=dendrite\nsudo firewall-cmd --reload\n\n# Verify installation\ndendrite --version || systemctl status dendrite\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install dendrite\n\n# Start service\nbrew services start dendrite\n\n# Verify installation\ndendrite --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install dendrite\n\n# Enable in rc.conf\necho 'dendrite_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice dendrite start\n\n# Verify installation\ndendrite --version || service dendrite status\n```\n\n### Windows\n\n```powershell\n# Using Chocolatey\nchoco install dendrite\n\n# Or using Scoop\nscoop install dendrite\n\n# Verify installation\ndendrite --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory if needed\nsudo mkdir -p /etc/dendrite\n\n# Set up basic configuration\nsudo tee /etc/dendrite/dendrite.conf << 'EOF'\n# Dendrite Configuration\nmax_open_conns: 100\nEOF\n\n# Test configuration\nsudo dendrite -t || sudo dendrite configtest\n\n# Reload service\nsudo systemctl reload dendrite\n```\n\n### Security Hardening\n\n```bash\n# Set appropriate permissions\nsudo chown -R dendrite:dendrite /etc/dendrite\nsudo chmod 750 /etc/dendrite\n\n# Enable security features\n# See security section for detailed hardening steps\n```\n\n## Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable dendrite\n\n# Start service\nsudo systemctl start dendrite\n\n# Stop service\nsudo systemctl stop dendrite\n\n# Restart service\nsudo systemctl restart dendrite\n\n# Reload configuration\nsudo systemctl reload dendrite\n\n# Check status\nsudo systemctl status dendrite\n\n# View logs\nsudo journalctl -u dendrite -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add dendrite default\n\n# Start service\nrc-service dendrite start\n\n# Stop service\nrc-service dendrite stop\n\n# Restart service\nrc-service dendrite restart\n\n# Check status\nrc-service dendrite status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'dendrite_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice dendrite start\n\n# Stop service\nservice dendrite stop\n\n# Restart service\nservice dendrite restart\n\n# Check status\nservice dendrite status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start dendrite\nbrew services stop dendrite\nbrew services restart dendrite\n\n# Check status\nbrew services list | grep dendrite\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start dendrite\n\n# Stop service\nnet stop dendrite\n\n# Using PowerShell\nStart-Service dendrite\nStop-Service dendrite\nRestart-Service dendrite\n\n# Check status\nGet-Service dendrite\n```\n\n## Advanced Configuration\n\n### Performance Optimization\n\n```bash\n# Configure performance settings\ncat >> /etc/dendrite/dendrite.conf << 'EOF'\nmax_open_conns: 100\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart dendrite\n```\n\n### Clustering and High Availability\n\n```bash\n# Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports\n```\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream dendrite_backend {\n    server 127.0.0.1:8008/8448;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name dendrite.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name dendrite.example.com;\n\n    ssl_certificate /etc/ssl/certs/dendrite.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/dendrite.example.com.key;\n\n    location / {\n        proxy_pass http://dendrite_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName dendrite.example.com\n    Redirect permanent / https://dendrite.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName dendrite.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/dendrite.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/dendrite.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:8008/8448/\n    ProxyPassReverse / http://127.0.0.1:8008/8448/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) \"ws://127.0.0.1:8008/8448/$1\" [P,L]\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend dendrite_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/dendrite.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend dendrite_backend\n\nbackend dendrite_backend\n    balance roundrobin\n    option httpchk GET /health\n    server dendrite1 127.0.0.1:8008/8448 check\n    server dendrite2 127.0.0.1:{default_port}1 check backup\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R dendrite:dendrite /etc/dendrite\nsudo chmod 750 /etc/dendrite\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=dendrite\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/dendrite.conf << 'EOF'\n[dendrite]\nenabled = true\nport = 8008/8448\nfilter = dendrite\nlogpath = /var/log/dendrite/*.log\nmaxretry = 5\nbantime = 3600\nEOF\n```\n\n### SSL/TLS Configuration\n\n```bash\n# Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/dendrite.key \\\n    -out /etc/ssl/certs/dendrite.crt\n\n# Configure SSL in dendrite\n# See official documentation for SSL configuration\n```\n\n## Database Setup\n\n### PostgreSQL Backend (if applicable)\n\n```bash\n# Create database and user\nsudo -u postgres psql << EOF\nCREATE DATABASE dendrite_db;\nCREATE USER dendrite_user WITH ENCRYPTED PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE dendrite_db TO dendrite_user;\nEOF\n\n# Configure dendrite to use PostgreSQL\n# See official documentation for database configuration\n```\n\n### MySQL/MariaDB Backend (if applicable)\n\n```bash\n# Create database and user\nsudo mysql << EOF\nCREATE DATABASE dendrite_db;\nCREATE USER 'dendrite_user'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON dendrite_db.* TO 'dendrite_user'@'localhost';\nFLUSH PRIVILEGES;\nEOF\n```\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Kernel parameters\nsudo tee -a /etc/sysctl.conf << EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Dendrite specific tuning\nmax_open_conns: 100\n```\n\n### Resource Limits\n\n```bash\n# Configure system limits\nsudo tee -a /etc/security/limits.conf << EOF\ndendrite soft nofile 65535\ndendrite hard nofile 65535\ndendrite soft nproc 32768\ndendrite hard nproc 32768\nEOF\n```\n\n## Monitoring\n\n### Prometheus Integration\n\n```yaml\n# prometheus.yml configuration\nscrape_configs:\n  - job_name: 'dendrite'\n    static_configs:\n      - targets: ['localhost:8008/8448']\n    metrics_path: '/metrics'\n```\n\n### Health Checks\n\n```bash\n# Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet dendrite; then\n    echo \"Dendrite is running\"\n    exit 0\nelse\n    echo \"Dendrite is not running\"\n    exit 1\nfi\n```\n\n### Log Monitoring\n\n```bash\n# Configure log rotation\nsudo tee /etc/logrotate.d/dendrite << 'EOF'\n/var/log/dendrite/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 dendrite dendrite\n    postrotate\n        systemctl reload dendrite > /dev/null 2>&1 || true\n    endscript\n}\nEOF\n```\n\n## Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Dendrite backup script\nBACKUP_DIR=\"/backup/dendrite\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\n\n# Stop service (if required)\nsystemctl stop dendrite\n\n# Backup configuration\ntar -czf \"$BACKUP_DIR/dendrite-config-$DATE.tar.gz\" /etc/dendrite\n\n# Backup data (adjust paths as needed)\ntar -czf \"$BACKUP_DIR/dendrite-data-$DATE.tar.gz\" /var/lib/dendrite\n\n# Start service\nsystemctl start dendrite\n\n# Clean old backups (keep 30 days)\nfind \"$BACKUP_DIR\" -name \"*.tar.gz\" -mtime +30 -delete\n\necho \"Backup completed: $BACKUP_DIR\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop dendrite\n\n# Restore configuration\nsudo tar -xzf /backup/dendrite/dendrite-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/dendrite/dendrite-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R dendrite:dendrite /etc/dendrite\nsudo chown -R dendrite:dendrite /var/lib/dendrite\n\n# Start service\nsudo systemctl start dendrite\n```\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u dendrite -n 100\nsudo tail -f /var/log/dendrite/*.log\n\n# Check configuration\nsudo dendrite -t || sudo dendrite configtest\n\n# Check permissions\nls -la /etc/dendrite\nls -la /var/lib/dendrite\n```\n\n2. **Connection refused**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 8008/8448\nsudo netstat -tlnp | grep 8008/8448\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 8008/8448\nnc -zv localhost 8008/8448\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep dendrite)\nhtop -p $(pgrep dendrite)\n\n# Check connections\nss -ant | grep :8008/8448 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep dendrite)\n```\n\n### Debug Mode\n\n```bash\n# Run in debug mode\nsudo dendrite -d\n# or\nsudo dendrite debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging\n```\n\n## Integration Examples\n\n### Docker Compose\n\n```yaml\nversion: '3.8'\nservices:\n  dendrite:\n    image: dendrite:latest\n    container_name: dendrite\n    ports:\n      - \"8008/8448:8008/8448\"\n    volumes:\n      - ./config:/etc/dendrite\n      - ./data:/var/lib/dendrite\n    environment:\n      - dendrite_CONFIG=/etc/dendrite/dendrite.conf\n    restart: unless-stopped\n    networks:\n      - dendrite_net\n\nnetworks:\n  dendrite_net:\n    driver: bridge\n```\n\n### Kubernetes Deployment\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: dendrite\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: dendrite\n  template:\n    metadata:\n      labels:\n        app: dendrite\n    spec:\n      containers:\n      - name: dendrite\n        image: dendrite:latest\n        ports:\n        - containerPort: 8008/8448\n        volumeMounts:\n        - name: config\n          mountPath: /etc/dendrite\n      volumes:\n      - name: config\n        configMap:\n          name: dendrite-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: dendrite\nspec:\n  selector:\n    app: dendrite\n  ports:\n  - port: 8008/8448\n    targetPort: 8008/8448\n  type: LoadBalancer\n```\n\n### Ansible Playbook\n\n```yaml\n---\n- name: Install and configure Dendrite\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install dendrite\n      package:\n        name: dendrite\n        state: present\n    \n    - name: Configure dendrite\n      template:\n        src: dendrite.conf.j2\n        dest: /etc/dendrite/dendrite.conf\n        owner: dendrite\n        group: dendrite\n        mode: '0640'\n      notify: restart dendrite\n    \n    - name: Start and enable dendrite\n      systemd:\n        name: dendrite\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart dendrite\n      systemd:\n        name: dendrite\n        state: restarted\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update dendrite\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade dendrite\n\n# Arch Linux\nsudo pacman -Syu dendrite\n\n# Alpine Linux\napk update && apk upgrade dendrite\n\n# openSUSE\nsudo zypper update dendrite\n\n# FreeBSD\npkg update && pkg upgrade dendrite\n\n# Always backup before updates\ntar -czf /backup/dendrite-pre-update-$(date +%Y%m%d).tar.gz /etc/dendrite\n\n# Restart after updates\nsudo systemctl restart dendrite\n```\n\n### Regular Maintenance Tasks\n\n```bash\n# Clean logs\nfind /var/log/dendrite -name \"*.log\" -mtime +30 -delete\n\n# Verify integrity\nsudo dendrite --verify || sudo dendrite check\n\n# Update databases (if applicable)\nsudo dendrite-update-db\n\n# Optimize performance\nsudo dendrite-optimize\n\n# Check for security updates\nsudo dendrite --security-check\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.dendrite.org/\n- GitHub Repository: https://github.com/dendrite/dendrite\n- Community Forum: https://forum.dendrite.org/\n- Wiki: https://wiki.dendrite.org/\n- Comparison vs Synapse, Conduit, Construct: https://docs.dendrite.org/comparison\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<h1 id=\"dendrite-installation-guide\" class=\"mobile-header\">Dendrite Installation Guide</h1>\n<p class=\"mobile-paragraph\">Dendrite is a free and open-source Matrix Server. Second-generation Matrix homeserver</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2 cores minimum (4+ cores recommended)</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum (4GB+ recommended)</li>\n<li class=\"mobile-list-item\">Storage: 1GB for installation</li>\n<li class=\"mobile-list-item\">Network: 8008/8448 ports</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 8008/8448 (default dendrite port)</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">postgresql</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install dendrite\nsudo dnf install -y dendrite postgresql\n\n# Enable and start service\nsudo systemctl enable --now dendrite\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=dendrite\nsudo firewall-cmd --reload\n\n# Verify installation\ndendrite --version || systemctl status dendrite</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install dendrite\nsudo apt install -y dendrite postgresql\n\n# Enable and start service\nsudo systemctl enable --now dendrite\n\n# Configure firewall\nsudo ufw allow 8008/8448\n\n# Verify installation\ndendrite --version || systemctl status dendrite</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install dendrite\nsudo pacman -S dendrite\n\n# Enable and start service\nsudo systemctl enable --now dendrite\n\n# Verify installation\ndendrite --version || systemctl status dendrite</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install dendrite\napk add --no-cache dendrite\n\n# Enable and start service\nrc-update add dendrite default\nrc-service dendrite start\n\n# Verify installation\ndendrite --version || rc-service dendrite status</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install dendrite\nsudo zypper install -y dendrite postgresql\n\n# Enable and start service\nsudo systemctl enable --now dendrite\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=dendrite\nsudo firewall-cmd --reload\n\n# Verify installation\ndendrite --version || systemctl status dendrite</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install dendrite\n\n# Start service\nbrew services start dendrite\n\n# Verify installation\ndendrite --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install dendrite\n\n# Enable in rc.conf\necho &#039;dendrite_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice dendrite start\n\n# Verify installation\ndendrite --version || service dendrite status</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Using Chocolatey\nchoco install dendrite\n\n# Or using Scoop\nscoop install dendrite\n\n# Verify installation\ndendrite --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory if needed\nsudo mkdir -p /etc/dendrite\n\n# Set up basic configuration\nsudo tee /etc/dendrite/dendrite.conf &lt;&lt; &#039;EOF&#039;\n# Dendrite Configuration\nmax_open_conns: 100\nEOF\n\n# Test configuration\nsudo dendrite -t || sudo dendrite configtest\n\n# Reload service\nsudo systemctl reload dendrite</code></pre>\n      </div>\n    </div>\n<h3 id=\"security-hardening\" class=\"mobile-header\">Security Hardening</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R dendrite:dendrite /etc/dendrite\nsudo chmod 750 /etc/dendrite\n\n# Enable security features\n# See security section for detailed hardening steps</code></pre>\n      </div>\n    </div>\n<h2 id=\"service-management\" class=\"mobile-header\">Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable dendrite\n\n# Start service\nsudo systemctl start dendrite\n\n# Stop service\nsudo systemctl stop dendrite\n\n# Restart service\nsudo systemctl restart dendrite\n\n# Reload configuration\nsudo systemctl reload dendrite\n\n# Check status\nsudo systemctl status dendrite\n\n# View logs\nsudo journalctl -u dendrite -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add dendrite default\n\n# Start service\nrc-service dendrite start\n\n# Stop service\nrc-service dendrite stop\n\n# Restart service\nrc-service dendrite restart\n\n# Check status\nrc-service dendrite status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;dendrite_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice dendrite start\n\n# Stop service\nservice dendrite stop\n\n# Restart service\nservice dendrite restart\n\n# Check status\nservice dendrite status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start dendrite\nbrew services stop dendrite\nbrew services restart dendrite\n\n# Check status\nbrew services list | grep dendrite</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start dendrite\n\n# Stop service\nnet stop dendrite\n\n# Using PowerShell\nStart-Service dendrite\nStop-Service dendrite\nRestart-Service dendrite\n\n# Check status\nGet-Service dendrite</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<h3 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure performance settings\ncat &gt;&gt; /etc/dendrite/dendrite.conf &lt;&lt; &#039;EOF&#039;\nmax_open_conns: 100\nEOF\n\n# Apply system tuning\nsudo sysctl -w net.core.somaxconn=65535\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=65535\n\n# Restart service\nsudo systemctl restart dendrite</code></pre>\n      </div>\n    </div>\n<h3 id=\"clustering-and-high-availability\" class=\"mobile-header\">Clustering and High Availability</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure clustering (if supported)\n# See official documentation for cluster setup\n\n# Basic load balancing setup example\n# Configure multiple instances on different ports</code></pre>\n      </div>\n    </div>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream dendrite_backend {\n    server 127.0.0.1:8008/8448;\n    server 127.0.0.1:{default_port}1 backup;\n}\n\nserver {\n    listen 80;\n    server_name dendrite.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name dendrite.example.com;\n\n    ssl_certificate /etc/ssl/certs/dendrite.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/dendrite.example.com.key;\n\n    location / {\n        proxy_pass http://dendrite_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName dendrite.example.com\n    Redirect permanent / https://dendrite.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName dendrite.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/dendrite.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/dendrite.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:8008/8448/\n    ProxyPassReverse / http://127.0.0.1:8008/8448/\n    \n    # WebSocket support (if needed)\n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) &quot;ws://127.0.0.1:8008/8448/$1&quot; [P,L]\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend dendrite_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/dendrite.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend dendrite_backend\n\nbackend dendrite_backend\n    balance roundrobin\n    option httpchk GET /health\n    server dendrite1 127.0.0.1:8008/8448 check\n    server dendrite2 127.0.0.1:{default_port}1 check backup</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R dendrite:dendrite /etc/dendrite\nsudo chmod 750 /etc/dendrite\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-service=dendrite\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n\n# Configure fail2ban\nsudo tee /etc/fail2ban/jail.d/dendrite.conf &lt;&lt; &#039;EOF&#039;\n[dendrite]\nenabled = true\nport = 8008/8448\nfilter = dendrite\nlogpath = /var/log/dendrite/*.log\nmaxretry = 5\nbantime = 3600\nEOF</code></pre>\n      </div>\n    </div>\n<h3 id=\"ssltls-configuration\" class=\"mobile-header\">SSL/TLS Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Generate SSL certificates\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout /etc/ssl/private/dendrite.key \\\n    -out /etc/ssl/certs/dendrite.crt\n\n# Configure SSL in dendrite\n# See official documentation for SSL configuration</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<h3 id=\"postgresql-backend-if-applicable\" class=\"mobile-header\">PostgreSQL Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo -u postgres psql &lt;&lt; EOF\nCREATE DATABASE dendrite_db;\nCREATE USER dendrite_user WITH ENCRYPTED PASSWORD &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON DATABASE dendrite_db TO dendrite_user;\nEOF\n\n# Configure dendrite to use PostgreSQL\n# See official documentation for database configuration</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysqlmariadb-backend-if-applicable\" class=\"mobile-header\">MySQL/MariaDB Backend (if applicable)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create database and user\nsudo mysql &lt;&lt; EOF\nCREATE DATABASE dendrite_db;\nCREATE USER &#039;dendrite_user&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON dendrite_db.* TO &#039;dendrite_user&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Kernel parameters\nsudo tee -a /etc/sysctl.conf &lt;&lt; EOF\nnet.core.somaxconn = 65535\nnet.ipv4.tcp_max_syn_backlog = 65535\nnet.ipv4.ip_local_port_range = 1024 65535\nnet.core.netdev_max_backlog = 5000\nvm.swappiness = 10\nEOF\n\nsudo sysctl -p\n\n# Dendrite specific tuning\nmax_open_conns: 100</code></pre>\n      </div>\n    </div>\n<h3 id=\"resource-limits\" class=\"mobile-header\">Resource Limits</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure system limits\nsudo tee -a /etc/security/limits.conf &lt;&lt; EOF\ndendrite soft nofile 65535\ndendrite hard nofile 65535\ndendrite soft nproc 32768\ndendrite hard nproc 32768\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"prometheus-integration\" class=\"mobile-header\">Prometheus Integration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># prometheus.yml configuration\nscrape_configs:\n  - job_name: &#039;dendrite&#039;\n    static_configs:\n      - targets: [&#039;localhost:8008/8448&#039;]\n    metrics_path: &#039;/metrics&#039;</code></pre>\n      </div>\n    </div>\n<h3 id=\"health-checks\" class=\"mobile-header\">Health Checks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic health check script\n#!/bin/bash\nif systemctl is-active --quiet dendrite; then\n    echo &quot;Dendrite is running&quot;\n    exit 0\nelse\n    echo &quot;Dendrite is not running&quot;\n    exit 1\nfi</code></pre>\n      </div>\n    </div>\n<h3 id=\"log-monitoring\" class=\"mobile-header\">Log Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure log rotation\nsudo tee /etc/logrotate.d/dendrite &lt;&lt; &#039;EOF&#039;\n/var/log/dendrite/*.log {\n    daily\n    rotate 14\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 0640 dendrite dendrite\n    postrotate\n        systemctl reload dendrite &gt; /dev/null 2&gt;&amp;1 || true\n    endscript\n}\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"backup-and-restore\" class=\"mobile-header\">Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Dendrite backup script\nBACKUP_DIR=&quot;/backup/dendrite&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\n\n# Stop service (if required)\nsystemctl stop dendrite\n\n# Backup configuration\ntar -czf &quot;$BACKUP_DIR/dendrite-config-$DATE.tar.gz&quot; /etc/dendrite\n\n# Backup data (adjust paths as needed)\ntar -czf &quot;$BACKUP_DIR/dendrite-data-$DATE.tar.gz&quot; /var/lib/dendrite\n\n# Start service\nsystemctl start dendrite\n\n# Clean old backups (keep 30 days)\nfind &quot;$BACKUP_DIR&quot; -name &quot;*.tar.gz&quot; -mtime +30 -delete\n\necho &quot;Backup completed: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop dendrite\n\n# Restore configuration\nsudo tar -xzf /backup/dendrite/dendrite-config-*.tar.gz -C /\n\n# Restore data\nsudo tar -xzf /backup/dendrite/dendrite-data-*.tar.gz -C /\n\n# Set permissions\nsudo chown -R dendrite:dendrite /etc/dendrite\nsudo chown -R dendrite:dendrite /var/lib/dendrite\n\n# Start service\nsudo systemctl start dendrite</code></pre>\n      </div>\n    </div>\n<h2 id=\"troubleshooting\" class=\"mobile-header\">Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u dendrite -n 100\nsudo tail -f /var/log/dendrite/*.log\n\n# Check configuration\nsudo dendrite -t || sudo dendrite configtest\n\n# Check permissions\nls -la /etc/dendrite\nls -la /var/lib/dendrite</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection refused</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 8008/8448\nsudo netstat -tlnp | grep 8008/8448\n\n# Check firewall\nsudo firewall-cmd --list-all\nsudo iptables -L -n\n\n# Test connection\ntelnet localhost 8008/8448\nnc -zv localhost 8008/8448</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep dendrite)\nhtop -p $(pgrep dendrite)\n\n# Check connections\nss -ant | grep :8008/8448 | wc -l\n\n# Monitor I/O\niotop -p $(pgrep dendrite)</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode\" class=\"mobile-header\">Debug Mode</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Run in debug mode\nsudo dendrite -d\n# or\nsudo dendrite debug\n\n# Increase log verbosity\n# Edit configuration to enable debug logging</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose\" class=\"mobile-header\">Docker Compose</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  dendrite:\n    image: dendrite:latest\n    container_name: dendrite\n    ports:\n      - &quot;8008/8448:8008/8448&quot;\n    volumes:\n      - ./config:/etc/dendrite\n      - ./data:/var/lib/dendrite\n    environment:\n      - dendrite_CONFIG=/etc/dendrite/dendrite.conf\n    restart: unless-stopped\n    networks:\n      - dendrite_net\n\nnetworks:\n  dendrite_net:\n    driver: bridge</code></pre>\n      </div>\n    </div>\n<h3 id=\"kubernetes-deployment\" class=\"mobile-header\">Kubernetes Deployment</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: dendrite\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: dendrite\n  template:\n    metadata:\n      labels:\n        app: dendrite\n    spec:\n      containers:\n      - name: dendrite\n        image: dendrite:latest\n        ports:\n        - containerPort: 8008/8448\n        volumeMounts:\n        - name: config\n          mountPath: /etc/dendrite\n      volumes:\n      - name: config\n        configMap:\n          name: dendrite-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: dendrite\nspec:\n  selector:\n    app: dendrite\n  ports:\n  - port: 8008/8448\n    targetPort: 8008/8448\n  type: LoadBalancer</code></pre>\n      </div>\n    </div>\n<h3 id=\"ansible-playbook\" class=\"mobile-header\">Ansible Playbook</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">---\n- name: Install and configure Dendrite\n  hosts: all\n  become: yes\n  tasks:\n    - name: Install dendrite\n      package:\n        name: dendrite\n        state: present\n    \n    - name: Configure dendrite\n      template:\n        src: dendrite.conf.j2\n        dest: /etc/dendrite/dendrite.conf\n        owner: dendrite\n        group: dendrite\n        mode: &#039;0640&#039;\n      notify: restart dendrite\n    \n    - name: Start and enable dendrite\n      systemd:\n        name: dendrite\n        state: started\n        enabled: yes\n  \n  handlers:\n    - name: restart dendrite\n      systemd:\n        name: dendrite\n        state: restarted</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update dendrite\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade dendrite\n\n# Arch Linux\nsudo pacman -Syu dendrite\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade dendrite\n\n# openSUSE\nsudo zypper update dendrite\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade dendrite\n\n# Always backup before updates\ntar -czf /backup/dendrite-pre-update-$(date +%Y%m%d).tar.gz /etc/dendrite\n\n# Restart after updates\nsudo systemctl restart dendrite</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance-tasks\" class=\"mobile-header\">Regular Maintenance Tasks</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clean logs\nfind /var/log/dendrite -name &quot;*.log&quot; -mtime +30 -delete\n\n# Verify integrity\nsudo dendrite --verify || sudo dendrite check\n\n# Update databases (if applicable)\nsudo dendrite-update-db\n\n# Optimize performance\nsudo dendrite-optimize\n\n# Check for security updates\nsudo dendrite --security-check</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.dendrite.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/dendrite/dendrite</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.dendrite.org/</li>\n<li class=\"mobile-list-item\">Wiki: https://wiki.dendrite.org/</li>\n<li class=\"mobile-list-item\">Comparison vs Synapse, Conduit, Construct: https://docs.dendrite.org/comparison</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"10 min","wordCount":1863,"lastBuilt":"2025-09-16T02:44:23.010Z"},{"name":"element-web","displayName":"Element Web","slug":"element-web","description":"element-web is a free and open-source Matrix web client. Element provides web-based Matrix client (formerly Riot)","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/element-web","updatedAt":"2025-09-16T02:37:48Z","createdAt":"2025-09-16T02:33:55Z","readmeRaw":"# element-web Installation Guide\n\nelement-web is a free and open-source Matrix web client. Element provides web-based Matrix client (formerly Riot)\n\n## Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 1 core minimum\n  - RAM: 256MB minimum\n  - Storage: 100MB for app\n  - Network: HTTP/HTTPS access\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 80 (default element-web port)\n  - None\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n## Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install element-web\nsudo dnf install -y element-web\n\n# Enable and start service\nsudo systemctl enable --now nginx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nelement-web --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install element-web\nsudo apt install -y element-web\n\n# Enable and start service\nsudo systemctl enable --now nginx\n\n# Configure firewall\nsudo ufw allow 80\n\n# Verify installation\nelement-web --version\n```\n\n### Arch Linux\n\n```bash\n# Install element-web\nsudo pacman -S element-web\n\n# Enable and start service\nsudo systemctl enable --now nginx\n\n# Verify installation\nelement-web --version\n```\n\n### Alpine Linux\n\n```bash\n# Install element-web\napk add --no-cache element-web\n\n# Enable and start service\nrc-update add nginx default\nrc-service nginx start\n\n# Verify installation\nelement-web --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install element-web\nsudo zypper install -y element-web\n\n# Enable and start service\nsudo systemctl enable --now nginx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nelement-web --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install element-web\n\n# Start service\nbrew services start element-web\n\n# Verify installation\nelement-web --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install element-web\n\n# Enable in rc.conf\necho 'nginx_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice nginx start\n\n# Verify installation\nelement-web --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install element-web\n\n# Or using Scoop\nscoop install element-web\n\n# Verify installation\nelement-web --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/element-web\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nelement-web --version\n```\n\n## Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable nginx\n\n# Start service\nsudo systemctl start nginx\n\n# Stop service\nsudo systemctl stop nginx\n\n# Restart service\nsudo systemctl restart nginx\n\n# Check status\nsudo systemctl status nginx\n\n# View logs\nsudo journalctl -u nginx -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add nginx default\n\n# Start service\nrc-service nginx start\n\n# Stop service\nrc-service nginx stop\n\n# Restart service\nrc-service nginx restart\n\n# Check status\nrc-service nginx status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'nginx_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice nginx start\n\n# Stop service\nservice nginx stop\n\n# Restart service\nservice nginx restart\n\n# Check status\nservice nginx status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start element-web\nbrew services stop element-web\nbrew services restart element-web\n\n# Check status\nbrew services list | grep element-web\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start nginx\n\n# Stop service\nnet stop nginx\n\n# Using PowerShell\nStart-Service nginx\nStop-Service nginx\nRestart-Service nginx\n\n# Check status\nGet-Service nginx\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream element-web_backend {\n    server 127.0.0.1:80;\n}\n\nserver {\n    listen 80;\n    server_name element-web.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name element-web.example.com;\n\n    ssl_certificate /etc/ssl/certs/element-web.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/element-web.example.com.key;\n\n    location / {\n        proxy_pass http://element-web_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName element-web.example.com\n    Redirect permanent / https://element-web.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName element-web.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/element-web.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/element-web.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:80/\n    ProxyPassReverse / http://127.0.0.1:80/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend element-web_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/element-web.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend element-web_backend\n\nbackend element-web_backend\n    balance roundrobin\n    server element-web1 127.0.0.1:80 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R element-web:element-web /etc/element-web\nsudo chmod 750 /etc/element-web\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status nginx\n\n# View logs\nsudo journalctl -u nginx -f\n\n# Monitor resource usage\ntop -p $(pgrep element-web)\n```\n\n## Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/element-web\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/element-web-backup-$DATE.tar.gz\" /etc/element-web /var/lib/element-web\n\necho \"Backup completed: $BACKUP_DIR/element-web-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop nginx\n\n# Restore from backup\ntar -xzf /backup/element-web/element-web-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start nginx\n```\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u nginx -n 100\nsudo tail -f /var/log/element-web/element-web.log\n\n# Check configuration\nelement-web --version\n\n# Check permissions\nls -la /etc/element-web\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 80\n\n# Test connectivity\ntelnet localhost 80\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep element-web)\n\n# Check disk I/O\niotop -p $(pgrep element-web)\n\n# Check connections\nss -an | grep 80\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  element-web:\n    image: element-web:latest\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./config:/etc/element-web\n      - ./data:/var/lib/element-web\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update element-web\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade element-web\n\n# Arch Linux\nsudo pacman -Syu element-web\n\n# Alpine Linux\napk update && apk upgrade element-web\n\n# openSUSE\nsudo zypper update element-web\n\n# FreeBSD\npkg update && pkg upgrade element-web\n\n# Always backup before updates\ntar -czf /backup/element-web-pre-update-$(date +%Y%m%d).tar.gz /etc/element-web\n\n# Restart after updates\nsudo systemctl restart nginx\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/element-web\n\n# Clean old logs\nfind /var/log/element-web -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/element-web\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.element-web.org/\n- GitHub Repository: https://github.com/element-web/element-web\n- Community Forum: https://forum.element-web.org/\n- Best Practices Guide: https://docs.element-web.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<h1 id=\"element-web-installation-guide\" class=\"mobile-header\">element-web Installation Guide</h1>\n<p class=\"mobile-paragraph\">element-web is a free and open-source Matrix web client. Element provides web-based Matrix client (formerly Riot)</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 1 core minimum</li>\n<li class=\"mobile-list-item\">RAM: 256MB minimum</li>\n<li class=\"mobile-list-item\">Storage: 100MB for app</li>\n<li class=\"mobile-list-item\">Network: HTTP/HTTPS access</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 80 (default element-web port)</li>\n<li class=\"mobile-list-item\">None</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install element-web\nsudo dnf install -y element-web\n\n# Enable and start service\nsudo systemctl enable --now nginx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nelement-web --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install element-web\nsudo apt install -y element-web\n\n# Enable and start service\nsudo systemctl enable --now nginx\n\n# Configure firewall\nsudo ufw allow 80\n\n# Verify installation\nelement-web --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install element-web\nsudo pacman -S element-web\n\n# Enable and start service\nsudo systemctl enable --now nginx\n\n# Verify installation\nelement-web --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install element-web\napk add --no-cache element-web\n\n# Enable and start service\nrc-update add nginx default\nrc-service nginx start\n\n# Verify installation\nelement-web --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install element-web\nsudo zypper install -y element-web\n\n# Enable and start service\nsudo systemctl enable --now nginx\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nelement-web --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install element-web\n\n# Start service\nbrew services start element-web\n\n# Verify installation\nelement-web --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install element-web\n\n# Enable in rc.conf\necho &#039;nginx_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice nginx start\n\n# Verify installation\nelement-web --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install element-web\n\n# Or using Scoop\nscoop install element-web\n\n# Verify installation\nelement-web --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/element-web\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nelement-web --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"service-management\" class=\"mobile-header\">Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable nginx\n\n# Start service\nsudo systemctl start nginx\n\n# Stop service\nsudo systemctl stop nginx\n\n# Restart service\nsudo systemctl restart nginx\n\n# Check status\nsudo systemctl status nginx\n\n# View logs\nsudo journalctl -u nginx -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add nginx default\n\n# Start service\nrc-service nginx start\n\n# Stop service\nrc-service nginx stop\n\n# Restart service\nrc-service nginx restart\n\n# Check status\nrc-service nginx status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;nginx_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice nginx start\n\n# Stop service\nservice nginx stop\n\n# Restart service\nservice nginx restart\n\n# Check status\nservice nginx status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start element-web\nbrew services stop element-web\nbrew services restart element-web\n\n# Check status\nbrew services list | grep element-web</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start nginx\n\n# Stop service\nnet stop nginx\n\n# Using PowerShell\nStart-Service nginx\nStop-Service nginx\nRestart-Service nginx\n\n# Check status\nGet-Service nginx</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream element-web_backend {\n    server 127.0.0.1:80;\n}\n\nserver {\n    listen 80;\n    server_name element-web.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name element-web.example.com;\n\n    ssl_certificate /etc/ssl/certs/element-web.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/element-web.example.com.key;\n\n    location / {\n        proxy_pass http://element-web_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName element-web.example.com\n    Redirect permanent / https://element-web.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName element-web.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/element-web.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/element-web.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:80/\n    ProxyPassReverse / http://127.0.0.1:80/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend element-web_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/element-web.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend element-web_backend\n\nbackend element-web_backend\n    balance roundrobin\n    server element-web1 127.0.0.1:80 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R element-web:element-web /etc/element-web\nsudo chmod 750 /etc/element-web\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=80/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status nginx\n\n# View logs\nsudo journalctl -u nginx -f\n\n# Monitor resource usage\ntop -p $(pgrep element-web)</code></pre>\n      </div>\n    </div>\n<h2 id=\"backup-and-restore\" class=\"mobile-header\">Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/element-web&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/element-web-backup-$DATE.tar.gz&quot; /etc/element-web /var/lib/element-web\n\necho &quot;Backup completed: $BACKUP_DIR/element-web-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop nginx\n\n# Restore from backup\ntar -xzf /backup/element-web/element-web-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start nginx</code></pre>\n      </div>\n    </div>\n<h2 id=\"troubleshooting\" class=\"mobile-header\">Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u nginx -n 100\nsudo tail -f /var/log/element-web/element-web.log\n\n# Check configuration\nelement-web --version\n\n# Check permissions\nls -la /etc/element-web</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 80\n\n# Test connectivity\ntelnet localhost 80\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep element-web)\n\n# Check disk I/O\niotop -p $(pgrep element-web)\n\n# Check connections\nss -an | grep 80</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  element-web:\n    image: element-web:latest\n    ports:\n      - &quot;80:80&quot;\n    volumes:\n      - ./config:/etc/element-web\n      - ./data:/var/lib/element-web\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update element-web\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade element-web\n\n# Arch Linux\nsudo pacman -Syu element-web\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade element-web\n\n# openSUSE\nsudo zypper update element-web\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade element-web\n\n# Always backup before updates\ntar -czf /backup/element-web-pre-update-$(date +%Y%m%d).tar.gz /etc/element-web\n\n# Restart after updates\nsudo systemctl restart nginx</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/element-web\n\n# Clean old logs\nfind /var/log/element-web -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/element-web</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.element-web.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/element-web/element-web</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.element-web.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.element-web.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"6 min","wordCount":1154,"lastBuilt":"2025-09-16T02:44:15.560Z"},{"name":"jitsi","displayName":"Jitsi","slug":"jitsi","description":"jitsi README","category":"communication","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/jitsi","updatedAt":"2025-09-16T02:38:06Z","createdAt":"2025-09-08T03:09:16Z","readmeRaw":"## ðŸ‘‹ Welcome to jitsi ðŸš€  \n\njitsi README  \n  \n  \n## Author  \n\nðŸ¤– casjay: [Github](https://github.com/casjay) ðŸ¤–  \n","readmeHtml":"<h2 id=\"welcome-to-jitsi\" class=\"mobile-header\">ðŸ‘‹ Welcome to jitsi ðŸš€  </h2>\n<p class=\"mobile-paragraph\">jitsi README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author  </h2>\n<p class=\"mobile-paragraph\">ðŸ¤– casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> ðŸ¤–  </p>","readTime":"1 min","wordCount":15,"lastBuilt":"2025-09-16T02:44:07.703Z"}]},"__N_SSG":true}