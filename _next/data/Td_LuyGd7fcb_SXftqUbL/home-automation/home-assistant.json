{"pageProps":{"guide":{"name":"home-assistant","displayName":"Home Assistant Installation Guide","slug":"home-assistant","description":"Home Assistant is a free and open-source home automation platform that runs on Python. It puts local control and privacy first, serving as a FOSS alternative to proprietary smart home platforms like Google Home, Amazon Alexa, Apple HomeKit, or Samsung SmartThings.","category":"home-automation","subcategory":"home-automation","difficultyLevel":"intermediate","estimatedSetupTime":"30-60 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos"],"defaultPorts":[8123],"installationMethods":["pip-install","supervised-install","docker"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["smart-home","automation","iot","home-control","privacy-focused"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Apache-2.0","websiteUrl":"https://howtomgr.github.io/home-automation/home-assistant","documentationUrl":"https://howtomgr.github.io/home-automation/home-assistant","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/home-assistant","updatedAt":"2025-09-16T17:19:10Z","createdAt":"2023-08-28T03:48:06Z","readmeRaw":"# Home Assistant Installation Guide\n\nHome Assistant is a free and open-source home automation platform that runs on Python. It puts local control and privacy first, serving as a FOSS alternative to proprietary smart home platforms like Google Home, Amazon Alexa, Apple HomeKit, or Samsung SmartThings. Home Assistant supports over 2000 integrations and protocols for controlling smart home devices locally without requiring cloud connectivity.\n\n## Prerequisites\n\n### Hardware Requirements\n- **CPU**: Dual-core ARM or x86 processor (1.5+ GHz recommended)\n- **RAM**: 2 GB minimum (4 GB recommended for production)\n- **Storage**: 32 GB minimum (64 GB+ recommended)\n- **Network**: Ethernet or WiFi connectivity\n- **USB Ports**: For Z-Wave/Zigbee dongles (if using)\n\n### Operating System Requirements\n- RHEL 8/9, CentOS Stream 8/9, Rocky Linux 8/9, AlmaLinux 8/9, Fedora 37+\n- Debian 11/12, Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling), Manjaro\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+, Tumbleweed, SLES 15 SP5+\n- macOS 12+ (Monterey and later)\n\n### Network Requirements\n- **HTTP**: Port 8123 (default web interface)\n- **HTTPS**: Port 8123 with TLS (recommended)\n- **mDNS**: Port 5353 UDP (for device discovery)\n- **MQTT**: Port 1883/8883 (if using MQTT broker)\n- **SSH**: Port 22 (for remote management)\n\n### Dependencies\n- **Python**: 3.10 or later (3.11+ recommended)\n- **pip**: Python package manager\n- **Git**: For component updates\n- **Build tools**: For compiling native extensions\n- **MQTT Broker**: Mosquitto (optional but recommended)\n\n### Required System Access\n- **Root/sudo**: Required for installation and service setup\n- **Dedicated user**: homeassistant user account (created during setup)\n- **Hardware access**: USB devices for Z-Wave/Zigbee dongles\n\n### Domain/DNS Requirements (Optional)\n- Domain name for remote access\n- Dynamic DNS service (if using residential internet)\n- Valid SSL certificate (Let's Encrypt recommended)\n\n## Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n#### Method 1: Core Installation (Recommended)\n\n```bash\n# Install EPEL repository for additional packages\nsudo dnf install -y epel-release\n\n# Install Python 3.11 and development tools\nsudo dnf install -y python3.11 python3.11-pip python3.11-devel python3.11-venv \\\n                    gcc gcc-c++ make git curl wget \\\n                    systemd-devel libffi-devel openssl-devel \\\n                    bluez-libs-devel\n\n# Create dedicated homeassistant user\nsudo useradd -r -s /bin/bash -d /opt/homeassistant homeassistant\n\n# Create installation directory\nsudo mkdir -p /opt/homeassistant\nsudo chown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3.11 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit\n```\n\n#### Method 2: Supervised Installation\n\n```bash\n# Install Docker (required for Supervised)\nsudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo dnf install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\n# Start and enable Docker\nsudo systemctl enable --now docker\n\n# Install additional dependencies\nsudo dnf install -y curl jq apparmor-utils systemd-journal-remote\n\n# Download and install Home Assistant Supervised\ncurl -Lo installer.sh https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.sh\nsudo bash installer.sh --machine qemux86-64\n```\n\n### Debian/Ubuntu\n\n#### Method 1: Core Installation (Recommended)\n\n```bash\n# Update package list\nsudo apt update\n\n# Install Python 3.11 and development tools\nsudo apt install -y python3.11 python3.11-pip python3.11-dev python3.11-venv \\\n                    build-essential git curl wget \\\n                    libsystemd-dev libffi-dev libssl-dev \\\n                    bluetooth libbluetooth-dev\n\n# Create dedicated homeassistant user\nsudo useradd -r -s /bin/bash -d /opt/homeassistant homeassistant\n\n# Create installation directory\nsudo mkdir -p /opt/homeassistant\nsudo chown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3.11 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit\n```\n\n#### Method 2: Supervised Installation\n\n```bash\n# Install Docker\nsudo apt update\nsudo apt install -y ca-certificates curl gnupg lsb-release\n\n# Add Docker GPG key\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n\n# Add Docker repository\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\n# Install Docker\nsudo apt update\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\n# Install additional dependencies\nsudo apt install -y jq curl apparmor systemd-journal-remote\n\n# Download and install Home Assistant Supervised\ncurl -Lo installer.sh https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.sh\nsudo bash installer.sh --machine qemux86-64\n```\n\n### Arch Linux\n\n```bash\n# Update system\nsudo pacman -Syu\n\n# Install Python and development tools\nsudo pacman -S python python-pip python-virtualenv \\\n               base-devel git curl wget \\\n               systemd libffi openssl \\\n               bluez-libs\n\n# Create dedicated homeassistant user\nsudo useradd -r -s /bin/bash -d /opt/homeassistant homeassistant\n\n# Create installation directory\nsudo mkdir -p /opt/homeassistant\nsudo chown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit\n```\n\n### Alpine Linux\n\n```bash\n# Update package index\napk update\n\n# Install Python and development tools\napk add --no-cache python3 py3-pip python3-dev \\\n                   build-base git curl wget \\\n                   systemd-dev libffi-dev openssl-dev \\\n                   bluez-dev linux-headers\n\n# Create dedicated homeassistant user\nadduser -D -s /bin/ash -h /opt/homeassistant homeassistant\n\n# Create installation directory\nmkdir -p /opt/homeassistant\nchown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsu - homeassistant\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit\n```\n\n### openSUSE/SLES\n\n```bash\n# Install Python and development tools\nsudo zypper install -y python311 python311-pip python311-devel python311-virtualenv \\\n                        gcc gcc-c++ make git curl wget \\\n                        systemd-devel libffi-devel libopenssl-devel \\\n                        bluez-devel\n\n# Create dedicated homeassistant user\nsudo useradd -r -s /bin/bash -d /opt/homeassistant homeassistant\n\n# Create installation directory\nsudo mkdir -p /opt/homeassistant\nsudo chown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3.11 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit\n```\n\n### macOS\n\n```bash\n# Install Homebrew if not already installed\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n# Install Python 3.11\nbrew install python@3.11\n\n# Create dedicated homeassistant user directory\nsudo mkdir -p /opt/homeassistant\nsudo chown $(whoami):staff /opt/homeassistant\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3.11 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n```\n\n## Initial Configuration\n\n### First-Run Setup\n\n```bash\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Activate virtual environment\ncd /opt/homeassistant\nsource bin/activate\n\n# Start Home Assistant for initial setup (will create config directory)\nhass --config /opt/homeassistant/.homeassistant\n\n# Home Assistant will be available at http://localhost:8123\n# Complete the onboarding process in your web browser\n# Press Ctrl+C to stop after initial setup\n```\n\n### Default Credentials\n**WARNING:** Home Assistant does not have default credentials. You must create an admin account during the onboarding process.\n\n### Configuration File Locations\n\n```bash\n# Main configuration directory\n/opt/homeassistant/.homeassistant/\n\n# Main configuration file\n/opt/homeassistant/.homeassistant/configuration.yaml\n\n# Secrets file (for passwords and API keys)\n/opt/homeassistant/.homeassistant/secrets.yaml\n\n# Automations\n/opt/homeassistant/.homeassistant/automations.yaml\n\n# Scripts\n/opt/homeassistant/.homeassistant/scripts.yaml\n\n# Scenes\n/opt/homeassistant/.homeassistant/scenes.yaml\n\n# Custom components\n/opt/homeassistant/.homeassistant/custom_components/\n\n# Log file\n/opt/homeassistant/.homeassistant/home-assistant.log\n```\n\n### Essential Settings to Change\n\n```yaml\n# Edit /opt/homeassistant/.homeassistant/configuration.yaml\nhomeassistant:\n  name: Home\n  latitude: 32.87336  # Change to your location\n  longitude: 117.22743  # Change to your location\n  elevation: 430  # Change to your elevation\n  unit_system: metric  # or imperial\n  time_zone: America/Los_Angeles  # Change to your time zone\n  \n# Enable advanced mode and disable introduction\nsystem_health:\nfrontend:\n  themes: !include_dir_merge_named themes\n\n# Enable logging\nlogger:\n  default: info\n  logs:\n    homeassistant.core: debug\n\n# Enable history and recorder\nhistory:\nrecorder:\n  purge_keep_days: 7\n\n# HTTP configuration\nhttp:\n  server_port: 8123\n  ssl_certificate: /path/to/certificate.pem  # Optional\n  ssl_key: /path/to/private.key  # Optional\n```\n\n## Service Management\n\n### systemd (RHEL, Debian, Arch, SUSE)\n\n```bash\n# Create systemd service file\nsudo tee /etc/systemd/system/homeassistant.service > /dev/null <<EOF\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nType=simple\nUser=homeassistant\nGroup=homeassistant\nWorkingDirectory=/opt/homeassistant\nExecStart=/opt/homeassistant/bin/hass -c \"/opt/homeassistant/.homeassistant\"\nRestartForceExitStatus=100\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Reload systemd and enable service\nsudo systemctl daemon-reload\nsudo systemctl enable homeassistant.service\n\n# Service management commands\nsudo systemctl start homeassistant    # Start service\nsudo systemctl stop homeassistant     # Stop service\nsudo systemctl restart homeassistant  # Restart service\nsudo systemctl status homeassistant   # Check status\nsudo journalctl -u homeassistant -f   # View logs\n```\n\n### OpenRC (Alpine)\n\n```bash\n# Create OpenRC service file\nsudo tee /etc/init.d/homeassistant > /dev/null <<'EOF'\n#!/sbin/openrc-run\n\nname=\"Home Assistant\"\ndescription=\"Open source home automation\"\n\nuser=\"homeassistant\"\ngroup=\"homeassistant\"\npidfile=\"/var/run/homeassistant.pid\"\ncommand=\"/opt/homeassistant/bin/hass\"\ncommand_args=\"-c /opt/homeassistant/.homeassistant --pid-file ${pidfile} --daemon\"\ncommand_background=\"yes\"\n\ndepend() {\n    need net\n    after firewall\n}\nEOF\n\n# Make executable and enable\nsudo chmod +x /etc/init.d/homeassistant\nsudo rc-update add homeassistant\n\n# Service management commands\nsudo service homeassistant start    # Start service\nsudo service homeassistant stop     # Stop service\nsudo service homeassistant restart  # Restart service\nsudo service homeassistant status   # Check status\n```\n\n### launchd (macOS)\n\n```bash\n# Create launchd plist file\nsudo tee /Library/LaunchDaemons/io.homeassistant.plist > /dev/null <<EOF\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>Label</key>\n    <string>io.homeassistant</string>\n    <key>ProgramArguments</key>\n    <array>\n        <string>/opt/homeassistant/bin/hass</string>\n        <string>-c</string>\n        <string>/opt/homeassistant/.homeassistant</string>\n    </array>\n    <key>RunAtLoad</key>\n    <true/>\n    <key>KeepAlive</key>\n    <true/>\n    <key>StandardErrorPath</key>\n    <string>/opt/homeassistant/homeassistant.log</string>\n    <key>StandardOutPath</key>\n    <string>/opt/homeassistant/homeassistant.log</string>\n</dict>\n</plist>\nEOF\n\n# Load and start service\nsudo launchctl load /Library/LaunchDaemons/io.homeassistant.plist\nsudo launchctl start io.homeassistant\n\n# Service management commands\nsudo launchctl start io.homeassistant   # Start service\nsudo launchctl stop io.homeassistant    # Stop service\nsudo launchctl unload /Library/LaunchDaemons/io.homeassistant.plist  # Disable\n```\n\n## Advanced Configuration\n\n### Configuration File Syntax\n\nHome Assistant uses YAML for configuration. Key concepts:\n\n```yaml\n# Basic syntax\nkey: value\nkey_with_list:\n  - item1\n  - item2\nkey_with_dict:\n  subkey: value\n\n# Including other files\ngroup: !include groups.yaml\nautomation: !include_dir_list automations/\nscript: !include_dir_named scripts/\n\n# Using secrets\napi_key: !secret weather_api_key\n```\n\n### Environment Variables\n\n```bash\n# Set environment variables for Home Assistant\nexport HASS_SERVER_HOST=0.0.0.0\nexport HASS_SERVER_PORT=8123\n\n# Add to ~/.bashrc or systemd service file\nEnvironment=HASS_SERVER_HOST=0.0.0.0\nEnvironment=HASS_SERVER_PORT=8123\n```\n\n### Command-line Parameters\n\n```bash\n# Common command-line options\nhass -c /path/to/config          # Specify config directory\nhass --script check_config       # Check configuration\nhass --script ensure_config      # Create default config\nhass --open-ui                   # Open web interface after start\nhass --debug                     # Enable debug logging\nhass --daemon                    # Run as daemon\nhass --pid-file /var/run/hass.pid # Specify PID file\n```\n\n### Integration with Other Services\n\n#### MQTT Integration\n\n```yaml\n# Add to configuration.yaml\nmqtt:\n  broker: localhost\n  port: 1883\n  username: !secret mqtt_username\n  password: !secret mqtt_password\n  discovery: true\n  discovery_prefix: homeassistant\n```\n\n#### Zigbee Integration (zigbee2mqtt)\n\n```yaml\n# Add to configuration.yaml\nmqtt:\n  broker: localhost\n  port: 1883\n  discovery: true\n  discovery_prefix: homeassistant\n\n# zigbee2mqtt will automatically create devices\n```\n\n#### Z-Wave Integration\n\n```yaml\n# Add to configuration.yaml (for Z-Wave JS)\nzwave_js:\n  url: \"ws://localhost:3000\"\n```\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\n# /etc/nginx/sites-available/homeassistant\nserver {\n    listen 80;\n    server_name homeassistant.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name homeassistant.example.com;\n\n    ssl_certificate /etc/ssl/certs/homeassistant.crt;\n    ssl_certificate_key /etc/ssl/private/homeassistant.key;\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;\n\n    location / {\n        proxy_pass http://127.0.0.1:8123;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_buffering off;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n# /etc/apache2/sites-available/homeassistant.conf\n<VirtualHost *:80>\n    ServerName homeassistant.example.com\n    Redirect permanent / https://homeassistant.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName homeassistant.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/homeassistant.crt\n    SSLCertificateKeyFile /etc/ssl/private/homeassistant.key\n    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1\n    SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384\n\n    ProxyPreserveHost On\n    ProxyRequests Off\n    ProxyPass / http://127.0.0.1:8123/\n    ProxyPassReverse / http://127.0.0.1:8123/\n    \n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) \"ws://127.0.0.1:8123/$1\" [P,L]\n</VirtualHost>\n```\n\n### Caddy Configuration\n\n```caddy\n# /etc/caddy/Caddyfile\nhomeassistant.example.com {\n    reverse_proxy 127.0.0.1:8123\n    \n    header {\n        Strict-Transport-Security max-age=31536000;\n        X-Content-Type-Options nosniff\n        X-Frame-Options DENY\n        Referrer-Policy no-referrer-when-downgrade\n    }\n}\n```\n\n### Traefik Configuration\n\n```yaml\n# docker-compose.yml for Traefik\nversion: '3.7'\n\nservices:\n  traefik:\n    image: traefik:v2.10\n    command:\n      - --api.dashboard=true\n      - --entrypoints.web.address=:80\n      - --entrypoints.websecure.address=:443\n      - --providers.file.filename=/etc/traefik/dynamic.yml\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./traefik.yml:/etc/traefik/dynamic.yml:ro\n      - ./certs:/certs:ro\n\n# traefik.yml\nhttp:\n  routers:\n    homeassistant:\n      rule: \"Host(`homeassistant.example.com`)\"\n      service: homeassistant\n      tls: {}\n  \n  services:\n    homeassistant:\n      loadBalancer:\n        servers:\n          - url: \"http://127.0.0.1:8123\"\n```\n\n## Security Configuration\n\n### Authentication Setup\n\n```yaml\n# Add to configuration.yaml\nhomeassistant:\n  auth_providers:\n    - type: homeassistant\n    - type: trusted_networks\n      trusted_networks:\n        - 192.168.1.0/24\n        - 127.0.0.1\n      trusted_users:\n        192.168.1.0/24:\n          - user_id_here\n```\n\n### SSL/TLS Configuration\n\n```yaml\n# Add to configuration.yaml\nhttp:\n  ssl_certificate: /etc/ssl/certs/homeassistant.crt\n  ssl_key: /etc/ssl/private/homeassistant.key\n  ssl_profile: modern\n  server_port: 8123\n  cors_allowed_origins:\n    - https://cast.home-assistant.io\n```\n\n### Firewall Rules\n\n#### firewalld (RHEL/CentOS/Fedora)\n\n```bash\n# Allow Home Assistant port\nsudo firewall-cmd --permanent --add-port=8123/tcp\nsudo firewall-cmd --reload\n\n# Create custom service\nsudo tee /etc/firewalld/services/homeassistant.xml > /dev/null <<EOF\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<service>\n  <short>Home Assistant</short>\n  <description>Home Assistant automation platform</description>\n  <port protocol=\"tcp\" port=\"8123\"/>\n  <port protocol=\"udp\" port=\"5353\"/>\n</service>\nEOF\n\nsudo firewall-cmd --reload\nsudo firewall-cmd --permanent --add-service=homeassistant\nsudo firewall-cmd --reload\n```\n\n#### ufw (Ubuntu/Debian)\n\n```bash\n# Allow Home Assistant ports\nsudo ufw allow 8123/tcp comment 'Home Assistant'\nsudo ufw allow 5353/udp comment 'mDNS'\n\n# Enable firewall\nsudo ufw enable\n```\n\n#### iptables\n\n```bash\n# Add rules for Home Assistant\nsudo iptables -A INPUT -p tcp --dport 8123 -j ACCEPT\nsudo iptables -A INPUT -p udp --dport 5353 -j ACCEPT\n\n# Save rules (command varies by distribution)\nsudo iptables-save > /etc/iptables/rules.v4  # Debian/Ubuntu\nsudo service iptables save  # RHEL/CentOS\n```\n\n### SELinux Policies (RHEL/CentOS/Fedora)\n\n```bash\n# Allow Home Assistant to bind to port 8123\nsudo setsebool -P httpd_can_network_connect 1\n\n# Create custom SELinux policy if needed\nsudo ausearch -c 'hass' --raw | audit2allow -M homeassistant\nsudo semodule -i homeassistant.pp\n```\n\n### Security Best Practices\n\n```yaml\n# Add to configuration.yaml\nhttp:\n  use_x_forwarded_for: true\n  trusted_proxies:\n    - 127.0.0.1\n    - ::1\n  ip_ban_enabled: true\n  login_attempts_threshold: 5\n\n# Enable additional security features\nlogger:\n  default: warning\n  logs:\n    homeassistant.components.http.ban: warning\n\n# Disable unnecessary integrations\ndefault_config:\n```\n\n### API Key/Token Management\n\n```yaml\n# Create long-lived access tokens in Home Assistant UI\n# Navigate to Profile -> Long-Lived Access Tokens\n\n# Use in external applications\nAuthorization: Bearer YOUR_LONG_LIVED_ACCESS_TOKEN\n```\n\n## Database Setup\n\n### SQLite (Default)\n\n```yaml\n# configuration.yaml - SQLite is default, no configuration needed\nrecorder:\n  db_url: sqlite:////opt/homeassistant/.homeassistant/home-assistant_v2.db\n  purge_keep_days: 7\n  auto_purge: true\n```\n\n### PostgreSQL\n\n```bash\n# Install PostgreSQL\nsudo dnf install -y postgresql postgresql-server  # RHEL/CentOS\nsudo apt install -y postgresql postgresql-contrib  # Debian/Ubuntu\n\n# Initialize and start PostgreSQL\nsudo postgresql-setup --initdb  # RHEL/CentOS\nsudo systemctl enable --now postgresql\n\n# Create database and user\nsudo -u postgres psql <<EOF\nCREATE DATABASE homeassistant;\nCREATE USER hass WITH PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE homeassistant TO hass;\n\\q\nEOF\n```\n\n```yaml\n# configuration.yaml\nrecorder:\n  db_url: postgresql://hass:secure_password@localhost/homeassistant\n  purge_keep_days: 7\n  auto_purge: true\n```\n\n### MySQL/MariaDB\n\n```bash\n# Install MariaDB\nsudo dnf install -y mariadb-server  # RHEL/CentOS\nsudo apt install -y mariadb-server  # Debian/Ubuntu\n\n# Start and secure MariaDB\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create database and user\nsudo mysql <<EOF\nCREATE DATABASE homeassistant CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\nCREATE USER 'hass'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON homeassistant.* TO 'hass'@'localhost';\nFLUSH PRIVILEGES;\nEOF\n```\n\n```yaml\n# configuration.yaml\nrecorder:\n  db_url: mysql://hass:secure_password@localhost/homeassistant?charset=utf8mb4\n  purge_keep_days: 7\n  auto_purge: true\n```\n\n## Performance Optimization\n\n### Resource Tuning\n\n```yaml\n# configuration.yaml\nrecorder:\n  purge_keep_days: 3  # Reduce database size\n  auto_purge: true\n  commit_interval: 1\n  exclude:\n    domains:\n      - automation\n      - updater\n    entity_globs:\n      - sensor.weather_*\n\n# Reduce logging\nlogger:\n  default: warning\n\n# Optimize frontend\nfrontend:\n  javascript_version: latest\n```\n\n### Caching Configuration\n\n```yaml\n# Enable caching for better performance\nhttp:\n  use_x_forwarded_for: true\n  trusted_proxies:\n    - 127.0.0.1\n\n# Cache static files\nfrontend:\n  themes: !include_dir_merge_named themes\n  extra_module_url:\n    - /local/my-custom-card.js?v=1\n```\n\n### Memory Optimization for Raspberry Pi\n\n```bash\n# Increase swap file size\nsudo dphys-swapfile swapoff\nsudo sed -i 's/CONF_SWAPSIZE=100/CONF_SWAPSIZE=1024/' /etc/dphys-swapfile\nsudo dphys-swapfile setup\nsudo dphys-swapfile swapon\n\n# Add to /boot/config.txt\ngpu_mem=16\ndisable_overscan=1\n```\n\n### Scaling Options\n\n```yaml\n# Use multiple workers for better performance\n# Add to systemd service file\nExecStart=/opt/homeassistant/bin/hass -c \"/opt/homeassistant/.homeassistant\" --runner-threads 4\n\n# Distribute load with nginx\nupstream homeassistant {\n    least_conn;\n    server 127.0.0.1:8123;\n    server 127.0.0.1:8124;  # Additional instance\n}\n```\n\n## Monitoring\n\n### Built-in Health Checks\n\n```yaml\n# Add to configuration.yaml\nsystem_health:\n\n# Enable system monitor\nsensor:\n  - platform: systemmonitor\n    resources:\n      - type: disk_use_percent\n        arg: /opt/homeassistant\n      - type: memory_use_percent\n      - type: processor_use\n      - type: last_boot\n```\n\n### Log Locations and Configuration\n\n```yaml\n# configuration.yaml\nlogger:\n  default: info\n  logs:\n    homeassistant.core: debug\n    homeassistant.components.mqtt: debug\n    homeassistant.components.zwave_js: debug\n\n# Log files location\n# /opt/homeassistant/.homeassistant/home-assistant.log\n```\n\n### Metrics Endpoints\n\n```yaml\n# Enable Prometheus metrics\nprometheus:\n  namespace: hass\n\n# Expose metrics on port 8123/api/prometheus\n# Access with: curl http://localhost:8123/api/prometheus\n```\n\n### Integration with Monitoring Systems\n\n#### Grafana Dashboard\n\n```bash\n# Install Grafana\nsudo dnf install -y grafana  # RHEL/CentOS\nsudo apt install -y grafana  # Debian/Ubuntu\n\n# Configure Prometheus data source\n# Import Home Assistant dashboard: https://grafana.com/grafana/dashboards/11693\n```\n\n#### Nagios/Icinga\n\n```bash\n# Check Home Assistant API\n/usr/lib/nagios/plugins/check_http -H localhost -p 8123 -u /api/ -e 401\n```\n\n### Alert Configuration\n\n```yaml\n# Add to configuration.yaml\nnotify:\n  - name: email\n    platform: smtp\n    server: smtp.gmail.com\n    port: 587\n    sender: alerts@example.com\n    username: !secret email_username\n    password: !secret email_password\n    recipient: admin@example.com\n\nautomation:\n  - alias: \"System Health Alert\"\n    trigger:\n      platform: numeric_state\n      entity_id: sensor.processor_use\n      above: 90\n    action:\n      service: notify.email\n      data:\n        title: \"High CPU Usage\"\n        message: \"CPU usage is {{ states('sensor.processor_use') }}%\"\n```\n\n## Backup and Restore\n\n### What to Backup\n\nEssential files and directories:\n- `/opt/homeassistant/.homeassistant/` (entire config directory)\n- SSL certificates (if used)\n- Database files (if using external database)\n- Custom components and themes\n\n### Backup Scripts\n\n```bash\n#!/bin/bash\n# /usr/local/bin/homeassistant-backup.sh\n\nBACKUP_DIR=\"/backup/homeassistant\"\nCONFIG_DIR=\"/opt/homeassistant/.homeassistant\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\n# Create backup directory\nmkdir -p \"$BACKUP_DIR\"\n\n# Stop Home Assistant\nsudo systemctl stop homeassistant\n\n# Create backup\ntar -czf \"$BACKUP_DIR/homeassistant_backup_$DATE.tar.gz\" \\\n    -C \"/opt/homeassistant\" \".homeassistant\"\n\n# Start Home Assistant\nsudo systemctl start homeassistant\n\n# Keep only last 7 backups\nfind \"$BACKUP_DIR\" -name \"homeassistant_backup_*.tar.gz\" -mtime +7 -delete\n\necho \"Backup completed: homeassistant_backup_$DATE.tar.gz\"\n```\n\n### Restore Procedures\n\n```bash\n#!/bin/bash\n# Restore Home Assistant from backup\n\nBACKUP_FILE=\"/backup/homeassistant/homeassistant_backup_20250916_120000.tar.gz\"\nCONFIG_DIR=\"/opt/homeassistant/.homeassistant\"\n\n# Stop Home Assistant\nsudo systemctl stop homeassistant\n\n# Backup current config (safety)\nsudo mv \"$CONFIG_DIR\" \"${CONFIG_DIR}.$(date +%Y%m%d_%H%M%S)\"\n\n# Restore from backup\nsudo tar -xzf \"$BACKUP_FILE\" -C \"/opt/homeassistant\"\n\n# Fix permissions\nsudo chown -R homeassistant:homeassistant \"$CONFIG_DIR\"\n\n# Start Home Assistant\nsudo systemctl start homeassistant\n\necho \"Restore completed from $BACKUP_FILE\"\n```\n\n### Automated Backup Setup\n\n```bash\n# Add to crontab for automated daily backups\nsudo crontab -e\n\n# Add this line for daily backups at 2 AM\n0 2 * * * /usr/local/bin/homeassistant-backup.sh >> /var/log/homeassistant-backup.log 2>&1\n```\n\n### Testing Restore Procedures\n\n```bash\n# Test restore on separate system\n# 1. Install Home Assistant on test system\n# 2. Stop service\n# 3. Replace config with backup\n# 4. Start service and verify functionality\n# 5. Test automations and integrations\n\n# Verify backup integrity\ntar -tzf /backup/homeassistant/homeassistant_backup_latest.tar.gz | head -20\n```\n\n## Troubleshooting\n\n### Common Installation Issues\n\n**Python version conflicts:**\n```bash\n# Check Python version\npython3 --version\n# Should be 3.10 or later\n\n# If wrong version, install correct Python\nsudo dnf install python3.11  # RHEL/CentOS\nsudo apt install python3.11  # Debian/Ubuntu\n```\n\n**Missing development packages:**\n```bash\n# Install missing development tools\nsudo dnf groupinstall \"Development Tools\"  # RHEL/CentOS\nsudo apt install build-essential  # Debian/Ubuntu\n```\n\n**Permission errors during pip install:**\n```bash\n# Ensure you're in the virtual environment\nsource /opt/homeassistant/bin/activate\n# Check virtual environment is active\nwhich python\n# Should show: /opt/homeassistant/bin/python\n```\n\n### Service Startup Problems\n\n**Service fails to start:**\n```bash\n# Check service status\nsudo systemctl status homeassistant\n\n# Check logs\nsudo journalctl -u homeassistant -f\n\n# Common issues:\n# 1. Configuration errors\n# 2. Port already in use\n# 3. Permission problems\n```\n\n**Configuration validation:**\n```bash\n# Check configuration syntax\nsudo -u homeassistant -H -s\ncd /opt/homeassistant\nsource bin/activate\nhass --script check_config -c .homeassistant\n```\n\n**Port conflicts:**\n```bash\n# Check what's using port 8123\nsudo netstat -tlnp | grep 8123\nsudo lsof -i :8123\n\n# Kill conflicting process or change port in configuration.yaml\n```\n\n### Permission Errors\n\n**File permission issues:**\n```bash\n# Fix ownership\nsudo chown -R homeassistant:homeassistant /opt/homeassistant\n\n# Fix permissions\nsudo chmod -R 755 /opt/homeassistant\nsudo chmod -R 644 /opt/homeassistant/.homeassistant/*.yaml\n```\n\n**SELinux context issues (RHEL/CentOS):**\n```bash\n# Check SELinux status\nsestatus\n\n# Fix SELinux contexts\nsudo restorecon -Rv /opt/homeassistant\nsudo setsebool -P httpd_can_network_connect 1\n```\n\n### Network/Connectivity Issues\n\n**Web interface not accessible:**\n```bash\n# Check if service is running\nsudo systemctl status homeassistant\n\n# Check listening ports\nsudo netstat -tlnp | grep python\n\n# Check firewall\nsudo firewall-cmd --list-all  # RHEL/CentOS\nsudo ufw status  # Ubuntu/Debian\n```\n\n**mDNS discovery not working:**\n```bash\n# Install and start Avahi\nsudo dnf install avahi avahi-tools  # RHEL/CentOS\nsudo apt install avahi-daemon avahi-utils  # Debian/Ubuntu\nsudo systemctl enable --now avahi-daemon\n\n# Test mDNS\navahi-browse -r _http._tcp\n```\n\n### Debug Mode Activation\n\n```bash\n# Enable debug logging\n# Edit configuration.yaml\nlogger:\n  default: debug\n  logs:\n    homeassistant.core: debug\n    homeassistant.components: debug\n\n# Restart Home Assistant\nsudo systemctl restart homeassistant\n\n# Monitor logs\nsudo journalctl -u homeassistant -f\n```\n\n### Log Analysis\n\n```bash\n# Common log locations\ntail -f /opt/homeassistant/.homeassistant/home-assistant.log\n\n# Filter specific components\ngrep \"ERROR\" /opt/homeassistant/.homeassistant/home-assistant.log\ngrep \"WARNING\" /opt/homeassistant/.homeassistant/home-assistant.log\n\n# Check startup issues\nsudo journalctl -u homeassistant --since \"10 minutes ago\"\n```\n\n## Maintenance\n\n### Update Procedures\n\n**Update Home Assistant Core:**\n```bash\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\ncd /opt/homeassistant\nsource bin/activate\n\n# Update pip and Home Assistant\npython -m pip install --upgrade pip\npython -m pip install --upgrade homeassistant\n\n# Check for breaking changes before updating\n# Visit: https://www.home-assistant.io/blog/categories/release-notes/\n\n# Restart service\nsudo systemctl restart homeassistant\n```\n\n**Update Python dependencies:**\n```bash\n# Update all packages\npython -m pip list --outdated\npython -m pip install --upgrade package_name\n\n# Or update all at once (use with caution)\npython -m pip freeze | cut -d'=' -f1 | xargs python -m pip install --upgrade\n```\n\n### Version Upgrades\n\n**Major version upgrades:**\n```bash\n# Before upgrading, always backup\n/usr/local/bin/homeassistant-backup.sh\n\n# Check breaking changes\n# Visit release notes at: https://www.home-assistant.io/blog/\n\n# Perform upgrade\nsudo -u homeassistant -H -s\ncd /opt/homeassistant\nsource bin/activate\npython -m pip install --upgrade homeassistant\n\n# Check configuration after upgrade\nhass --script check_config -c .homeassistant\n\n# Restart service\nsudo systemctl restart homeassistant\n```\n\n### Migration Between Systems\n\n**Export configuration:**\n```bash\n# Create migration package\ntar -czf homeassistant_migration.tar.gz \\\n    -C /opt/homeassistant .homeassistant \\\n    --exclude=.homeassistant/home-assistant.log \\\n    --exclude=.homeassistant/home-assistant_v2.db\n\n# Copy SSL certificates if used\ntar -czf ssl_certs.tar.gz /etc/ssl/private/homeassistant.*\n```\n\n**Import on new system:**\n```bash\n# Install Home Assistant on new system\n# Stop service\nsudo systemctl stop homeassistant\n\n# Extract configuration\nsudo tar -xzf homeassistant_migration.tar.gz -C /opt/homeassistant\nsudo chown -R homeassistant:homeassistant /opt/homeassistant/.homeassistant\n\n# Update IP addresses and device paths in configuration\nsudo -u homeassistant nano /opt/homeassistant/.homeassistant/configuration.yaml\n\n# Start service\nsudo systemctl start homeassistant\n```\n\n### Cleanup Procedures\n\n**Database cleanup:**\n```bash\n# Enable database purging\n# Add to configuration.yaml\nrecorder:\n  purge_keep_days: 7\n  auto_purge: true\n\n# Manual purge\nsudo -u homeassistant -H -s\ncd /opt/homeassistant\nsource bin/activate\nhass --script purge_db --days 30\n```\n\n**Log rotation:**\n```bash\n# Configure logrotate\nsudo tee /etc/logrotate.d/homeassistant > /dev/null <<EOF\n/opt/homeassistant/.homeassistant/home-assistant.log {\n    daily\n    missingok\n    rotate 7\n    compress\n    notifempty\n    copytruncate\n    su homeassistant homeassistant\n}\nEOF\n```\n\n**Clear cache and temporary files:**\n```bash\n# Clear Home Assistant cache\nsudo -u homeassistant rm -rf /opt/homeassistant/.homeassistant/.cache\nsudo -u homeassistant rm -rf /opt/homeassistant/.homeassistant/deps\n\n# Clear pip cache\nsudo -u homeassistant python -m pip cache purge\n```\n\n## Integration Examples\n\n### MQTT Device Integration\n\n```yaml\n# configuration.yaml\nmqtt:\n  sensor:\n    - name: \"Temperature Sensor\"\n      state_topic: \"home/livingroom/temperature\"\n      unit_of_measurement: \"°C\"\n      device_class: temperature\n    \n    - name: \"Humidity Sensor\"\n      state_topic: \"home/livingroom/humidity\"\n      unit_of_measurement: \"%\"\n      device_class: humidity\n\n  switch:\n    - name: \"Living Room Light\"\n      state_topic: \"home/livingroom/light/state\"\n      command_topic: \"home/livingroom/light/set\"\n      payload_on: \"ON\"\n      payload_off: \"OFF\"\n```\n\n### REST API Usage Examples\n\n```bash\n# Get states of all entities\ncurl -X GET \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  http://localhost:8123/api/states\n\n# Control a switch\ncurl -X POST \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"entity_id\": \"switch.living_room_light\"}' \\\n  http://localhost:8123/api/services/switch/turn_on\n\n# Get specific entity state\ncurl -X GET \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  http://localhost:8123/api/states/sensor.temperature\n```\n\n### Python Client Library Example\n\n```python\n# pip install homeassistant-api\nimport homeassistant.remote as remote\n\n# Connect to Home Assistant\napi = remote.API('localhost', 'YOUR_TOKEN', 8123)\n\n# Get all states\nstates = remote.get_states(api)\nfor state in states:\n    print(f\"{state.entity_id}: {state.state}\")\n\n# Turn on a light\nremote.call_service(api, 'switch', 'turn_on', {'entity_id': 'switch.living_room_light'})\n\n# Get state of specific entity\nstate = remote.get_state(api, 'sensor.temperature')\nprint(f\"Temperature: {state.state}°C\")\n```\n\n### Webhook Configuration\n\n```yaml\n# configuration.yaml\nautomation:\n  - alias: \"Webhook Triggered Action\"\n    trigger:\n      platform: webhook\n      webhook_id: your_webhook_id\n    action:\n      service: notify.mobile_app_your_phone\n      data:\n        message: \"Webhook triggered with data: {{ trigger.json }}\"\n\n# URL to trigger webhook:\n# POST http://localhost:8123/api/webhook/your_webhook_id\n```\n\n### Zigbee2MQTT Integration\n\n```bash\n# Install Mosquitto MQTT broker\nsudo dnf install mosquitto mosquitto-clients  # RHEL/CentOS\nsudo apt install mosquitto mosquitto-clients  # Debian/Ubuntu\n\n# Start MQTT broker\nsudo systemctl enable --now mosquitto\n\n# Install Node.js and npm\ncurl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -\nsudo dnf install -y nodejs\n\n# Install Zigbee2MQTT\nsudo npm install -g zigbee2mqtt\n\n# Configure Zigbee2MQTT\nsudo mkdir -p /opt/zigbee2mqtt\nsudo tee /opt/zigbee2mqtt/configuration.yaml > /dev/null <<EOF\nhomeassistant: true\npermit_join: false\nmqtt:\n  base_topic: zigbee2mqtt\n  server: 'mqtt://localhost'\nserial:\n  port: /dev/ttyUSB0  # Adjust to your Zigbee dongle\nadvanced:\n  network_key: GENERATE\n  pan_id: GENERATE\nEOF\n```\n\n## Additional Resources\n\n- [Official Home Assistant Documentation](https://www.home-assistant.io/docs/)\n- [Home Assistant GitHub Repository](https://github.com/home-assistant/core)\n- [Home Assistant Community Forum](https://community.home-assistant.io/)\n- [Home Assistant Discord](https://discord.gg/c5DvZ4e)\n- [Home Assistant YouTube Channel](https://www.youtube.com/c/HomeAssistant)\n- [Awesome Home Assistant](https://github.com/frenck/awesome-home-assistant)\n- [HACS (Home Assistant Community Store)](https://hacs.xyz/)\n- [ESPHome Documentation](https://esphome.io/)\n- [Zigbee2MQTT Documentation](https://www.zigbee2mqtt.io/)\n- [Z-Wave JS Documentation](https://zwave-js.github.io/node-zwave-js/)\n- [Home Assistant Blueprints Exchange](https://community.home-assistant.io/c/blueprints-exchange/)\n- [Home Assistant Configuration Examples](https://github.com/home-assistant/home-assistant.io/tree/current/source/_cookbook)\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.","readmeHtml":"<p class=\"mobile-paragraph\">Home Assistant is a free and open-source home automation platform that runs on Python. It puts local control and privacy first, serving as a FOSS alternative to proprietary smart home platforms like Google Home, Amazon Alexa, Apple HomeKit, or Samsung SmartThings. Home Assistant supports over 2000 integrations and protocols for controlling smart home devices locally without requiring cloud connectivity.</p>\n<h2 id=\"prerequisites\" class=\"mobile-header\">Prerequisites</h2>\n<h3 id=\"hardware-requirements\" class=\"mobile-header\">Hardware Requirements</h3>\n<li class=\"mobile-list-item\"><strong>CPU</strong>: Dual-core ARM or x86 processor (1.5+ GHz recommended)</li>\n<li class=\"mobile-list-item\"><strong>RAM</strong>: 2 GB minimum (4 GB recommended for production)</li>\n<li class=\"mobile-list-item\"><strong>Storage</strong>: 32 GB minimum (64 GB+ recommended)</li>\n<li class=\"mobile-list-item\"><strong>Network</strong>: Ethernet or WiFi connectivity</li>\n<li class=\"mobile-list-item\"><strong>USB Ports</strong>: For Z-Wave/Zigbee dongles (if using)</li>\n<h3 id=\"operating-system-requirements\" class=\"mobile-header\">Operating System Requirements</h3>\n<li class=\"mobile-list-item\">RHEL 8/9, CentOS Stream 8/9, Rocky Linux 8/9, AlmaLinux 8/9, Fedora 37+</li>\n<li class=\"mobile-list-item\">Debian 11/12, Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling), Manjaro</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+, Tumbleweed, SLES 15 SP5+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later)</li>\n<h3 id=\"network-requirements\" class=\"mobile-header\">Network Requirements</h3>\n<li class=\"mobile-list-item\"><strong>HTTP</strong>: Port 8123 (default web interface)</li>\n<li class=\"mobile-list-item\"><strong>HTTPS</strong>: Port 8123 with TLS (recommended)</li>\n<li class=\"mobile-list-item\"><strong>mDNS</strong>: Port 5353 UDP (for device discovery)</li>\n<li class=\"mobile-list-item\"><strong>MQTT</strong>: Port 1883/8883 (if using MQTT broker)</li>\n<li class=\"mobile-list-item\"><strong>SSH</strong>: Port 22 (for remote management)</li>\n<h3 id=\"dependencies\" class=\"mobile-header\">Dependencies</h3>\n<li class=\"mobile-list-item\"><strong>Python</strong>: 3.10 or later (3.11+ recommended)</li>\n<li class=\"mobile-list-item\"><strong>pip</strong>: Python package manager</li>\n<li class=\"mobile-list-item\"><strong>Git</strong>: For component updates</li>\n<li class=\"mobile-list-item\"><strong>Build tools</strong>: For compiling native extensions</li>\n<li class=\"mobile-list-item\"><strong>MQTT Broker</strong>: Mosquitto (optional but recommended)</li>\n<h3 id=\"required-system-access\" class=\"mobile-header\">Required System Access</h3>\n<li class=\"mobile-list-item\"><strong>Root/sudo</strong>: Required for installation and service setup</li>\n<li class=\"mobile-list-item\"><strong>Dedicated user</strong>: homeassistant user account (created during setup)</li>\n<li class=\"mobile-list-item\"><strong>Hardware access</strong>: USB devices for Z-Wave/Zigbee dongles</li>\n<h3 id=\"domaindns-requirements-optional\" class=\"mobile-header\">Domain/DNS Requirements (Optional)</h3>\n<li class=\"mobile-list-item\">Domain name for remote access</li>\n<li class=\"mobile-list-item\">Dynamic DNS service (if using residential internet)</li>\n<li class=\"mobile-list-item\">Valid SSL certificate (Let's Encrypt recommended)</li>\n<h2 id=\"installation\" class=\"mobile-header\">Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<p class=\"mobile-paragraph\">#### Method 1: Core Installation (Recommended)</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository for additional packages\nsudo dnf install -y epel-release\n\n# Install Python 3.11 and development tools\nsudo dnf install -y python3.11 python3.11-pip python3.11-devel python3.11-venv \\\n                    gcc gcc-c++ make git curl wget \\\n                    systemd-devel libffi-devel openssl-devel \\\n                    bluez-libs-devel\n\n# Create dedicated homeassistant user\nsudo useradd -r -s /bin/bash -d /opt/homeassistant homeassistant\n\n# Create installation directory\nsudo mkdir -p /opt/homeassistant\nsudo chown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3.11 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Method 2: Supervised Installation</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install Docker (required for Supervised)\nsudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo dnf install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\n# Start and enable Docker\nsudo systemctl enable --now docker\n\n# Install additional dependencies\nsudo dnf install -y curl jq apparmor-utils systemd-journal-remote\n\n# Download and install Home Assistant Supervised\ncurl -Lo installer.sh https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.sh\nsudo bash installer.sh --machine qemux86-64</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<p class=\"mobile-paragraph\">#### Method 1: Core Installation (Recommended)</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package list\nsudo apt update\n\n# Install Python 3.11 and development tools\nsudo apt install -y python3.11 python3.11-pip python3.11-dev python3.11-venv \\\n                    build-essential git curl wget \\\n                    libsystemd-dev libffi-dev libssl-dev \\\n                    bluetooth libbluetooth-dev\n\n# Create dedicated homeassistant user\nsudo useradd -r -s /bin/bash -d /opt/homeassistant homeassistant\n\n# Create installation directory\nsudo mkdir -p /opt/homeassistant\nsudo chown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3.11 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Method 2: Supervised Installation</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install Docker\nsudo apt update\nsudo apt install -y ca-certificates curl gnupg lsb-release\n\n# Add Docker GPG key\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n\n# Add Docker repository\necho &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\n# Install Docker\nsudo apt update\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\n# Install additional dependencies\nsudo apt install -y jq curl apparmor systemd-journal-remote\n\n# Download and install Home Assistant Supervised\ncurl -Lo installer.sh https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.sh\nsudo bash installer.sh --machine qemux86-64</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update system\nsudo pacman -Syu\n\n# Install Python and development tools\nsudo pacman -S python python-pip python-virtualenv \\\n               base-devel git curl wget \\\n               systemd libffi openssl \\\n               bluez-libs\n\n# Create dedicated homeassistant user\nsudo useradd -r -s /bin/bash -d /opt/homeassistant homeassistant\n\n# Create installation directory\nsudo mkdir -p /opt/homeassistant\nsudo chown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\napk update\n\n# Install Python and development tools\napk add --no-cache python3 py3-pip python3-dev \\\n                   build-base git curl wget \\\n                   systemd-dev libffi-dev openssl-dev \\\n                   bluez-dev linux-headers\n\n# Create dedicated homeassistant user\nadduser -D -s /bin/ash -h /opt/homeassistant homeassistant\n\n# Create installation directory\nmkdir -p /opt/homeassistant\nchown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsu - homeassistant\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install Python and development tools\nsudo zypper install -y python311 python311-pip python311-devel python311-virtualenv \\\n                        gcc gcc-c++ make git curl wget \\\n                        systemd-devel libffi-devel libopenssl-devel \\\n                        bluez-devel\n\n# Create dedicated homeassistant user\nsudo useradd -r -s /bin/bash -d /opt/homeassistant homeassistant\n\n# Create installation directory\nsudo mkdir -p /opt/homeassistant\nsudo chown homeassistant:homeassistant /opt/homeassistant\n\n# Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3.11 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant\n\n# Exit homeassistant user session\nexit</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install Homebrew if not already installed\n/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;\n\n# Install Python 3.11\nbrew install python@3.11\n\n# Create dedicated homeassistant user directory\nsudo mkdir -p /opt/homeassistant\nsudo chown $(whoami):staff /opt/homeassistant\n\n# Create and activate virtual environment\ncd /opt/homeassistant\npython3.11 -m venv .\nsource bin/activate\n\n# Upgrade pip and install wheel\npython -m pip install --upgrade pip wheel\n\n# Install Home Assistant\npython -m pip install homeassistant</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"first-run-setup\" class=\"mobile-header\">First-Run Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Switch to homeassistant user\nsudo -u homeassistant -H -s\n\n# Activate virtual environment\ncd /opt/homeassistant\nsource bin/activate\n\n# Start Home Assistant for initial setup (will create config directory)\nhass --config /opt/homeassistant/.homeassistant\n\n# Home Assistant will be available at http://localhost:8123\n# Complete the onboarding process in your web browser\n# Press Ctrl+C to stop after initial setup</code></pre>\n      </div>\n    </div>\n<h3 id=\"default-credentials\" class=\"mobile-header\">Default Credentials</h3>\n<p class=\"mobile-paragraph\"><strong>WARNING:</strong> Home Assistant does not have default credentials. You must create an admin account during the onboarding process.</p>\n<h3 id=\"configuration-file-locations\" class=\"mobile-header\">Configuration File Locations</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Main configuration directory\n/opt/homeassistant/.homeassistant/\n\n# Main configuration file\n/opt/homeassistant/.homeassistant/configuration.yaml\n\n# Secrets file (for passwords and API keys)\n/opt/homeassistant/.homeassistant/secrets.yaml\n\n# Automations\n/opt/homeassistant/.homeassistant/automations.yaml\n\n# Scripts\n/opt/homeassistant/.homeassistant/scripts.yaml\n\n# Scenes\n/opt/homeassistant/.homeassistant/scenes.yaml\n\n# Custom components\n/opt/homeassistant/.homeassistant/custom_components/\n\n# Log file\n/opt/homeassistant/.homeassistant/home-assistant.log</code></pre>\n      </div>\n    </div>\n<h3 id=\"essential-settings-to-change\" class=\"mobile-header\">Essential Settings to Change</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Edit /opt/homeassistant/.homeassistant/configuration.yaml\nhomeassistant:\n  name: Home\n  latitude: 32.87336  # Change to your location\n  longitude: 117.22743  # Change to your location\n  elevation: 430  # Change to your elevation\n  unit_system: metric  # or imperial\n  time_zone: America/Los_Angeles  # Change to your time zone\n  \n# Enable advanced mode and disable introduction\nsystem_health:\nfrontend:\n  themes: !include_dir_merge_named themes\n\n# Enable logging\nlogger:\n  default: info\n  logs:\n    homeassistant.core: debug\n\n# Enable history and recorder\nhistory:\nrecorder:\n  purge_keep_days: 7\n\n# HTTP configuration\nhttp:\n  server_port: 8123\n  ssl_certificate: /path/to/certificate.pem  # Optional\n  ssl_key: /path/to/private.key  # Optional</code></pre>\n      </div>\n    </div>\n<h2 id=\"service-management\" class=\"mobile-header\">Service Management</h2>\n<h3 id=\"systemd-rhel-debian-arch-suse\" class=\"mobile-header\">systemd (RHEL, Debian, Arch, SUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create systemd service file\nsudo tee /etc/systemd/system/homeassistant.service &gt; /dev/null &lt;&lt;EOF\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nType=simple\nUser=homeassistant\nGroup=homeassistant\nWorkingDirectory=/opt/homeassistant\nExecStart=/opt/homeassistant/bin/hass -c &quot;/opt/homeassistant/.homeassistant&quot;\nRestartForceExitStatus=100\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Reload systemd and enable service\nsudo systemctl daemon-reload\nsudo systemctl enable homeassistant.service\n\n# Service management commands\nsudo systemctl start homeassistant    # Start service\nsudo systemctl stop homeassistant     # Stop service\nsudo systemctl restart homeassistant  # Restart service\nsudo systemctl status homeassistant   # Check status\nsudo journalctl -u homeassistant -f   # View logs</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine\" class=\"mobile-header\">OpenRC (Alpine)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create OpenRC service file\nsudo tee /etc/init.d/homeassistant &gt; /dev/null &lt;&lt;&#039;EOF&#039;\n#!/sbin/openrc-run\n\nname=&quot;Home Assistant&quot;\ndescription=&quot;Open source home automation&quot;\n\nuser=&quot;homeassistant&quot;\ngroup=&quot;homeassistant&quot;\npidfile=&quot;/var/run/homeassistant.pid&quot;\ncommand=&quot;/opt/homeassistant/bin/hass&quot;\ncommand_args=&quot;-c /opt/homeassistant/.homeassistant --pid-file ${pidfile} --daemon&quot;\ncommand_background=&quot;yes&quot;\n\ndepend() {\n    need net\n    after firewall\n}\nEOF\n\n# Make executable and enable\nsudo chmod +x /etc/init.d/homeassistant\nsudo rc-update add homeassistant\n\n# Service management commands\nsudo service homeassistant start    # Start service\nsudo service homeassistant stop     # Stop service\nsudo service homeassistant restart  # Restart service\nsudo service homeassistant status   # Check status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create launchd plist file\nsudo tee /Library/LaunchDaemons/io.homeassistant.plist &gt; /dev/null &lt;&lt;EOF\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;\n&lt;plist version=&quot;1.0&quot;&gt;\n&lt;dict&gt;\n    &lt;key&gt;Label&lt;/key&gt;\n    &lt;string&gt;io.homeassistant&lt;/string&gt;\n    &lt;key&gt;ProgramArguments&lt;/key&gt;\n    &lt;array&gt;\n        &lt;string&gt;/opt/homeassistant/bin/hass&lt;/string&gt;\n        &lt;string&gt;-c&lt;/string&gt;\n        &lt;string&gt;/opt/homeassistant/.homeassistant&lt;/string&gt;\n    &lt;/array&gt;\n    &lt;key&gt;RunAtLoad&lt;/key&gt;\n    &lt;true/&gt;\n    &lt;key&gt;KeepAlive&lt;/key&gt;\n    &lt;true/&gt;\n    &lt;key&gt;StandardErrorPath&lt;/key&gt;\n    &lt;string&gt;/opt/homeassistant/homeassistant.log&lt;/string&gt;\n    &lt;key&gt;StandardOutPath&lt;/key&gt;\n    &lt;string&gt;/opt/homeassistant/homeassistant.log&lt;/string&gt;\n&lt;/dict&gt;\n&lt;/plist&gt;\nEOF\n\n# Load and start service\nsudo launchctl load /Library/LaunchDaemons/io.homeassistant.plist\nsudo launchctl start io.homeassistant\n\n# Service management commands\nsudo launchctl start io.homeassistant   # Start service\nsudo launchctl stop io.homeassistant    # Stop service\nsudo launchctl unload /Library/LaunchDaemons/io.homeassistant.plist  # Disable</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<h3 id=\"configuration-file-syntax\" class=\"mobile-header\">Configuration File Syntax</h3>\n<p class=\"mobile-paragraph\">Home Assistant uses YAML for configuration. Key concepts:</p>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Basic syntax\nkey: value\nkey_with_list:\n  - item1\n  - item2\nkey_with_dict:\n  subkey: value\n\n# Including other files\ngroup: !include groups.yaml\nautomation: !include_dir_list automations/\nscript: !include_dir_named scripts/\n\n# Using secrets\napi_key: !secret weather_api_key</code></pre>\n      </div>\n    </div>\n<h3 id=\"environment-variables\" class=\"mobile-header\">Environment Variables</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set environment variables for Home Assistant\nexport HASS_SERVER_HOST=0.0.0.0\nexport HASS_SERVER_PORT=8123\n\n# Add to ~/.bashrc or systemd service file\nEnvironment=HASS_SERVER_HOST=0.0.0.0\nEnvironment=HASS_SERVER_PORT=8123</code></pre>\n      </div>\n    </div>\n<h3 id=\"command-line-parameters\" class=\"mobile-header\">Command-line Parameters</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Common command-line options\nhass -c /path/to/config          # Specify config directory\nhass --script check_config       # Check configuration\nhass --script ensure_config      # Create default config\nhass --open-ui                   # Open web interface after start\nhass --debug                     # Enable debug logging\nhass --daemon                    # Run as daemon\nhass --pid-file /var/run/hass.pid # Specify PID file</code></pre>\n      </div>\n    </div>\n<h3 id=\"integration-with-other-services\" class=\"mobile-header\">Integration with Other Services</h3>\n<p class=\"mobile-paragraph\">#### MQTT Integration</p>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Add to configuration.yaml\nmqtt:\n  broker: localhost\n  port: 1883\n  username: !secret mqtt_username\n  password: !secret mqtt_password\n  discovery: true\n  discovery_prefix: homeassistant</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Zigbee Integration (zigbee2mqtt)</p>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Add to configuration.yaml\nmqtt:\n  broker: localhost\n  port: 1883\n  discovery: true\n  discovery_prefix: homeassistant\n\n# zigbee2mqtt will automatically create devices</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Z-Wave Integration</p>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Add to configuration.yaml (for Z-Wave JS)\nzwave_js:\n  url: &quot;ws://localhost:3000&quot;</code></pre>\n      </div>\n    </div>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\"># /etc/nginx/sites-available/homeassistant\nserver {\n    listen 80;\n    server_name homeassistant.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name homeassistant.example.com;\n\n    ssl_certificate /etc/ssl/certs/homeassistant.crt;\n    ssl_certificate_key /etc/ssl/private/homeassistant.key;\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;\n\n    location / {\n        proxy_pass http://127.0.0.1:8123;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n        proxy_buffering off;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\"># /etc/apache2/sites-available/homeassistant.conf\n&lt;VirtualHost *:80&gt;\n    ServerName homeassistant.example.com\n    Redirect permanent / https://homeassistant.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName homeassistant.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/homeassistant.crt\n    SSLCertificateKeyFile /etc/ssl/private/homeassistant.key\n    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1\n    SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384\n\n    ProxyPreserveHost On\n    ProxyRequests Off\n    ProxyPass / http://127.0.0.1:8123/\n    ProxyPassReverse / http://127.0.0.1:8123/\n    \n    RewriteEngine on\n    RewriteCond %{HTTP:Upgrade} websocket [NC]\n    RewriteCond %{HTTP:Connection} upgrade [NC]\n    RewriteRule ^/?(.*) &quot;ws://127.0.0.1:8123/$1&quot; [P,L]\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"caddy-configuration\" class=\"mobile-header\">Caddy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"caddy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">caddy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-caddy\"># /etc/caddy/Caddyfile\nhomeassistant.example.com {\n    reverse_proxy 127.0.0.1:8123\n    \n    header {\n        Strict-Transport-Security max-age=31536000;\n        X-Content-Type-Options nosniff\n        X-Frame-Options DENY\n        Referrer-Policy no-referrer-when-downgrade\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"traefik-configuration\" class=\"mobile-header\">Traefik Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># docker-compose.yml for Traefik\nversion: &#039;3.7&#039;\n\nservices:\n  traefik:\n    image: traefik:v2.10\n    command:\n      - --api.dashboard=true\n      - --entrypoints.web.address=:80\n      - --entrypoints.websecure.address=:443\n      - --providers.file.filename=/etc/traefik/dynamic.yml\n    ports:\n      - &quot;80:80&quot;\n      - &quot;443:443&quot;\n    volumes:\n      - ./traefik.yml:/etc/traefik/dynamic.yml:ro\n      - ./certs:/certs:ro\n\n# traefik.yml\nhttp:\n  routers:\n    homeassistant:\n      rule: &quot;Host(`homeassistant.example.com`)&quot;\n      service: homeassistant\n      tls: {}\n  \n  services:\n    homeassistant:\n      loadBalancer:\n        servers:\n          - url: &quot;http://127.0.0.1:8123&quot;</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"authentication-setup\" class=\"mobile-header\">Authentication Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Add to configuration.yaml\nhomeassistant:\n  auth_providers:\n    - type: homeassistant\n    - type: trusted_networks\n      trusted_networks:\n        - 192.168.1.0/24\n        - 127.0.0.1\n      trusted_users:\n        192.168.1.0/24:\n          - user_id_here</code></pre>\n      </div>\n    </div>\n<h3 id=\"ssltls-configuration\" class=\"mobile-header\">SSL/TLS Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Add to configuration.yaml\nhttp:\n  ssl_certificate: /etc/ssl/certs/homeassistant.crt\n  ssl_key: /etc/ssl/private/homeassistant.key\n  ssl_profile: modern\n  server_port: 8123\n  cors_allowed_origins:\n    - https://cast.home-assistant.io</code></pre>\n      </div>\n    </div>\n<h3 id=\"firewall-rules\" class=\"mobile-header\">Firewall Rules</h3>\n<p class=\"mobile-paragraph\">#### firewalld (RHEL/CentOS/Fedora)</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Allow Home Assistant port\nsudo firewall-cmd --permanent --add-port=8123/tcp\nsudo firewall-cmd --reload\n\n# Create custom service\nsudo tee /etc/firewalld/services/homeassistant.xml &gt; /dev/null &lt;&lt;EOF\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;service&gt;\n  &lt;short&gt;Home Assistant&lt;/short&gt;\n  &lt;description&gt;Home Assistant automation platform&lt;/description&gt;\n  &lt;port protocol=&quot;tcp&quot; port=&quot;8123&quot;/&gt;\n  &lt;port protocol=&quot;udp&quot; port=&quot;5353&quot;/&gt;\n&lt;/service&gt;\nEOF\n\nsudo firewall-cmd --reload\nsudo firewall-cmd --permanent --add-service=homeassistant\nsudo firewall-cmd --reload</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### ufw (Ubuntu/Debian)</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Allow Home Assistant ports\nsudo ufw allow 8123/tcp comment &#039;Home Assistant&#039;\nsudo ufw allow 5353/udp comment &#039;mDNS&#039;\n\n# Enable firewall\nsudo ufw enable</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### iptables</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Add rules for Home Assistant\nsudo iptables -A INPUT -p tcp --dport 8123 -j ACCEPT\nsudo iptables -A INPUT -p udp --dport 5353 -j ACCEPT\n\n# Save rules (command varies by distribution)\nsudo iptables-save &gt; /etc/iptables/rules.v4  # Debian/Ubuntu\nsudo service iptables save  # RHEL/CentOS</code></pre>\n      </div>\n    </div>\n<h3 id=\"selinux-policies-rhelcentosfedora\" class=\"mobile-header\">SELinux Policies (RHEL/CentOS/Fedora)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Allow Home Assistant to bind to port 8123\nsudo setsebool -P httpd_can_network_connect 1\n\n# Create custom SELinux policy if needed\nsudo ausearch -c &#039;hass&#039; --raw | audit2allow -M homeassistant\nsudo semodule -i homeassistant.pp</code></pre>\n      </div>\n    </div>\n<h3 id=\"security-best-practices\" class=\"mobile-header\">Security Best Practices</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Add to configuration.yaml\nhttp:\n  use_x_forwarded_for: true\n  trusted_proxies:\n    - 127.0.0.1\n    - ::1\n  ip_ban_enabled: true\n  login_attempts_threshold: 5\n\n# Enable additional security features\nlogger:\n  default: warning\n  logs:\n    homeassistant.components.http.ban: warning\n\n# Disable unnecessary integrations\ndefault_config:</code></pre>\n      </div>\n    </div>\n<h3 id=\"api-keytoken-management\" class=\"mobile-header\">API Key/Token Management</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Create long-lived access tokens in Home Assistant UI\n# Navigate to Profile -&gt; Long-Lived Access Tokens\n\n# Use in external applications\nAuthorization: Bearer YOUR_LONG_LIVED_ACCESS_TOKEN</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<h3 id=\"sqlite-default\" class=\"mobile-header\">SQLite (Default)</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># configuration.yaml - SQLite is default, no configuration needed\nrecorder:\n  db_url: sqlite:////opt/homeassistant/.homeassistant/home-assistant_v2.db\n  purge_keep_days: 7\n  auto_purge: true</code></pre>\n      </div>\n    </div>\n<h3 id=\"postgresql\" class=\"mobile-header\">PostgreSQL</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install PostgreSQL\nsudo dnf install -y postgresql postgresql-server  # RHEL/CentOS\nsudo apt install -y postgresql postgresql-contrib  # Debian/Ubuntu\n\n# Initialize and start PostgreSQL\nsudo postgresql-setup --initdb  # RHEL/CentOS\nsudo systemctl enable --now postgresql\n\n# Create database and user\nsudo -u postgres psql &lt;&lt;EOF\nCREATE DATABASE homeassistant;\nCREATE USER hass WITH PASSWORD &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON DATABASE homeassistant TO hass;\n\\q\nEOF</code></pre>\n      </div>\n    </div>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># configuration.yaml\nrecorder:\n  db_url: postgresql://hass:secure_password@localhost/homeassistant\n  purge_keep_days: 7\n  auto_purge: true</code></pre>\n      </div>\n    </div>\n<h3 id=\"mysqlmariadb\" class=\"mobile-header\">MySQL/MariaDB</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install MariaDB\nsudo dnf install -y mariadb-server  # RHEL/CentOS\nsudo apt install -y mariadb-server  # Debian/Ubuntu\n\n# Start and secure MariaDB\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create database and user\nsudo mysql &lt;&lt;EOF\nCREATE DATABASE homeassistant CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\nCREATE USER &#039;hass&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON homeassistant.* TO &#039;hass&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;\nEOF</code></pre>\n      </div>\n    </div>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># configuration.yaml\nrecorder:\n  db_url: mysql://hass:secure_password@localhost/homeassistant?charset=utf8mb4\n  purge_keep_days: 7\n  auto_purge: true</code></pre>\n      </div>\n    </div>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"resource-tuning\" class=\"mobile-header\">Resource Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># configuration.yaml\nrecorder:\n  purge_keep_days: 3  # Reduce database size\n  auto_purge: true\n  commit_interval: 1\n  exclude:\n    domains:\n      - automation\n      - updater\n    entity_globs:\n      - sensor.weather_*\n\n# Reduce logging\nlogger:\n  default: warning\n\n# Optimize frontend\nfrontend:\n  javascript_version: latest</code></pre>\n      </div>\n    </div>\n<h3 id=\"caching-configuration\" class=\"mobile-header\">Caching Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Enable caching for better performance\nhttp:\n  use_x_forwarded_for: true\n  trusted_proxies:\n    - 127.0.0.1\n\n# Cache static files\nfrontend:\n  themes: !include_dir_merge_named themes\n  extra_module_url:\n    - /local/my-custom-card.js?v=1</code></pre>\n      </div>\n    </div>\n<h3 id=\"memory-optimization-for-raspberry-pi\" class=\"mobile-header\">Memory Optimization for Raspberry Pi</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Increase swap file size\nsudo dphys-swapfile swapoff\nsudo sed -i &#039;s/CONF_SWAPSIZE=100/CONF_SWAPSIZE=1024/&#039; /etc/dphys-swapfile\nsudo dphys-swapfile setup\nsudo dphys-swapfile swapon\n\n# Add to /boot/config.txt\ngpu_mem=16\ndisable_overscan=1</code></pre>\n      </div>\n    </div>\n<h3 id=\"scaling-options\" class=\"mobile-header\">Scaling Options</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Use multiple workers for better performance\n# Add to systemd service file\nExecStart=/opt/homeassistant/bin/hass -c &quot;/opt/homeassistant/.homeassistant&quot; --runner-threads 4\n\n# Distribute load with nginx\nupstream homeassistant {\n    least_conn;\n    server 127.0.0.1:8123;\n    server 127.0.0.1:8124;  # Additional instance\n}</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"built-in-health-checks\" class=\"mobile-header\">Built-in Health Checks</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Add to configuration.yaml\nsystem_health:\n\n# Enable system monitor\nsensor:\n  - platform: systemmonitor\n    resources:\n      - type: disk_use_percent\n        arg: /opt/homeassistant\n      - type: memory_use_percent\n      - type: processor_use\n      - type: last_boot</code></pre>\n      </div>\n    </div>\n<h3 id=\"log-locations-and-configuration\" class=\"mobile-header\">Log Locations and Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># configuration.yaml\nlogger:\n  default: info\n  logs:\n    homeassistant.core: debug\n    homeassistant.components.mqtt: debug\n    homeassistant.components.zwave_js: debug\n\n# Log files location\n# /opt/homeassistant/.homeassistant/home-assistant.log</code></pre>\n      </div>\n    </div>\n<h3 id=\"metrics-endpoints\" class=\"mobile-header\">Metrics Endpoints</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Enable Prometheus metrics\nprometheus:\n  namespace: hass\n\n# Expose metrics on port 8123/api/prometheus\n# Access with: curl http://localhost:8123/api/prometheus</code></pre>\n      </div>\n    </div>\n<h3 id=\"integration-with-monitoring-systems\" class=\"mobile-header\">Integration with Monitoring Systems</h3>\n<p class=\"mobile-paragraph\">#### Grafana Dashboard</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install Grafana\nsudo dnf install -y grafana  # RHEL/CentOS\nsudo apt install -y grafana  # Debian/Ubuntu\n\n# Configure Prometheus data source\n# Import Home Assistant dashboard: https://grafana.com/grafana/dashboards/11693</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Nagios/Icinga</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check Home Assistant API\n/usr/lib/nagios/plugins/check_http -H localhost -p 8123 -u /api/ -e 401</code></pre>\n      </div>\n    </div>\n<h3 id=\"alert-configuration\" class=\"mobile-header\">Alert Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Add to configuration.yaml\nnotify:\n  - name: email\n    platform: smtp\n    server: smtp.gmail.com\n    port: 587\n    sender: alerts@example.com\n    username: !secret email_username\n    password: !secret email_password\n    recipient: admin@example.com\n\nautomation:\n  - alias: &quot;System Health Alert&quot;\n    trigger:\n      platform: numeric_state\n      entity_id: sensor.processor_use\n      above: 90\n    action:\n      service: notify.email\n      data:\n        title: &quot;High CPU Usage&quot;\n        message: &quot;CPU usage is {{ states(&#039;sensor.processor_use&#039;) }}%&quot;</code></pre>\n      </div>\n    </div>\n<h2 id=\"backup-and-restore\" class=\"mobile-header\">Backup and Restore</h2>\n<h3 id=\"what-to-backup\" class=\"mobile-header\">What to Backup</h3>\n<p class=\"mobile-paragraph\">Essential files and directories:</p>\n<li class=\"mobile-list-item\"><code class=\"mobile-inline-code\">/opt/homeassistant/.homeassistant/</code> (entire config directory)</li>\n<li class=\"mobile-list-item\">SSL certificates (if used)</li>\n<li class=\"mobile-list-item\">Database files (if using external database)</li>\n<li class=\"mobile-list-item\">Custom components and themes</li>\n<h3 id=\"backup-scripts\" class=\"mobile-header\">Backup Scripts</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# /usr/local/bin/homeassistant-backup.sh\n\nBACKUP_DIR=&quot;/backup/homeassistant&quot;\nCONFIG_DIR=&quot;/opt/homeassistant/.homeassistant&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\n# Create backup directory\nmkdir -p &quot;$BACKUP_DIR&quot;\n\n# Stop Home Assistant\nsudo systemctl stop homeassistant\n\n# Create backup\ntar -czf &quot;$BACKUP_DIR/homeassistant_backup_$DATE.tar.gz&quot; \\\n    -C &quot;/opt/homeassistant&quot; &quot;.homeassistant&quot;\n\n# Start Home Assistant\nsudo systemctl start homeassistant\n\n# Keep only last 7 backups\nfind &quot;$BACKUP_DIR&quot; -name &quot;homeassistant_backup_*.tar.gz&quot; -mtime +7 -delete\n\necho &quot;Backup completed: homeassistant_backup_$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedures\" class=\"mobile-header\">Restore Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Restore Home Assistant from backup\n\nBACKUP_FILE=&quot;/backup/homeassistant/homeassistant_backup_20250916_120000.tar.gz&quot;\nCONFIG_DIR=&quot;/opt/homeassistant/.homeassistant&quot;\n\n# Stop Home Assistant\nsudo systemctl stop homeassistant\n\n# Backup current config (safety)\nsudo mv &quot;$CONFIG_DIR&quot; &quot;${CONFIG_DIR}.$(date +%Y%m%d_%H%M%S)&quot;\n\n# Restore from backup\nsudo tar -xzf &quot;$BACKUP_FILE&quot; -C &quot;/opt/homeassistant&quot;\n\n# Fix permissions\nsudo chown -R homeassistant:homeassistant &quot;$CONFIG_DIR&quot;\n\n# Start Home Assistant\nsudo systemctl start homeassistant\n\necho &quot;Restore completed from $BACKUP_FILE&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"automated-backup-setup\" class=\"mobile-header\">Automated Backup Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Add to crontab for automated daily backups\nsudo crontab -e\n\n# Add this line for daily backups at 2 AM\n0 2 * * * /usr/local/bin/homeassistant-backup.sh &gt;&gt; /var/log/homeassistant-backup.log 2&gt;&amp;1</code></pre>\n      </div>\n    </div>\n<h3 id=\"testing-restore-procedures\" class=\"mobile-header\">Testing Restore Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Test restore on separate system\n# 1. Install Home Assistant on test system\n# 2. Stop service\n# 3. Replace config with backup\n# 4. Start service and verify functionality\n# 5. Test automations and integrations\n\n# Verify backup integrity\ntar -tzf /backup/homeassistant/homeassistant_backup_latest.tar.gz | head -20</code></pre>\n      </div>\n    </div>\n<h2 id=\"troubleshooting\" class=\"mobile-header\">Troubleshooting</h2>\n<h3 id=\"common-installation-issues\" class=\"mobile-header\">Common Installation Issues</h3>\n<p class=\"mobile-paragraph\"><strong>Python version conflicts:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check Python version\npython3 --version\n# Should be 3.10 or later\n\n# If wrong version, install correct Python\nsudo dnf install python3.11  # RHEL/CentOS\nsudo apt install python3.11  # Debian/Ubuntu</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>Missing development packages:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install missing development tools\nsudo dnf groupinstall &quot;Development Tools&quot;  # RHEL/CentOS\nsudo apt install build-essential  # Debian/Ubuntu</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>Permission errors during pip install:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Ensure you&#039;re in the virtual environment\nsource /opt/homeassistant/bin/activate\n# Check virtual environment is active\nwhich python\n# Should show: /opt/homeassistant/bin/python</code></pre>\n      </div>\n    </div>\n<h3 id=\"service-startup-problems\" class=\"mobile-header\">Service Startup Problems</h3>\n<p class=\"mobile-paragraph\"><strong>Service fails to start:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status homeassistant\n\n# Check logs\nsudo journalctl -u homeassistant -f\n\n# Common issues:\n# 1. Configuration errors\n# 2. Port already in use\n# 3. Permission problems</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>Configuration validation:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check configuration syntax\nsudo -u homeassistant -H -s\ncd /opt/homeassistant\nsource bin/activate\nhass --script check_config -c .homeassistant</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>Port conflicts:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check what&#039;s using port 8123\nsudo netstat -tlnp | grep 8123\nsudo lsof -i :8123\n\n# Kill conflicting process or change port in configuration.yaml</code></pre>\n      </div>\n    </div>\n<h3 id=\"permission-errors\" class=\"mobile-header\">Permission Errors</h3>\n<p class=\"mobile-paragraph\"><strong>File permission issues:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Fix ownership\nsudo chown -R homeassistant:homeassistant /opt/homeassistant\n\n# Fix permissions\nsudo chmod -R 755 /opt/homeassistant\nsudo chmod -R 644 /opt/homeassistant/.homeassistant/*.yaml</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>SELinux context issues (RHEL/CentOS):</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check SELinux status\nsestatus\n\n# Fix SELinux contexts\nsudo restorecon -Rv /opt/homeassistant\nsudo setsebool -P httpd_can_network_connect 1</code></pre>\n      </div>\n    </div>\n<h3 id=\"networkconnectivity-issues\" class=\"mobile-header\">Network/Connectivity Issues</h3>\n<p class=\"mobile-paragraph\"><strong>Web interface not accessible:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is running\nsudo systemctl status homeassistant\n\n# Check listening ports\nsudo netstat -tlnp | grep python\n\n# Check firewall\nsudo firewall-cmd --list-all  # RHEL/CentOS\nsudo ufw status  # Ubuntu/Debian</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>mDNS discovery not working:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install and start Avahi\nsudo dnf install avahi avahi-tools  # RHEL/CentOS\nsudo apt install avahi-daemon avahi-utils  # Debian/Ubuntu\nsudo systemctl enable --now avahi-daemon\n\n# Test mDNS\navahi-browse -r _http._tcp</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode-activation\" class=\"mobile-header\">Debug Mode Activation</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable debug logging\n# Edit configuration.yaml\nlogger:\n  default: debug\n  logs:\n    homeassistant.core: debug\n    homeassistant.components: debug\n\n# Restart Home Assistant\nsudo systemctl restart homeassistant\n\n# Monitor logs\nsudo journalctl -u homeassistant -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"log-analysis\" class=\"mobile-header\">Log Analysis</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Common log locations\ntail -f /opt/homeassistant/.homeassistant/home-assistant.log\n\n# Filter specific components\ngrep &quot;ERROR&quot; /opt/homeassistant/.homeassistant/home-assistant.log\ngrep &quot;WARNING&quot; /opt/homeassistant/.homeassistant/home-assistant.log\n\n# Check startup issues\nsudo journalctl -u homeassistant --since &quot;10 minutes ago&quot;</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<p class=\"mobile-paragraph\"><strong>Update Home Assistant Core:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Switch to homeassistant user\nsudo -u homeassistant -H -s\ncd /opt/homeassistant\nsource bin/activate\n\n# Update pip and Home Assistant\npython -m pip install --upgrade pip\npython -m pip install --upgrade homeassistant\n\n# Check for breaking changes before updating\n# Visit: https://www.home-assistant.io/blog/categories/release-notes/\n\n# Restart service\nsudo systemctl restart homeassistant</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>Update Python dependencies:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update all packages\npython -m pip list --outdated\npython -m pip install --upgrade package_name\n\n# Or update all at once (use with caution)\npython -m pip freeze | cut -d&#039;=&#039; -f1 | xargs python -m pip install --upgrade</code></pre>\n      </div>\n    </div>\n<h3 id=\"version-upgrades\" class=\"mobile-header\">Version Upgrades</h3>\n<p class=\"mobile-paragraph\"><strong>Major version upgrades:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Before upgrading, always backup\n/usr/local/bin/homeassistant-backup.sh\n\n# Check breaking changes\n# Visit release notes at: https://www.home-assistant.io/blog/\n\n# Perform upgrade\nsudo -u homeassistant -H -s\ncd /opt/homeassistant\nsource bin/activate\npython -m pip install --upgrade homeassistant\n\n# Check configuration after upgrade\nhass --script check_config -c .homeassistant\n\n# Restart service\nsudo systemctl restart homeassistant</code></pre>\n      </div>\n    </div>\n<h3 id=\"migration-between-systems\" class=\"mobile-header\">Migration Between Systems</h3>\n<p class=\"mobile-paragraph\"><strong>Export configuration:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create migration package\ntar -czf homeassistant_migration.tar.gz \\\n    -C /opt/homeassistant .homeassistant \\\n    --exclude=.homeassistant/home-assistant.log \\\n    --exclude=.homeassistant/home-assistant_v2.db\n\n# Copy SSL certificates if used\ntar -czf ssl_certs.tar.gz /etc/ssl/private/homeassistant.*</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>Import on new system:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install Home Assistant on new system\n# Stop service\nsudo systemctl stop homeassistant\n\n# Extract configuration\nsudo tar -xzf homeassistant_migration.tar.gz -C /opt/homeassistant\nsudo chown -R homeassistant:homeassistant /opt/homeassistant/.homeassistant\n\n# Update IP addresses and device paths in configuration\nsudo -u homeassistant nano /opt/homeassistant/.homeassistant/configuration.yaml\n\n# Start service\nsudo systemctl start homeassistant</code></pre>\n      </div>\n    </div>\n<h3 id=\"cleanup-procedures\" class=\"mobile-header\">Cleanup Procedures</h3>\n<p class=\"mobile-paragraph\"><strong>Database cleanup:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable database purging\n# Add to configuration.yaml\nrecorder:\n  purge_keep_days: 7\n  auto_purge: true\n\n# Manual purge\nsudo -u homeassistant -H -s\ncd /opt/homeassistant\nsource bin/activate\nhass --script purge_db --days 30</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>Log rotation:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Configure logrotate\nsudo tee /etc/logrotate.d/homeassistant &gt; /dev/null &lt;&lt;EOF\n/opt/homeassistant/.homeassistant/home-assistant.log {\n    daily\n    missingok\n    rotate 7\n    compress\n    notifempty\n    copytruncate\n    su homeassistant homeassistant\n}\nEOF</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\"><strong>Clear cache and temporary files:</strong></p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clear Home Assistant cache\nsudo -u homeassistant rm -rf /opt/homeassistant/.homeassistant/.cache\nsudo -u homeassistant rm -rf /opt/homeassistant/.homeassistant/deps\n\n# Clear pip cache\nsudo -u homeassistant python -m pip cache purge</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"mqtt-device-integration\" class=\"mobile-header\">MQTT Device Integration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># configuration.yaml\nmqtt:\n  sensor:\n    - name: &quot;Temperature Sensor&quot;\n      state_topic: &quot;home/livingroom/temperature&quot;\n      unit_of_measurement: &quot;°C&quot;\n      device_class: temperature\n    \n    - name: &quot;Humidity Sensor&quot;\n      state_topic: &quot;home/livingroom/humidity&quot;\n      unit_of_measurement: &quot;%&quot;\n      device_class: humidity\n\n  switch:\n    - name: &quot;Living Room Light&quot;\n      state_topic: &quot;home/livingroom/light/state&quot;\n      command_topic: &quot;home/livingroom/light/set&quot;\n      payload_on: &quot;ON&quot;\n      payload_off: &quot;OFF&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"rest-api-usage-examples\" class=\"mobile-header\">REST API Usage Examples</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Get states of all entities\ncurl -X GET \\\n  -H &quot;Authorization: Bearer YOUR_TOKEN&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  http://localhost:8123/api/states\n\n# Control a switch\ncurl -X POST \\\n  -H &quot;Authorization: Bearer YOUR_TOKEN&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &#039;{&quot;entity_id&quot;: &quot;switch.living_room_light&quot;}&#039; \\\n  http://localhost:8123/api/services/switch/turn_on\n\n# Get specific entity state\ncurl -X GET \\\n  -H &quot;Authorization: Bearer YOUR_TOKEN&quot; \\\n  http://localhost:8123/api/states/sensor.temperature</code></pre>\n      </div>\n    </div>\n<h3 id=\"python-client-library-example\" class=\"mobile-header\">Python Client Library Example</h3>\n<div class=\"mobile-code-block\" data-language=\"python\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">python</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-python\"># pip install homeassistant-api\nimport homeassistant.remote as remote\n\n# Connect to Home Assistant\napi = remote.API(&#039;localhost&#039;, &#039;YOUR_TOKEN&#039;, 8123)\n\n# Get all states\nstates = remote.get_states(api)\nfor state in states:\n    print(f&quot;{state.entity_id}: {state.state}&quot;)\n\n# Turn on a light\nremote.call_service(api, &#039;switch&#039;, &#039;turn_on&#039;, {&#039;entity_id&#039;: &#039;switch.living_room_light&#039;})\n\n# Get state of specific entity\nstate = remote.get_state(api, &#039;sensor.temperature&#039;)\nprint(f&quot;Temperature: {state.state}°C&quot;)</code></pre>\n      </div>\n    </div>\n<h3 id=\"webhook-configuration\" class=\"mobile-header\">Webhook Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># configuration.yaml\nautomation:\n  - alias: &quot;Webhook Triggered Action&quot;\n    trigger:\n      platform: webhook\n      webhook_id: your_webhook_id\n    action:\n      service: notify.mobile_app_your_phone\n      data:\n        message: &quot;Webhook triggered with data: {{ trigger.json }}&quot;\n\n# URL to trigger webhook:\n# POST http://localhost:8123/api/webhook/your_webhook_id</code></pre>\n      </div>\n    </div>\n<h3 id=\"zigbee2mqtt-integration\" class=\"mobile-header\">Zigbee2MQTT Integration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">📋</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install Mosquitto MQTT broker\nsudo dnf install mosquitto mosquitto-clients  # RHEL/CentOS\nsudo apt install mosquitto mosquitto-clients  # Debian/Ubuntu\n\n# Start MQTT broker\nsudo systemctl enable --now mosquitto\n\n# Install Node.js and npm\ncurl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -\nsudo dnf install -y nodejs\n\n# Install Zigbee2MQTT\nsudo npm install -g zigbee2mqtt\n\n# Configure Zigbee2MQTT\nsudo mkdir -p /opt/zigbee2mqtt\nsudo tee /opt/zigbee2mqtt/configuration.yaml &gt; /dev/null &lt;&lt;EOF\nhomeassistant: true\npermit_join: false\nmqtt:\n  base_topic: zigbee2mqtt\n  server: &#039;mqtt://localhost&#039;\nserial:\n  port: /dev/ttyUSB0  # Adjust to your Zigbee dongle\nadvanced:\n  network_key: GENERATE\n  pan_id: GENERATE\nEOF</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\"><a href=\"https://www.home-assistant.io/docs/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Official Home Assistant Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://github.com/home-assistant/core\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Home Assistant GitHub Repository</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://community.home-assistant.io/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Home Assistant Community Forum</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://discord.gg/c5DvZ4e\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Home Assistant Discord</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://www.youtube.com/c/HomeAssistant\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Home Assistant YouTube Channel</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://github.com/frenck/awesome-home-assistant\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Awesome Home Assistant</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://hacs.xyz/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HACS (Home Assistant Community Store)</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://esphome.io/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">ESPHome Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://www.zigbee2mqtt.io/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Zigbee2MQTT Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://zwave-js.github.io/node-zwave-js/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Z-Wave JS Documentation</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://community.home-assistant.io/c/blueprints-exchange/\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Home Assistant Blueprints Exchange</a></li>\n<li class=\"mobile-list-item\"><a href=\"https://github.com/home-assistant/home-assistant.io/tree/current/source/_cookbook\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Home Assistant Configuration Examples</a></li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"21 min","wordCount":4163,"tableOfContents":[{"level":2,"text":"Prerequisites","id":"prerequisites"},{"level":3,"text":"Hardware Requirements","id":"hardware-requirements"},{"level":3,"text":"Operating System Requirements","id":"operating-system-requirements"},{"level":3,"text":"Network Requirements","id":"network-requirements"},{"level":3,"text":"Dependencies","id":"dependencies"},{"level":3,"text":"Required System Access","id":"required-system-access"},{"level":3,"text":"Domain/DNS Requirements (Optional)","id":"domaindns-requirements-optional"},{"level":2,"text":"Installation","id":"installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":1,"text":"Install EPEL repository for additional packages","id":"install-epel-repository-for-additional-packages"},{"level":1,"text":"Install Python 3.11 and development tools","id":"install-python-311-and-development-tools"},{"level":1,"text":"Create dedicated homeassistant user","id":"create-dedicated-homeassistant-user"},{"level":1,"text":"Create installation directory","id":"create-installation-directory"},{"level":1,"text":"Switch to homeassistant user","id":"switch-to-homeassistant-user"},{"level":1,"text":"Create and activate virtual environment","id":"create-and-activate-virtual-environment"},{"level":1,"text":"Upgrade pip and install wheel","id":"upgrade-pip-and-install-wheel"},{"level":1,"text":"Install Home Assistant","id":"install-home-assistant"},{"level":1,"text":"Exit homeassistant user session","id":"exit-homeassistant-user-session"},{"level":1,"text":"Install Docker (required for Supervised)","id":"install-docker-required-for-supervised"},{"level":1,"text":"Start and enable Docker","id":"start-and-enable-docker"},{"level":1,"text":"Install additional dependencies","id":"install-additional-dependencies"},{"level":1,"text":"Download and install Home Assistant Supervised","id":"download-and-install-home-assistant-supervised"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":1,"text":"Update package list","id":"update-package-list"},{"level":1,"text":"Install Python 3.11 and development tools","id":"install-python-311-and-development-tools"},{"level":1,"text":"Create dedicated homeassistant user","id":"create-dedicated-homeassistant-user"},{"level":1,"text":"Create installation directory","id":"create-installation-directory"},{"level":1,"text":"Switch to homeassistant user","id":"switch-to-homeassistant-user"},{"level":1,"text":"Create and activate virtual environment","id":"create-and-activate-virtual-environment"},{"level":1,"text":"Upgrade pip and install wheel","id":"upgrade-pip-and-install-wheel"},{"level":1,"text":"Install Home Assistant","id":"install-home-assistant"},{"level":1,"text":"Exit homeassistant user session","id":"exit-homeassistant-user-session"},{"level":1,"text":"Install Docker","id":"install-docker"},{"level":1,"text":"Add Docker GPG key","id":"add-docker-gpg-key"},{"level":1,"text":"Add Docker repository","id":"add-docker-repository"},{"level":1,"text":"Install Docker","id":"install-docker"},{"level":1,"text":"Install additional dependencies","id":"install-additional-dependencies"},{"level":1,"text":"Download and install Home Assistant Supervised","id":"download-and-install-home-assistant-supervised"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":1,"text":"Update system","id":"update-system"},{"level":1,"text":"Install Python and development tools","id":"install-python-and-development-tools"},{"level":1,"text":"Create dedicated homeassistant user","id":"create-dedicated-homeassistant-user"},{"level":1,"text":"Create installation directory","id":"create-installation-directory"},{"level":1,"text":"Switch to homeassistant user","id":"switch-to-homeassistant-user"},{"level":1,"text":"Create and activate virtual environment","id":"create-and-activate-virtual-environment"},{"level":1,"text":"Upgrade pip and install wheel","id":"upgrade-pip-and-install-wheel"},{"level":1,"text":"Install Home Assistant","id":"install-home-assistant"},{"level":1,"text":"Exit homeassistant user session","id":"exit-homeassistant-user-session"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":1,"text":"Update package index","id":"update-package-index"},{"level":1,"text":"Install Python and development tools","id":"install-python-and-development-tools"},{"level":1,"text":"Create dedicated homeassistant user","id":"create-dedicated-homeassistant-user"},{"level":1,"text":"Create installation directory","id":"create-installation-directory"},{"level":1,"text":"Switch to homeassistant user","id":"switch-to-homeassistant-user"},{"level":1,"text":"Create and activate virtual environment","id":"create-and-activate-virtual-environment"},{"level":1,"text":"Upgrade pip and install wheel","id":"upgrade-pip-and-install-wheel"},{"level":1,"text":"Install Home Assistant","id":"install-home-assistant"},{"level":1,"text":"Exit homeassistant user session","id":"exit-homeassistant-user-session"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":1,"text":"Install Python and development tools","id":"install-python-and-development-tools"},{"level":1,"text":"Create dedicated homeassistant user","id":"create-dedicated-homeassistant-user"},{"level":1,"text":"Create installation directory","id":"create-installation-directory"},{"level":1,"text":"Switch to homeassistant user","id":"switch-to-homeassistant-user"},{"level":1,"text":"Create and activate virtual environment","id":"create-and-activate-virtual-environment"},{"level":1,"text":"Upgrade pip and install wheel","id":"upgrade-pip-and-install-wheel"},{"level":1,"text":"Install Home Assistant","id":"install-home-assistant"},{"level":1,"text":"Exit homeassistant user session","id":"exit-homeassistant-user-session"},{"level":3,"text":"macOS","id":"macos"},{"level":1,"text":"Install Homebrew if not already installed","id":"install-homebrew-if-not-already-installed"},{"level":1,"text":"Install Python 3.11","id":"install-python-311"},{"level":1,"text":"Create dedicated homeassistant user directory","id":"create-dedicated-homeassistant-user-directory"},{"level":1,"text":"Create and activate virtual environment","id":"create-and-activate-virtual-environment"},{"level":1,"text":"Upgrade pip and install wheel","id":"upgrade-pip-and-install-wheel"},{"level":1,"text":"Install Home Assistant","id":"install-home-assistant"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"First-Run Setup","id":"first-run-setup"},{"level":1,"text":"Switch to homeassistant user","id":"switch-to-homeassistant-user"},{"level":1,"text":"Activate virtual environment","id":"activate-virtual-environment"},{"level":1,"text":"Start Home Assistant for initial setup (will create config directory)","id":"start-home-assistant-for-initial-setup-will-create-config-directory"},{"level":1,"text":"Home Assistant will be available at http://localhost:8123","id":"home-assistant-will-be-available-at-httplocalhost8123"},{"level":1,"text":"Complete the onboarding process in your web browser","id":"complete-the-onboarding-process-in-your-web-browser"},{"level":1,"text":"Press Ctrl+C to stop after initial setup","id":"press-ctrlc-to-stop-after-initial-setup"},{"level":3,"text":"Default Credentials","id":"default-credentials"},{"level":3,"text":"Configuration File Locations","id":"configuration-file-locations"},{"level":1,"text":"Main configuration directory","id":"main-configuration-directory"},{"level":1,"text":"Main configuration file","id":"main-configuration-file"},{"level":1,"text":"Secrets file (for passwords and API keys)","id":"secrets-file-for-passwords-and-api-keys"},{"level":1,"text":"Automations","id":"automations"},{"level":1,"text":"Scripts","id":"scripts"},{"level":1,"text":"Scenes","id":"scenes"},{"level":1,"text":"Custom components","id":"custom-components"},{"level":1,"text":"Log file","id":"log-file"},{"level":3,"text":"Essential Settings to Change","id":"essential-settings-to-change"},{"level":1,"text":"Edit /opt/homeassistant/.homeassistant/configuration.yaml","id":"edit-opthomeassistanthomeassistantconfigurationyaml"},{"level":1,"text":"Enable advanced mode and disable introduction","id":"enable-advanced-mode-and-disable-introduction"},{"level":1,"text":"Enable logging","id":"enable-logging"},{"level":1,"text":"Enable history and recorder","id":"enable-history-and-recorder"},{"level":1,"text":"HTTP configuration","id":"http-configuration"},{"level":2,"text":"Service Management","id":"service-management"},{"level":3,"text":"systemd (RHEL, Debian, Arch, SUSE)","id":"systemd-rhel-debian-arch-suse"},{"level":1,"text":"Create systemd service file","id":"create-systemd-service-file"},{"level":1,"text":"Reload systemd and enable service","id":"reload-systemd-and-enable-service"},{"level":1,"text":"Service management commands","id":"service-management-commands"},{"level":3,"text":"OpenRC (Alpine)","id":"openrc-alpine"},{"level":1,"text":"Create OpenRC service file","id":"create-openrc-service-file"},{"level":1,"text":"Make executable and enable","id":"make-executable-and-enable"},{"level":1,"text":"Service management commands","id":"service-management-commands"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":1,"text":"Create launchd plist file","id":"create-launchd-plist-file"},{"level":1,"text":"Load and start service","id":"load-and-start-service"},{"level":1,"text":"Service management commands","id":"service-management-commands"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":3,"text":"Configuration File Syntax","id":"configuration-file-syntax"},{"level":1,"text":"Basic syntax","id":"basic-syntax"},{"level":1,"text":"Including other files","id":"including-other-files"},{"level":1,"text":"Using secrets","id":"using-secrets"},{"level":3,"text":"Environment Variables","id":"environment-variables"},{"level":1,"text":"Set environment variables for Home Assistant","id":"set-environment-variables-for-home-assistant"},{"level":1,"text":"Add to ~/.bashrc or systemd service file","id":"add-to-bashrc-or-systemd-service-file"},{"level":3,"text":"Command-line Parameters","id":"command-line-parameters"},{"level":1,"text":"Common command-line options","id":"common-command-line-options"},{"level":3,"text":"Integration with Other Services","id":"integration-with-other-services"},{"level":1,"text":"Add to configuration.yaml","id":"add-to-configurationyaml"},{"level":1,"text":"Add to configuration.yaml","id":"add-to-configurationyaml"},{"level":1,"text":"zigbee2mqtt will automatically create devices","id":"zigbee2mqtt-will-automatically-create-devices"},{"level":1,"text":"Add to configuration.yaml (for Z-Wave JS)","id":"add-to-configurationyaml-for-z-wave-js"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":1,"text":"/etc/nginx/sites-available/homeassistant","id":"etcnginxsites-availablehomeassistant"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":1,"text":"/etc/apache2/sites-available/homeassistant.conf","id":"etcapache2sites-availablehomeassistantconf"},{"level":3,"text":"Caddy Configuration","id":"caddy-configuration"},{"level":1,"text":"/etc/caddy/Caddyfile","id":"etccaddycaddyfile"},{"level":3,"text":"Traefik Configuration","id":"traefik-configuration"},{"level":1,"text":"docker-compose.yml for Traefik","id":"docker-composeyml-for-traefik"},{"level":1,"text":"traefik.yml","id":"traefikyml"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Authentication Setup","id":"authentication-setup"},{"level":1,"text":"Add to configuration.yaml","id":"add-to-configurationyaml"},{"level":3,"text":"SSL/TLS Configuration","id":"ssltls-configuration"},{"level":1,"text":"Add to configuration.yaml","id":"add-to-configurationyaml"},{"level":3,"text":"Firewall Rules","id":"firewall-rules"},{"level":1,"text":"Allow Home Assistant port","id":"allow-home-assistant-port"},{"level":1,"text":"Create custom service","id":"create-custom-service"},{"level":1,"text":"Allow Home Assistant ports","id":"allow-home-assistant-ports"},{"level":1,"text":"Enable firewall","id":"enable-firewall"},{"level":1,"text":"Add rules for Home Assistant","id":"add-rules-for-home-assistant"},{"level":1,"text":"Save rules (command varies by distribution)","id":"save-rules-command-varies-by-distribution"},{"level":3,"text":"SELinux Policies (RHEL/CentOS/Fedora)","id":"selinux-policies-rhelcentosfedora"},{"level":1,"text":"Allow Home Assistant to bind to port 8123","id":"allow-home-assistant-to-bind-to-port-8123"},{"level":1,"text":"Create custom SELinux policy if needed","id":"create-custom-selinux-policy-if-needed"},{"level":3,"text":"Security Best Practices","id":"security-best-practices"},{"level":1,"text":"Add to configuration.yaml","id":"add-to-configurationyaml"},{"level":1,"text":"Enable additional security features","id":"enable-additional-security-features"},{"level":1,"text":"Disable unnecessary integrations","id":"disable-unnecessary-integrations"},{"level":3,"text":"API Key/Token Management","id":"api-keytoken-management"},{"level":1,"text":"Create long-lived access tokens in Home Assistant UI","id":"create-long-lived-access-tokens-in-home-assistant-ui"},{"level":1,"text":"Navigate to Profile -> Long-Lived Access Tokens","id":"navigate-to-profile-long-lived-access-tokens"},{"level":1,"text":"Use in external applications","id":"use-in-external-applications"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":3,"text":"SQLite (Default)","id":"sqlite-default"},{"level":1,"text":"configuration.yaml - SQLite is default, no configuration needed","id":"configurationyaml-sqlite-is-default-no-configuration-needed"},{"level":3,"text":"PostgreSQL","id":"postgresql"},{"level":1,"text":"Install PostgreSQL","id":"install-postgresql"},{"level":1,"text":"Initialize and start PostgreSQL","id":"initialize-and-start-postgresql"},{"level":1,"text":"Create database and user","id":"create-database-and-user"},{"level":1,"text":"configuration.yaml","id":"configurationyaml"},{"level":3,"text":"MySQL/MariaDB","id":"mysqlmariadb"},{"level":1,"text":"Install MariaDB","id":"install-mariadb"},{"level":1,"text":"Start and secure MariaDB","id":"start-and-secure-mariadb"},{"level":1,"text":"Create database and user","id":"create-database-and-user"},{"level":1,"text":"configuration.yaml","id":"configurationyaml"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"Resource Tuning","id":"resource-tuning"},{"level":1,"text":"configuration.yaml","id":"configurationyaml"},{"level":1,"text":"Reduce logging","id":"reduce-logging"},{"level":1,"text":"Optimize frontend","id":"optimize-frontend"},{"level":3,"text":"Caching Configuration","id":"caching-configuration"},{"level":1,"text":"Enable caching for better performance","id":"enable-caching-for-better-performance"},{"level":1,"text":"Cache static files","id":"cache-static-files"},{"level":3,"text":"Memory Optimization for Raspberry Pi","id":"memory-optimization-for-raspberry-pi"},{"level":1,"text":"Increase swap file size","id":"increase-swap-file-size"},{"level":1,"text":"Add to /boot/config.txt","id":"add-to-bootconfigtxt"},{"level":3,"text":"Scaling Options","id":"scaling-options"},{"level":1,"text":"Use multiple workers for better performance","id":"use-multiple-workers-for-better-performance"},{"level":1,"text":"Add to systemd service file","id":"add-to-systemd-service-file"},{"level":1,"text":"Distribute load with nginx","id":"distribute-load-with-nginx"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Built-in Health Checks","id":"built-in-health-checks"},{"level":1,"text":"Add to configuration.yaml","id":"add-to-configurationyaml"},{"level":1,"text":"Enable system monitor","id":"enable-system-monitor"},{"level":3,"text":"Log Locations and Configuration","id":"log-locations-and-configuration"},{"level":1,"text":"configuration.yaml","id":"configurationyaml"},{"level":1,"text":"Log files location","id":"log-files-location"},{"level":1,"text":"/opt/homeassistant/.homeassistant/home-assistant.log","id":"opthomeassistanthomeassistanthome-assistantlog"},{"level":3,"text":"Metrics Endpoints","id":"metrics-endpoints"},{"level":1,"text":"Enable Prometheus metrics","id":"enable-prometheus-metrics"},{"level":1,"text":"Expose metrics on port 8123/api/prometheus","id":"expose-metrics-on-port-8123apiprometheus"},{"level":1,"text":"Access with: curl http://localhost:8123/api/prometheus","id":"access-with-curl-httplocalhost8123apiprometheus"},{"level":3,"text":"Integration with Monitoring Systems","id":"integration-with-monitoring-systems"},{"level":1,"text":"Install Grafana","id":"install-grafana"},{"level":1,"text":"Configure Prometheus data source","id":"configure-prometheus-data-source"},{"level":1,"text":"Import Home Assistant dashboard: https://grafana.com/grafana/dashboards/11693","id":"import-home-assistant-dashboard-httpsgrafanacomgrafanadashboards11693"},{"level":1,"text":"Check Home Assistant API","id":"check-home-assistant-api"},{"level":3,"text":"Alert Configuration","id":"alert-configuration"},{"level":1,"text":"Add to configuration.yaml","id":"add-to-configurationyaml"},{"level":2,"text":"Backup and Restore","id":"backup-and-restore"},{"level":3,"text":"What to Backup","id":"what-to-backup"},{"level":3,"text":"Backup Scripts","id":"backup-scripts"},{"level":1,"text":"/usr/local/bin/homeassistant-backup.sh","id":"usrlocalbinhomeassistant-backupsh"},{"level":1,"text":"Create backup directory","id":"create-backup-directory"},{"level":1,"text":"Stop Home Assistant","id":"stop-home-assistant"},{"level":1,"text":"Create backup","id":"create-backup"},{"level":1,"text":"Start Home Assistant","id":"start-home-assistant"},{"level":1,"text":"Keep only last 7 backups","id":"keep-only-last-7-backups"},{"level":3,"text":"Restore Procedures","id":"restore-procedures"},{"level":1,"text":"Restore Home Assistant from backup","id":"restore-home-assistant-from-backup"},{"level":1,"text":"Stop Home Assistant","id":"stop-home-assistant"},{"level":1,"text":"Backup current config (safety)","id":"backup-current-config-safety"},{"level":1,"text":"Restore from backup","id":"restore-from-backup"},{"level":1,"text":"Fix permissions","id":"fix-permissions"},{"level":1,"text":"Start Home Assistant","id":"start-home-assistant"},{"level":3,"text":"Automated Backup Setup","id":"automated-backup-setup"},{"level":1,"text":"Add to crontab for automated daily backups","id":"add-to-crontab-for-automated-daily-backups"},{"level":1,"text":"Add this line for daily backups at 2 AM","id":"add-this-line-for-daily-backups-at-2-am"},{"level":3,"text":"Testing Restore Procedures","id":"testing-restore-procedures"},{"level":1,"text":"Test restore on separate system","id":"test-restore-on-separate-system"},{"level":1,"text":"1. Install Home Assistant on test system","id":"1-install-home-assistant-on-test-system"},{"level":1,"text":"2. Stop service","id":"2-stop-service"},{"level":1,"text":"3. Replace config with backup","id":"3-replace-config-with-backup"},{"level":1,"text":"4. Start service and verify functionality","id":"4-start-service-and-verify-functionality"},{"level":1,"text":"5. Test automations and integrations","id":"5-test-automations-and-integrations"},{"level":1,"text":"Verify backup integrity","id":"verify-backup-integrity"},{"level":2,"text":"Troubleshooting","id":"troubleshooting"},{"level":3,"text":"Common Installation Issues","id":"common-installation-issues"},{"level":1,"text":"Check Python version","id":"check-python-version"},{"level":1,"text":"Should be 3.10 or later","id":"should-be-310-or-later"},{"level":1,"text":"If wrong version, install correct Python","id":"if-wrong-version-install-correct-python"},{"level":1,"text":"Install missing development tools","id":"install-missing-development-tools"},{"level":1,"text":"Ensure you're in the virtual environment","id":"ensure-youre-in-the-virtual-environment"},{"level":1,"text":"Check virtual environment is active","id":"check-virtual-environment-is-active"},{"level":1,"text":"Should show: /opt/homeassistant/bin/python","id":"should-show-opthomeassistantbinpython"},{"level":3,"text":"Service Startup Problems","id":"service-startup-problems"},{"level":1,"text":"Check service status","id":"check-service-status"},{"level":1,"text":"Check logs","id":"check-logs"},{"level":1,"text":"Common issues:","id":"common-issues"},{"level":1,"text":"1. Configuration errors","id":"1-configuration-errors"},{"level":1,"text":"2. Port already in use","id":"2-port-already-in-use"},{"level":1,"text":"3. Permission problems","id":"3-permission-problems"},{"level":1,"text":"Check configuration syntax","id":"check-configuration-syntax"},{"level":1,"text":"Check what's using port 8123","id":"check-whats-using-port-8123"},{"level":1,"text":"Kill conflicting process or change port in configuration.yaml","id":"kill-conflicting-process-or-change-port-in-configurationyaml"},{"level":3,"text":"Permission Errors","id":"permission-errors"},{"level":1,"text":"Fix ownership","id":"fix-ownership"},{"level":1,"text":"Fix permissions","id":"fix-permissions"},{"level":1,"text":"Check SELinux status","id":"check-selinux-status"},{"level":1,"text":"Fix SELinux contexts","id":"fix-selinux-contexts"},{"level":3,"text":"Network/Connectivity Issues","id":"networkconnectivity-issues"},{"level":1,"text":"Check if service is running","id":"check-if-service-is-running"},{"level":1,"text":"Check listening ports","id":"check-listening-ports"},{"level":1,"text":"Check firewall","id":"check-firewall"},{"level":1,"text":"Install and start Avahi","id":"install-and-start-avahi"},{"level":1,"text":"Test mDNS","id":"test-mdns"},{"level":3,"text":"Debug Mode Activation","id":"debug-mode-activation"},{"level":1,"text":"Enable debug logging","id":"enable-debug-logging"},{"level":1,"text":"Edit configuration.yaml","id":"edit-configurationyaml"},{"level":1,"text":"Restart Home Assistant","id":"restart-home-assistant"},{"level":1,"text":"Monitor logs","id":"monitor-logs"},{"level":3,"text":"Log Analysis","id":"log-analysis"},{"level":1,"text":"Common log locations","id":"common-log-locations"},{"level":1,"text":"Filter specific components","id":"filter-specific-components"},{"level":1,"text":"Check startup issues","id":"check-startup-issues"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":1,"text":"Switch to homeassistant user","id":"switch-to-homeassistant-user"},{"level":1,"text":"Update pip and Home Assistant","id":"update-pip-and-home-assistant"},{"level":1,"text":"Check for breaking changes before updating","id":"check-for-breaking-changes-before-updating"},{"level":1,"text":"Visit: https://www.home-assistant.io/blog/categories/release-notes/","id":"visit-httpswwwhome-assistantioblogcategoriesrelease-notes"},{"level":1,"text":"Restart service","id":"restart-service"},{"level":1,"text":"Update all packages","id":"update-all-packages"},{"level":1,"text":"Or update all at once (use with caution)","id":"or-update-all-at-once-use-with-caution"},{"level":3,"text":"Version Upgrades","id":"version-upgrades"},{"level":1,"text":"Before upgrading, always backup","id":"before-upgrading-always-backup"},{"level":1,"text":"Check breaking changes","id":"check-breaking-changes"},{"level":1,"text":"Visit release notes at: https://www.home-assistant.io/blog/","id":"visit-release-notes-at-httpswwwhome-assistantioblog"},{"level":1,"text":"Perform upgrade","id":"perform-upgrade"},{"level":1,"text":"Check configuration after upgrade","id":"check-configuration-after-upgrade"},{"level":1,"text":"Restart service","id":"restart-service"},{"level":3,"text":"Migration Between Systems","id":"migration-between-systems"},{"level":1,"text":"Create migration package","id":"create-migration-package"},{"level":1,"text":"Copy SSL certificates if used","id":"copy-ssl-certificates-if-used"},{"level":1,"text":"Install Home Assistant on new system","id":"install-home-assistant-on-new-system"},{"level":1,"text":"Stop service","id":"stop-service"},{"level":1,"text":"Extract configuration","id":"extract-configuration"},{"level":1,"text":"Update IP addresses and device paths in configuration","id":"update-ip-addresses-and-device-paths-in-configuration"},{"level":1,"text":"Start service","id":"start-service"},{"level":3,"text":"Cleanup Procedures","id":"cleanup-procedures"},{"level":1,"text":"Enable database purging","id":"enable-database-purging"},{"level":1,"text":"Add to configuration.yaml","id":"add-to-configurationyaml"},{"level":1,"text":"Manual purge","id":"manual-purge"},{"level":1,"text":"Configure logrotate","id":"configure-logrotate"},{"level":1,"text":"Clear Home Assistant cache","id":"clear-home-assistant-cache"},{"level":1,"text":"Clear pip cache","id":"clear-pip-cache"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"MQTT Device Integration","id":"mqtt-device-integration"},{"level":1,"text":"configuration.yaml","id":"configurationyaml"},{"level":3,"text":"REST API Usage Examples","id":"rest-api-usage-examples"},{"level":1,"text":"Get states of all entities","id":"get-states-of-all-entities"},{"level":1,"text":"Control a switch","id":"control-a-switch"},{"level":1,"text":"Get specific entity state","id":"get-specific-entity-state"},{"level":3,"text":"Python Client Library Example","id":"python-client-library-example"},{"level":1,"text":"pip install homeassistant-api","id":"pip-install-homeassistant-api"},{"level":1,"text":"Connect to Home Assistant","id":"connect-to-home-assistant"},{"level":1,"text":"Get all states","id":"get-all-states"},{"level":1,"text":"Turn on a light","id":"turn-on-a-light"},{"level":1,"text":"Get state of specific entity","id":"get-state-of-specific-entity"},{"level":3,"text":"Webhook Configuration","id":"webhook-configuration"},{"level":1,"text":"configuration.yaml","id":"configurationyaml"},{"level":1,"text":"URL to trigger webhook:","id":"url-to-trigger-webhook"},{"level":1,"text":"POST http://localhost:8123/api/webhook/your_webhook_id","id":"post-httplocalhost8123apiwebhookyour_webhook_id"},{"level":3,"text":"Zigbee2MQTT Integration","id":"zigbee2mqtt-integration"},{"level":1,"text":"Install Mosquitto MQTT broker","id":"install-mosquitto-mqtt-broker"},{"level":1,"text":"Start MQTT broker","id":"start-mqtt-broker"},{"level":1,"text":"Install Node.js and npm","id":"install-nodejs-and-npm"},{"level":1,"text":"Install Zigbee2MQTT","id":"install-zigbee2mqtt"},{"level":1,"text":"Configure Zigbee2MQTT","id":"configure-zigbee2mqtt"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-09-19T18:16:44.930Z","metadataVersion":"2.0"},"category":{"key":"home-automation","name":"Home automation","description":"Home automation tools and applications","icon":"🔧","color":"#6272a4"},"relatedGuides":[]},"__N_SSG":true}