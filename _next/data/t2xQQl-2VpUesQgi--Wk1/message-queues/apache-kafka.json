{"pageProps":{"guide":{"name":"apache-kafka","displayName":"Apache-Kafka","slug":"apache-kafka","description":"apache-kafka README","category":"message-queues","subcategory":"message-queues","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["message-queues"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/message-queues/apache-kafka","documentationUrl":"https://howtomgr.github.io/message-queues/apache-kafka","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/apache-kafka","updatedAt":"2025-09-16T02:55:51Z","createdAt":"2025-09-08T03:05:01Z","readmeRaw":"## ðŸ‘‹ Welcome to apache-kafka ðŸš€  \n\napache-kafka README  \n  \n  \n## Author  \n\nðŸ¤– casjay: [Github](https://github.com/casjay) ðŸ¤–  \n","readmeHtml":"<h2 id=\"welcome-to-apache-kafka\" class=\"mobile-header\">ðŸ‘‹ Welcome to apache-kafka ðŸš€</h2>\n<p class=\"mobile-paragraph\">apache-kafka README  </p>\n<h2 id=\"author\" class=\"mobile-header\">Author</h2>\n<p class=\"mobile-paragraph\">ðŸ¤– casjay: <a href=\"https://github.com/casjay\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">Github</a> ðŸ¤–  </p>","readTime":"1 min","wordCount":15,"tableOfContents":[{"level":2,"text":"ðŸ‘‹ Welcome to apache-kafka ðŸš€","id":"welcome-to-apache-kafka"},{"level":2,"text":"Author","id":"author"}],"lastBuilt":"2025-10-19T06:18:48.207Z","metadataVersion":"2.0"},"category":{"key":"message-queues","name":"Message queues","description":"Message queues tools and applications","icon":"ðŸ’»","color":"#8be9fd"},"relatedGuides":[{"name":"beanstalkd","displayName":"beanstalkd Installation Guide","slug":"beanstalkd","description":"beanstalkd is a free and open-source work queue. Beanstalkd provides simple, fast work queue","category":"message-queues","subcategory":"message-queues","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,11300],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["message-queues","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/message-queues/beanstalkd","documentationUrl":"https://howtomgr.github.io/message-queues/beanstalkd","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/beanstalkd","updatedAt":"2025-09-16T16:59:49Z","createdAt":"2025-09-16T02:21:22Z","readmeRaw":"# beanstalkd Installation Guide\n\nbeanstalkd is a free and open-source work queue. Beanstalkd provides simple, fast work queue\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 1 core minimum\n  - RAM: 128MB minimum\n  - Storage: 1GB for jobs\n  - Network: Beanstalk protocol\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 11300 (default beanstalkd port)\n  - None\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install beanstalkd\nsudo dnf install -y beanstalkd\n\n# Enable and start service\nsudo systemctl enable --now beanstalkd\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=11300/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nbeanstalkd --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install beanstalkd\nsudo apt install -y beanstalkd\n\n# Enable and start service\nsudo systemctl enable --now beanstalkd\n\n# Configure firewall\nsudo ufw allow 11300\n\n# Verify installation\nbeanstalkd --version\n```\n\n### Arch Linux\n\n```bash\n# Install beanstalkd\nsudo pacman -S beanstalkd\n\n# Enable and start service\nsudo systemctl enable --now beanstalkd\n\n# Verify installation\nbeanstalkd --version\n```\n\n### Alpine Linux\n\n```bash\n# Install beanstalkd\napk add --no-cache beanstalkd\n\n# Enable and start service\nrc-update add beanstalkd default\nrc-service beanstalkd start\n\n# Verify installation\nbeanstalkd --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install beanstalkd\nsudo zypper install -y beanstalkd\n\n# Enable and start service\nsudo systemctl enable --now beanstalkd\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=11300/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nbeanstalkd --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install beanstalkd\n\n# Start service\nbrew services start beanstalkd\n\n# Verify installation\nbeanstalkd --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install beanstalkd\n\n# Enable in rc.conf\necho 'beanstalkd_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice beanstalkd start\n\n# Verify installation\nbeanstalkd --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install beanstalkd\n\n# Or using Scoop\nscoop install beanstalkd\n\n# Verify installation\nbeanstalkd --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/beanstalkd\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nbeanstalkd --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable beanstalkd\n\n# Start service\nsudo systemctl start beanstalkd\n\n# Stop service\nsudo systemctl stop beanstalkd\n\n# Restart service\nsudo systemctl restart beanstalkd\n\n# Check status\nsudo systemctl status beanstalkd\n\n# View logs\nsudo journalctl -u beanstalkd -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add beanstalkd default\n\n# Start service\nrc-service beanstalkd start\n\n# Stop service\nrc-service beanstalkd stop\n\n# Restart service\nrc-service beanstalkd restart\n\n# Check status\nrc-service beanstalkd status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'beanstalkd_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice beanstalkd start\n\n# Stop service\nservice beanstalkd stop\n\n# Restart service\nservice beanstalkd restart\n\n# Check status\nservice beanstalkd status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start beanstalkd\nbrew services stop beanstalkd\nbrew services restart beanstalkd\n\n# Check status\nbrew services list | grep beanstalkd\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start beanstalkd\n\n# Stop service\nnet stop beanstalkd\n\n# Using PowerShell\nStart-Service beanstalkd\nStop-Service beanstalkd\nRestart-Service beanstalkd\n\n# Check status\nGet-Service beanstalkd\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream beanstalkd_backend {\n    server 127.0.0.1:11300;\n}\n\nserver {\n    listen 80;\n    server_name beanstalkd.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name beanstalkd.example.com;\n\n    ssl_certificate /etc/ssl/certs/beanstalkd.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/beanstalkd.example.com.key;\n\n    location / {\n        proxy_pass http://beanstalkd_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName beanstalkd.example.com\n    Redirect permanent / https://beanstalkd.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName beanstalkd.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/beanstalkd.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/beanstalkd.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:11300/\n    ProxyPassReverse / http://127.0.0.1:11300/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend beanstalkd_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/beanstalkd.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend beanstalkd_backend\n\nbackend beanstalkd_backend\n    balance roundrobin\n    server beanstalkd1 127.0.0.1:11300 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R beanstalkd:beanstalkd /etc/beanstalkd\nsudo chmod 750 /etc/beanstalkd\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=11300/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status beanstalkd\n\n# View logs\nsudo journalctl -u beanstalkd -f\n\n# Monitor resource usage\ntop -p $(pgrep beanstalkd)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/beanstalkd\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/beanstalkd-backup-$DATE.tar.gz\" /etc/beanstalkd /var/lib/beanstalkd\n\necho \"Backup completed: $BACKUP_DIR/beanstalkd-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop beanstalkd\n\n# Restore from backup\ntar -xzf /backup/beanstalkd/beanstalkd-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start beanstalkd\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u beanstalkd -n 100\nsudo tail -f /var/log/beanstalkd/beanstalkd.log\n\n# Check configuration\nbeanstalkd --version\n\n# Check permissions\nls -la /etc/beanstalkd\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 11300\n\n# Test connectivity\ntelnet localhost 11300\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep beanstalkd)\n\n# Check disk I/O\niotop -p $(pgrep beanstalkd)\n\n# Check connections\nss -an | grep 11300\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  beanstalkd:\n    image: beanstalkd:latest\n    ports:\n      - \"11300:11300\"\n    volumes:\n      - ./config:/etc/beanstalkd\n      - ./data:/var/lib/beanstalkd\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update beanstalkd\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade beanstalkd\n\n# Arch Linux\nsudo pacman -Syu beanstalkd\n\n# Alpine Linux\napk update && apk upgrade beanstalkd\n\n# openSUSE\nsudo zypper update beanstalkd\n\n# FreeBSD\npkg update && pkg upgrade beanstalkd\n\n# Always backup before updates\ntar -czf /backup/beanstalkd-pre-update-$(date +%Y%m%d).tar.gz /etc/beanstalkd\n\n# Restart after updates\nsudo systemctl restart beanstalkd\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/beanstalkd\n\n# Clean old logs\nfind /var/log/beanstalkd -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/beanstalkd\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.beanstalkd.org/\n- GitHub Repository: https://github.com/beanstalkd/beanstalkd\n- Community Forum: https://forum.beanstalkd.org/\n- Best Practices Guide: https://docs.beanstalkd.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">beanstalkd is a free and open-source work queue. Beanstalkd provides simple, fast work queue</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 1 core minimum</li>\n<li class=\"mobile-list-item\">RAM: 128MB minimum</li>\n<li class=\"mobile-list-item\">Storage: 1GB for jobs</li>\n<li class=\"mobile-list-item\">Network: Beanstalk protocol</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 11300 (default beanstalkd port)</li>\n<li class=\"mobile-list-item\">None</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install beanstalkd\nsudo dnf install -y beanstalkd\n\n# Enable and start service\nsudo systemctl enable --now beanstalkd\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=11300/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nbeanstalkd --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install beanstalkd\nsudo apt install -y beanstalkd\n\n# Enable and start service\nsudo systemctl enable --now beanstalkd\n\n# Configure firewall\nsudo ufw allow 11300\n\n# Verify installation\nbeanstalkd --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install beanstalkd\nsudo pacman -S beanstalkd\n\n# Enable and start service\nsudo systemctl enable --now beanstalkd\n\n# Verify installation\nbeanstalkd --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install beanstalkd\napk add --no-cache beanstalkd\n\n# Enable and start service\nrc-update add beanstalkd default\nrc-service beanstalkd start\n\n# Verify installation\nbeanstalkd --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install beanstalkd\nsudo zypper install -y beanstalkd\n\n# Enable and start service\nsudo systemctl enable --now beanstalkd\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=11300/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nbeanstalkd --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install beanstalkd\n\n# Start service\nbrew services start beanstalkd\n\n# Verify installation\nbeanstalkd --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install beanstalkd\n\n# Enable in rc.conf\necho &#039;beanstalkd_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice beanstalkd start\n\n# Verify installation\nbeanstalkd --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install beanstalkd\n\n# Or using Scoop\nscoop install beanstalkd\n\n# Verify installation\nbeanstalkd --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/beanstalkd\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nbeanstalkd --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable beanstalkd\n\n# Start service\nsudo systemctl start beanstalkd\n\n# Stop service\nsudo systemctl stop beanstalkd\n\n# Restart service\nsudo systemctl restart beanstalkd\n\n# Check status\nsudo systemctl status beanstalkd\n\n# View logs\nsudo journalctl -u beanstalkd -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add beanstalkd default\n\n# Start service\nrc-service beanstalkd start\n\n# Stop service\nrc-service beanstalkd stop\n\n# Restart service\nrc-service beanstalkd restart\n\n# Check status\nrc-service beanstalkd status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;beanstalkd_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice beanstalkd start\n\n# Stop service\nservice beanstalkd stop\n\n# Restart service\nservice beanstalkd restart\n\n# Check status\nservice beanstalkd status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start beanstalkd\nbrew services stop beanstalkd\nbrew services restart beanstalkd\n\n# Check status\nbrew services list | grep beanstalkd</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start beanstalkd\n\n# Stop service\nnet stop beanstalkd\n\n# Using PowerShell\nStart-Service beanstalkd\nStop-Service beanstalkd\nRestart-Service beanstalkd\n\n# Check status\nGet-Service beanstalkd</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream beanstalkd_backend {\n    server 127.0.0.1:11300;\n}\n\nserver {\n    listen 80;\n    server_name beanstalkd.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name beanstalkd.example.com;\n\n    ssl_certificate /etc/ssl/certs/beanstalkd.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/beanstalkd.example.com.key;\n\n    location / {\n        proxy_pass http://beanstalkd_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName beanstalkd.example.com\n    Redirect permanent / https://beanstalkd.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName beanstalkd.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/beanstalkd.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/beanstalkd.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:11300/\n    ProxyPassReverse / http://127.0.0.1:11300/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend beanstalkd_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/beanstalkd.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend beanstalkd_backend\n\nbackend beanstalkd_backend\n    balance roundrobin\n    server beanstalkd1 127.0.0.1:11300 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R beanstalkd:beanstalkd /etc/beanstalkd\nsudo chmod 750 /etc/beanstalkd\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=11300/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status beanstalkd\n\n# View logs\nsudo journalctl -u beanstalkd -f\n\n# Monitor resource usage\ntop -p $(pgrep beanstalkd)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/beanstalkd&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/beanstalkd-backup-$DATE.tar.gz&quot; /etc/beanstalkd /var/lib/beanstalkd\n\necho &quot;Backup completed: $BACKUP_DIR/beanstalkd-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop beanstalkd\n\n# Restore from backup\ntar -xzf /backup/beanstalkd/beanstalkd-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start beanstalkd</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u beanstalkd -n 100\nsudo tail -f /var/log/beanstalkd/beanstalkd.log\n\n# Check configuration\nbeanstalkd --version\n\n# Check permissions\nls -la /etc/beanstalkd</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 11300\n\n# Test connectivity\ntelnet localhost 11300\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep beanstalkd)\n\n# Check disk I/O\niotop -p $(pgrep beanstalkd)\n\n# Check connections\nss -an | grep 11300</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  beanstalkd:\n    image: beanstalkd:latest\n    ports:\n      - &quot;11300:11300&quot;\n    volumes:\n      - ./config:/etc/beanstalkd\n      - ./data:/var/lib/beanstalkd\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update beanstalkd\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade beanstalkd\n\n# Arch Linux\nsudo pacman -Syu beanstalkd\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade beanstalkd\n\n# openSUSE\nsudo zypper update beanstalkd\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade beanstalkd\n\n# Always backup before updates\ntar -czf /backup/beanstalkd-pre-update-$(date +%Y%m%d).tar.gz /etc/beanstalkd\n\n# Restart after updates\nsudo systemctl restart beanstalkd</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/beanstalkd\n\n# Clean old logs\nfind /var/log/beanstalkd -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/beanstalkd</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.beanstalkd.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/beanstalkd/beanstalkd</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.beanstalkd.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.beanstalkd.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1266,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-10-19T06:18:31.724Z","metadataVersion":"2.0"},{"name":"kafka","displayName":"kafka Installation Guide","slug":"kafka","description":"kafka is a free and open-source distributed streaming platform. Kafka provides high-throughput distributed messaging system","category":"message-queues","subcategory":"message-queues","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,9092],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["message-queues","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/message-queues/kafka","documentationUrl":"https://howtomgr.github.io/message-queues/kafka","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/kafka","updatedAt":"2025-09-16T17:23:13Z","createdAt":"2025-09-16T03:27:47Z","readmeRaw":"# kafka Installation Guide\n\nkafka is a free and open-source distributed streaming platform. Kafka provides high-throughput distributed messaging system\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 4+ cores\n  - RAM: 6GB minimum (32GB+ for production)\n  - Storage: 100GB+ for logs\n  - Network: Kafka protocol\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 9092 (default kafka port)\n  - Zookeeper on 2181\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install kafka\nsudo dnf install -y kafka\n\n# Enable and start service\nsudo systemctl enable --now kafka\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=9092/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nkafka --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install kafka\nsudo apt install -y kafka\n\n# Enable and start service\nsudo systemctl enable --now kafka\n\n# Configure firewall\nsudo ufw allow 9092\n\n# Verify installation\nkafka --version\n```\n\n### Arch Linux\n\n```bash\n# Install kafka\nsudo pacman -S kafka\n\n# Enable and start service\nsudo systemctl enable --now kafka\n\n# Verify installation\nkafka --version\n```\n\n### Alpine Linux\n\n```bash\n# Install kafka\napk add --no-cache kafka\n\n# Enable and start service\nrc-update add kafka default\nrc-service kafka start\n\n# Verify installation\nkafka --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install kafka\nsudo zypper install -y kafka\n\n# Enable and start service\nsudo systemctl enable --now kafka\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=9092/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nkafka --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install kafka\n\n# Start service\nbrew services start kafka\n\n# Verify installation\nkafka --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install kafka\n\n# Enable in rc.conf\necho 'kafka_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice kafka start\n\n# Verify installation\nkafka --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install kafka\n\n# Or using Scoop\nscoop install kafka\n\n# Verify installation\nkafka --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/kafka\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nkafka --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable kafka\n\n# Start service\nsudo systemctl start kafka\n\n# Stop service\nsudo systemctl stop kafka\n\n# Restart service\nsudo systemctl restart kafka\n\n# Check status\nsudo systemctl status kafka\n\n# View logs\nsudo journalctl -u kafka -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add kafka default\n\n# Start service\nrc-service kafka start\n\n# Stop service\nrc-service kafka stop\n\n# Restart service\nrc-service kafka restart\n\n# Check status\nrc-service kafka status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'kafka_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice kafka start\n\n# Stop service\nservice kafka stop\n\n# Restart service\nservice kafka restart\n\n# Check status\nservice kafka status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start kafka\nbrew services stop kafka\nbrew services restart kafka\n\n# Check status\nbrew services list | grep kafka\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start kafka\n\n# Stop service\nnet stop kafka\n\n# Using PowerShell\nStart-Service kafka\nStop-Service kafka\nRestart-Service kafka\n\n# Check status\nGet-Service kafka\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream kafka_backend {\n    server 127.0.0.1:9092;\n}\n\nserver {\n    listen 80;\n    server_name kafka.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name kafka.example.com;\n\n    ssl_certificate /etc/ssl/certs/kafka.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/kafka.example.com.key;\n\n    location / {\n        proxy_pass http://kafka_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName kafka.example.com\n    Redirect permanent / https://kafka.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName kafka.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/kafka.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/kafka.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:9092/\n    ProxyPassReverse / http://127.0.0.1:9092/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend kafka_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/kafka.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend kafka_backend\n\nbackend kafka_backend\n    balance roundrobin\n    server kafka1 127.0.0.1:9092 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R kafka:kafka /etc/kafka\nsudo chmod 750 /etc/kafka\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=9092/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status kafka\n\n# View logs\nsudo journalctl -u kafka -f\n\n# Monitor resource usage\ntop -p $(pgrep kafka)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/kafka\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/kafka-backup-$DATE.tar.gz\" /etc/kafka /var/lib/kafka\n\necho \"Backup completed: $BACKUP_DIR/kafka-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop kafka\n\n# Restore from backup\ntar -xzf /backup/kafka/kafka-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start kafka\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u kafka -n 100\nsudo tail -f /var/log/kafka/kafka.log\n\n# Check configuration\nkafka --version\n\n# Check permissions\nls -la /etc/kafka\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 9092\n\n# Test connectivity\ntelnet localhost 9092\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep kafka)\n\n# Check disk I/O\niotop -p $(pgrep kafka)\n\n# Check connections\nss -an | grep 9092\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  kafka:\n    image: kafka:latest\n    ports:\n      - \"9092:9092\"\n    volumes:\n      - ./config:/etc/kafka\n      - ./data:/var/lib/kafka\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update kafka\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade kafka\n\n# Arch Linux\nsudo pacman -Syu kafka\n\n# Alpine Linux\napk update && apk upgrade kafka\n\n# openSUSE\nsudo zypper update kafka\n\n# FreeBSD\npkg update && pkg upgrade kafka\n\n# Always backup before updates\ntar -czf /backup/kafka-pre-update-$(date +%Y%m%d).tar.gz /etc/kafka\n\n# Restart after updates\nsudo systemctl restart kafka\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/kafka\n\n# Clean old logs\nfind /var/log/kafka -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/kafka\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.kafka.org/\n- GitHub Repository: https://github.com/kafka/kafka\n- Community Forum: https://forum.kafka.org/\n- Best Practices Guide: https://docs.kafka.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">kafka is a free and open-source distributed streaming platform. Kafka provides high-throughput distributed messaging system</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 4+ cores</li>\n<li class=\"mobile-list-item\">RAM: 6GB minimum (32GB+ for production)</li>\n<li class=\"mobile-list-item\">Storage: 100GB+ for logs</li>\n<li class=\"mobile-list-item\">Network: Kafka protocol</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 9092 (default kafka port)</li>\n<li class=\"mobile-list-item\">Zookeeper on 2181</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install kafka\nsudo dnf install -y kafka\n\n# Enable and start service\nsudo systemctl enable --now kafka\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=9092/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nkafka --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install kafka\nsudo apt install -y kafka\n\n# Enable and start service\nsudo systemctl enable --now kafka\n\n# Configure firewall\nsudo ufw allow 9092\n\n# Verify installation\nkafka --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install kafka\nsudo pacman -S kafka\n\n# Enable and start service\nsudo systemctl enable --now kafka\n\n# Verify installation\nkafka --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install kafka\napk add --no-cache kafka\n\n# Enable and start service\nrc-update add kafka default\nrc-service kafka start\n\n# Verify installation\nkafka --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install kafka\nsudo zypper install -y kafka\n\n# Enable and start service\nsudo systemctl enable --now kafka\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=9092/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nkafka --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install kafka\n\n# Start service\nbrew services start kafka\n\n# Verify installation\nkafka --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install kafka\n\n# Enable in rc.conf\necho &#039;kafka_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice kafka start\n\n# Verify installation\nkafka --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install kafka\n\n# Or using Scoop\nscoop install kafka\n\n# Verify installation\nkafka --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/kafka\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nkafka --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable kafka\n\n# Start service\nsudo systemctl start kafka\n\n# Stop service\nsudo systemctl stop kafka\n\n# Restart service\nsudo systemctl restart kafka\n\n# Check status\nsudo systemctl status kafka\n\n# View logs\nsudo journalctl -u kafka -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add kafka default\n\n# Start service\nrc-service kafka start\n\n# Stop service\nrc-service kafka stop\n\n# Restart service\nrc-service kafka restart\n\n# Check status\nrc-service kafka status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;kafka_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice kafka start\n\n# Stop service\nservice kafka stop\n\n# Restart service\nservice kafka restart\n\n# Check status\nservice kafka status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start kafka\nbrew services stop kafka\nbrew services restart kafka\n\n# Check status\nbrew services list | grep kafka</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start kafka\n\n# Stop service\nnet stop kafka\n\n# Using PowerShell\nStart-Service kafka\nStop-Service kafka\nRestart-Service kafka\n\n# Check status\nGet-Service kafka</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream kafka_backend {\n    server 127.0.0.1:9092;\n}\n\nserver {\n    listen 80;\n    server_name kafka.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name kafka.example.com;\n\n    ssl_certificate /etc/ssl/certs/kafka.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/kafka.example.com.key;\n\n    location / {\n        proxy_pass http://kafka_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName kafka.example.com\n    Redirect permanent / https://kafka.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName kafka.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/kafka.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/kafka.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:9092/\n    ProxyPassReverse / http://127.0.0.1:9092/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend kafka_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/kafka.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend kafka_backend\n\nbackend kafka_backend\n    balance roundrobin\n    server kafka1 127.0.0.1:9092 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R kafka:kafka /etc/kafka\nsudo chmod 750 /etc/kafka\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=9092/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status kafka\n\n# View logs\nsudo journalctl -u kafka -f\n\n# Monitor resource usage\ntop -p $(pgrep kafka)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/kafka&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/kafka-backup-$DATE.tar.gz&quot; /etc/kafka /var/lib/kafka\n\necho &quot;Backup completed: $BACKUP_DIR/kafka-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop kafka\n\n# Restore from backup\ntar -xzf /backup/kafka/kafka-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start kafka</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u kafka -n 100\nsudo tail -f /var/log/kafka/kafka.log\n\n# Check configuration\nkafka --version\n\n# Check permissions\nls -la /etc/kafka</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 9092\n\n# Test connectivity\ntelnet localhost 9092\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep kafka)\n\n# Check disk I/O\niotop -p $(pgrep kafka)\n\n# Check connections\nss -an | grep 9092</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  kafka:\n    image: kafka:latest\n    ports:\n      - &quot;9092:9092&quot;\n    volumes:\n      - ./config:/etc/kafka\n      - ./data:/var/lib/kafka\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update kafka\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade kafka\n\n# Arch Linux\nsudo pacman -Syu kafka\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade kafka\n\n# openSUSE\nsudo zypper update kafka\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade kafka\n\n# Always backup before updates\ntar -czf /backup/kafka-pre-update-$(date +%Y%m%d).tar.gz /etc/kafka\n\n# Restart after updates\nsudo systemctl restart kafka</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/kafka\n\n# Clean old logs\nfind /var/log/kafka -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/kafka</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.kafka.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/kafka/kafka</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.kafka.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.kafka.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1271,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-10-19T06:17:07.260Z","metadataVersion":"2.0"},{"name":"nsq","displayName":"nsq Installation Guide","slug":"nsq","description":"nsq is a free and open-source message platform. NSQ provides distributed messaging platform designed for scale","category":"message-queues","subcategory":"message-queues","difficultyLevel":"intermediate","estimatedSetupTime":"15-30 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","macos","freebsd","windows"],"defaultPorts":[80,443,4151],"installationMethods":["native-packages","source-compilation"],"features":["multi-os-support","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["message-queues","containerization","observability","data-storage","networking","security","data-protection"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Open Source","websiteUrl":"https://howtomgr.github.io/message-queues/nsq","documentationUrl":"https://howtomgr.github.io/message-queues/nsq","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/nsq","updatedAt":"2025-09-16T17:36:17Z","createdAt":"2025-09-16T03:52:38Z","readmeRaw":"# nsq Installation Guide\n\nnsq is a free and open-source message platform. NSQ provides distributed messaging platform designed for scale\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n- **Hardware Requirements**:\n  - CPU: 2+ cores\n  - RAM: 2GB minimum\n  - Storage: 10GB for messages\n  - Network: HTTP/TCP\n- **Operating System**: \n  - Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)\n  - macOS: 10.14+ (Mojave or newer)\n  - Windows: Windows Server 2016+ or Windows 10\n  - FreeBSD: 11.0+\n- **Network Requirements**:\n  - Port 4151 (default nsq port)\n  - TCP on 4150, HTTP on 4171\n- **Dependencies**:\n  - See official documentation for specific requirements\n- **System Access**: root or sudo privileges required\n\n\n## 2. Supported Operating Systems\n\nThis guide supports installation on:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04/22.04/24.04 LTS\n- Arch Linux (rolling release)\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- SUSE Linux Enterprise Server (SLES) 15+\n- macOS 12+ (Monterey and later) \n- FreeBSD 13+\n- Windows 10/11/Server 2019+ (where applicable)\n\n## 3. Installation\n\n### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install nsq\nsudo dnf install -y nsq\n\n# Enable and start service\nsudo systemctl enable --now nsq\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=4151/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nnsq --version\n```\n\n### Debian/Ubuntu\n\n```bash\n# Update package index\nsudo apt update\n\n# Install nsq\nsudo apt install -y nsq\n\n# Enable and start service\nsudo systemctl enable --now nsq\n\n# Configure firewall\nsudo ufw allow 4151\n\n# Verify installation\nnsq --version\n```\n\n### Arch Linux\n\n```bash\n# Install nsq\nsudo pacman -S nsq\n\n# Enable and start service\nsudo systemctl enable --now nsq\n\n# Verify installation\nnsq --version\n```\n\n### Alpine Linux\n\n```bash\n# Install nsq\napk add --no-cache nsq\n\n# Enable and start service\nrc-update add nsq default\nrc-service nsq start\n\n# Verify installation\nnsq --version\n```\n\n### openSUSE/SLES\n\n```bash\n# Install nsq\nsudo zypper install -y nsq\n\n# Enable and start service\nsudo systemctl enable --now nsq\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=4151/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nnsq --version\n```\n\n### macOS\n\n```bash\n# Using Homebrew\nbrew install nsq\n\n# Start service\nbrew services start nsq\n\n# Verify installation\nnsq --version\n```\n\n### FreeBSD\n\n```bash\n# Using pkg\npkg install nsq\n\n# Enable in rc.conf\necho 'nsq_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice nsq start\n\n# Verify installation\nnsq --version\n```\n\n### Windows\n\n```bash\n# Using Chocolatey\nchoco install nsq\n\n# Or using Scoop\nscoop install nsq\n\n# Verify installation\nnsq --version\n```\n\n## Initial Configuration\n\n### Basic Configuration\n\n```bash\n# Create configuration directory\nsudo mkdir -p /etc/nsq\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nnsq --version\n```\n\n## 5. Service Management\n\n### systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)\n\n```bash\n# Enable service\nsudo systemctl enable nsq\n\n# Start service\nsudo systemctl start nsq\n\n# Stop service\nsudo systemctl stop nsq\n\n# Restart service\nsudo systemctl restart nsq\n\n# Check status\nsudo systemctl status nsq\n\n# View logs\nsudo journalctl -u nsq -f\n```\n\n### OpenRC (Alpine Linux)\n\n```bash\n# Enable service\nrc-update add nsq default\n\n# Start service\nrc-service nsq start\n\n# Stop service\nrc-service nsq stop\n\n# Restart service\nrc-service nsq restart\n\n# Check status\nrc-service nsq status\n```\n\n### rc.d (FreeBSD)\n\n```bash\n# Enable in /etc/rc.conf\necho 'nsq_enable=\"YES\"' >> /etc/rc.conf\n\n# Start service\nservice nsq start\n\n# Stop service\nservice nsq stop\n\n# Restart service\nservice nsq restart\n\n# Check status\nservice nsq status\n```\n\n### launchd (macOS)\n\n```bash\n# Using Homebrew services\nbrew services start nsq\nbrew services stop nsq\nbrew services restart nsq\n\n# Check status\nbrew services list | grep nsq\n```\n\n### Windows Service Manager\n\n```powershell\n# Start service\nnet start nsq\n\n# Stop service\nnet stop nsq\n\n# Using PowerShell\nStart-Service nsq\nStop-Service nsq\nRestart-Service nsq\n\n# Check status\nGet-Service nsq\n```\n\n## Advanced Configuration\n\nSee the official documentation for advanced configuration options.\n\n## Reverse Proxy Setup\n\n### nginx Configuration\n\n```nginx\nupstream nsq_backend {\n    server 127.0.0.1:4151;\n}\n\nserver {\n    listen 80;\n    server_name nsq.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name nsq.example.com;\n\n    ssl_certificate /etc/ssl/certs/nsq.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/nsq.example.com.key;\n\n    location / {\n        proxy_pass http://nsq_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\n### Apache Configuration\n\n```apache\n<VirtualHost *:80>\n    ServerName nsq.example.com\n    Redirect permanent / https://nsq.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName nsq.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/nsq.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/nsq.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:4151/\n    ProxyPassReverse / http://127.0.0.1:4151/\n</VirtualHost>\n```\n\n### HAProxy Configuration\n\n```haproxy\nfrontend nsq_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/nsq.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend nsq_backend\n\nbackend nsq_backend\n    balance roundrobin\n    server nsq1 127.0.0.1:4151 check\n```\n\n## Security Configuration\n\n### Basic Security Setup\n\n```bash\n# Set appropriate permissions\nsudo chown -R nsq:nsq /etc/nsq\nsudo chmod 750 /etc/nsq\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=4151/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on\n```\n\n## Database Setup\n\nSee official documentation for database configuration requirements.\n\n## Performance Optimization\n\n### System Tuning\n\n```bash\n# Basic system tuning\necho 'net.core.somaxconn = 65535' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog = 65535' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n## Monitoring\n\n### Basic Monitoring\n\n```bash\n# Check service status\nsudo systemctl status nsq\n\n# View logs\nsudo journalctl -u nsq -f\n\n# Monitor resource usage\ntop -p $(pgrep nsq)\n```\n\n## 9. Backup and Restore\n\n### Backup Script\n\n```bash\n#!/bin/bash\n# Basic backup script\nBACKUP_DIR=\"/backup/nsq\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p \"$BACKUP_DIR\"\ntar -czf \"$BACKUP_DIR/nsq-backup-$DATE.tar.gz\" /etc/nsq /var/lib/nsq\n\necho \"Backup completed: $BACKUP_DIR/nsq-backup-$DATE.tar.gz\"\n```\n\n### Restore Procedure\n\n```bash\n# Stop service\nsudo systemctl stop nsq\n\n# Restore from backup\ntar -xzf /backup/nsq/nsq-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start nsq\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Service won't start**:\n```bash\n# Check logs\nsudo journalctl -u nsq -n 100\nsudo tail -f /var/log/nsq/nsq.log\n\n# Check configuration\nnsq --version\n\n# Check permissions\nls -la /etc/nsq\n```\n\n2. **Connection issues**:\n```bash\n# Check if service is listening\nsudo ss -tlnp | grep 4151\n\n# Test connectivity\ntelnet localhost 4151\n\n# Check firewall\nsudo firewall-cmd --list-all\n```\n\n3. **Performance issues**:\n```bash\n# Check resource usage\ntop -p $(pgrep nsq)\n\n# Check disk I/O\niotop -p $(pgrep nsq)\n\n# Check connections\nss -an | grep 4151\n```\n\n## Integration Examples\n\n### Docker Compose Example\n\n```yaml\nversion: '3.8'\nservices:\n  nsq:\n    image: nsq:latest\n    ports:\n      - \"4151:4151\"\n    volumes:\n      - ./config:/etc/nsq\n      - ./data:/var/lib/nsq\n    restart: unless-stopped\n```\n\n## Maintenance\n\n### Update Procedures\n\n```bash\n# RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update nsq\n\n# Debian/Ubuntu\nsudo apt update && sudo apt upgrade nsq\n\n# Arch Linux\nsudo pacman -Syu nsq\n\n# Alpine Linux\napk update && apk upgrade nsq\n\n# openSUSE\nsudo zypper update nsq\n\n# FreeBSD\npkg update && pkg upgrade nsq\n\n# Always backup before updates\ntar -czf /backup/nsq-pre-update-$(date +%Y%m%d).tar.gz /etc/nsq\n\n# Restart after updates\nsudo systemctl restart nsq\n```\n\n### Regular Maintenance\n\n```bash\n# Log rotation\nsudo logrotate -f /etc/logrotate.d/nsq\n\n# Clean old logs\nfind /var/log/nsq -name \"*.log\" -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/nsq\n```\n\n## Additional Resources\n\n- Official Documentation: https://docs.nsq.org/\n- GitHub Repository: https://github.com/nsq/nsq\n- Community Forum: https://forum.nsq.org/\n- Best Practices Guide: https://docs.nsq.org/best-practices\n\n---\n\n**Note:** This guide is part of the [HowToMgr](https://howtomgr.github.io) collection. Always refer to official documentation for the most up-to-date information.\n","readmeHtml":"<p class=\"mobile-paragraph\">nsq is a free and open-source message platform. NSQ provides distributed messaging platform designed for scale</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<li class=\"mobile-list-item\"><strong>Hardware Requirements</strong>:</li>\n<li class=\"mobile-list-item\">CPU: 2+ cores</li>\n<li class=\"mobile-list-item\">RAM: 2GB minimum</li>\n<li class=\"mobile-list-item\">Storage: 10GB for messages</li>\n<li class=\"mobile-list-item\">Network: HTTP/TCP</li>\n<li class=\"mobile-list-item\"><strong>Operating System</strong>: </li>\n<li class=\"mobile-list-item\">Linux: Any modern distribution (RHEL, Debian, Ubuntu, CentOS, Fedora, Arch, Alpine, openSUSE)</li>\n<li class=\"mobile-list-item\">macOS: 10.14+ (Mojave or newer)</li>\n<li class=\"mobile-list-item\">Windows: Windows Server 2016+ or Windows 10</li>\n<li class=\"mobile-list-item\">FreeBSD: 11.0+</li>\n<li class=\"mobile-list-item\"><strong>Network Requirements</strong>:</li>\n<li class=\"mobile-list-item\">Port 4151 (default nsq port)</li>\n<li class=\"mobile-list-item\">TCP on 4150, HTTP on 4171</li>\n<li class=\"mobile-list-item\"><strong>Dependencies</strong>:</li>\n<li class=\"mobile-list-item\">See official documentation for specific requirements</li>\n<li class=\"mobile-list-item\"><strong>System Access</strong>: root or sudo privileges required</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">This guide supports installation on:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04/22.04/24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux (rolling release)</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">SUSE Linux Enterprise Server (SLES) 15+</li>\n<li class=\"mobile-list-item\">macOS 12+ (Monterey and later) </li>\n<li class=\"mobile-list-item\">FreeBSD 13+</li>\n<li class=\"mobile-list-item\">Windows 10/11/Server 2019+ (where applicable)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"rhelcentosrocky-linuxalmalinux\" class=\"mobile-header\">RHEL/CentOS/Rocky Linux/AlmaLinux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install EPEL repository if needed\nsudo dnf install -y epel-release\n\n# Install nsq\nsudo dnf install -y nsq\n\n# Enable and start service\nsudo systemctl enable --now nsq\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=4151/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nnsq --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"debianubuntu\" class=\"mobile-header\">Debian/Ubuntu</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Update package index\nsudo apt update\n\n# Install nsq\nsudo apt install -y nsq\n\n# Enable and start service\nsudo systemctl enable --now nsq\n\n# Configure firewall\nsudo ufw allow 4151\n\n# Verify installation\nnsq --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"arch-linux\" class=\"mobile-header\">Arch Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install nsq\nsudo pacman -S nsq\n\n# Enable and start service\nsudo systemctl enable --now nsq\n\n# Verify installation\nnsq --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"alpine-linux\" class=\"mobile-header\">Alpine Linux</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install nsq\napk add --no-cache nsq\n\n# Enable and start service\nrc-update add nsq default\nrc-service nsq start\n\n# Verify installation\nnsq --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"opensusesles\" class=\"mobile-header\">openSUSE/SLES</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install nsq\nsudo zypper install -y nsq\n\n# Enable and start service\nsudo systemctl enable --now nsq\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=4151/tcp\nsudo firewall-cmd --reload\n\n# Verify installation\nnsq --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"macos\" class=\"mobile-header\">macOS</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew\nbrew install nsq\n\n# Start service\nbrew services start nsq\n\n# Verify installation\nnsq --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"freebsd\" class=\"mobile-header\">FreeBSD</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using pkg\npkg install nsq\n\n# Enable in rc.conf\necho &#039;nsq_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice nsq start\n\n# Verify installation\nnsq --version</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows\" class=\"mobile-header\">Windows</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Chocolatey\nchoco install nsq\n\n# Or using Scoop\nscoop install nsq\n\n# Verify installation\nnsq --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"initial-configuration\" class=\"mobile-header\">Initial Configuration</h2>\n<h3 id=\"basic-configuration\" class=\"mobile-header\">Basic Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create configuration directory\nsudo mkdir -p /etc/nsq\n\n# Set up basic configuration\n# See official documentation for detailed configuration options\n\n# Test configuration\nnsq --version</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-rhel-debian-ubuntu-arch-opensuse\" class=\"mobile-header\">systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nsudo systemctl enable nsq\n\n# Start service\nsudo systemctl start nsq\n\n# Stop service\nsudo systemctl stop nsq\n\n# Restart service\nsudo systemctl restart nsq\n\n# Check status\nsudo systemctl status nsq\n\n# View logs\nsudo journalctl -u nsq -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"openrc-alpine-linux\" class=\"mobile-header\">OpenRC (Alpine Linux)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable service\nrc-update add nsq default\n\n# Start service\nrc-service nsq start\n\n# Stop service\nrc-service nsq stop\n\n# Restart service\nrc-service nsq restart\n\n# Check status\nrc-service nsq status</code></pre>\n      </div>\n    </div>\n<h3 id=\"rcd-freebsd\" class=\"mobile-header\">rc.d (FreeBSD)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable in /etc/rc.conf\necho &#039;nsq_enable=&quot;YES&quot;&#039; &gt;&gt; /etc/rc.conf\n\n# Start service\nservice nsq start\n\n# Stop service\nservice nsq stop\n\n# Restart service\nservice nsq restart\n\n# Check status\nservice nsq status</code></pre>\n      </div>\n    </div>\n<h3 id=\"launchd-macos\" class=\"mobile-header\">launchd (macOS)</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Using Homebrew services\nbrew services start nsq\nbrew services stop nsq\nbrew services restart nsq\n\n# Check status\nbrew services list | grep nsq</code></pre>\n      </div>\n    </div>\n<h3 id=\"windows-service-manager\" class=\"mobile-header\">Windows Service Manager</h3>\n<div class=\"mobile-code-block\" data-language=\"powershell\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">powershell</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-powershell\"># Start service\nnet start nsq\n\n# Stop service\nnet stop nsq\n\n# Using PowerShell\nStart-Service nsq\nStop-Service nsq\nRestart-Service nsq\n\n# Check status\nGet-Service nsq</code></pre>\n      </div>\n    </div>\n<h2 id=\"advanced-configuration\" class=\"mobile-header\">Advanced Configuration</h2>\n<p class=\"mobile-paragraph\">See the official documentation for advanced configuration options.</p>\n<h2 id=\"reverse-proxy-setup\" class=\"mobile-header\">Reverse Proxy Setup</h2>\n<h3 id=\"nginx-configuration\" class=\"mobile-header\">nginx Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\">upstream nsq_backend {\n    server 127.0.0.1:4151;\n}\n\nserver {\n    listen 80;\n    server_name nsq.example.com;\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name nsq.example.com;\n\n    ssl_certificate /etc/ssl/certs/nsq.example.com.crt;\n    ssl_certificate_key /etc/ssl/private/nsq.example.com.key;\n\n    location / {\n        proxy_pass http://nsq_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"apache-configuration\" class=\"mobile-header\">Apache Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"apache\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">apache</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-apache\">&lt;VirtualHost *:80&gt;\n    ServerName nsq.example.com\n    Redirect permanent / https://nsq.example.com/\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName nsq.example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/nsq.example.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/nsq.example.com.key\n    \n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    ProxyPass / http://127.0.0.1:4151/\n    ProxyPassReverse / http://127.0.0.1:4151/\n&lt;/VirtualHost&gt;</code></pre>\n      </div>\n    </div>\n<h3 id=\"haproxy-configuration\" class=\"mobile-header\">HAProxy Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"haproxy\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">haproxy</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-haproxy\">frontend nsq_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/nsq.pem\n    redirect scheme https if !{ ssl_fc }\n    default_backend nsq_backend\n\nbackend nsq_backend\n    balance roundrobin\n    server nsq1 127.0.0.1:4151 check</code></pre>\n      </div>\n    </div>\n<h2 id=\"security-configuration\" class=\"mobile-header\">Security Configuration</h2>\n<h3 id=\"basic-security-setup\" class=\"mobile-header\">Basic Security Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set appropriate permissions\nsudo chown -R nsq:nsq /etc/nsq\nsudo chmod 750 /etc/nsq\n\n# Configure firewall\nsudo firewall-cmd --permanent --add-port=4151/tcp\nsudo firewall-cmd --reload\n\n# Enable SELinux policies (if applicable)\nsudo setsebool -P httpd_can_network_connect on</code></pre>\n      </div>\n    </div>\n<h2 id=\"database-setup\" class=\"mobile-header\">Database Setup</h2>\n<p class=\"mobile-paragraph\">See official documentation for database configuration requirements.</p>\n<h2 id=\"performance-optimization\" class=\"mobile-header\">Performance Optimization</h2>\n<h3 id=\"system-tuning\" class=\"mobile-header\">System Tuning</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Basic system tuning\necho &#039;net.core.somaxconn = 65535&#039; | sudo tee -a /etc/sysctl.conf\necho &#039;net.ipv4.tcp_max_syn_backlog = 65535&#039; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h2 id=\"monitoring\" class=\"mobile-header\">Monitoring</h2>\n<h3 id=\"basic-monitoring\" class=\"mobile-header\">Basic Monitoring</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check service status\nsudo systemctl status nsq\n\n# View logs\nsudo journalctl -u nsq -f\n\n# Monitor resource usage\ntop -p $(pgrep nsq)</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"backup-script\" class=\"mobile-header\">Backup Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# Basic backup script\nBACKUP_DIR=&quot;/backup/nsq&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p &quot;$BACKUP_DIR&quot;\ntar -czf &quot;$BACKUP_DIR/nsq-backup-$DATE.tar.gz&quot; /etc/nsq /var/lib/nsq\n\necho &quot;Backup completed: $BACKUP_DIR/nsq-backup-$DATE.tar.gz&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedure\" class=\"mobile-header\">Restore Procedure</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Stop service\nsudo systemctl stop nsq\n\n# Restore from backup\ntar -xzf /backup/nsq/nsq-backup-*.tar.gz -C /\n\n# Start service\nsudo systemctl start nsq</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Service won't start</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check logs\nsudo journalctl -u nsq -n 100\nsudo tail -f /var/log/nsq/nsq.log\n\n# Check configuration\nnsq --version\n\n# Check permissions\nls -la /etc/nsq</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Connection issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is listening\nsudo ss -tlnp | grep 4151\n\n# Test connectivity\ntelnet localhost 4151\n\n# Check firewall\nsudo firewall-cmd --list-all</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Performance issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check resource usage\ntop -p $(pgrep nsq)\n\n# Check disk I/O\niotop -p $(pgrep nsq)\n\n# Check connections\nss -an | grep 4151</code></pre>\n      </div>\n    </div>\n<h2 id=\"integration-examples\" class=\"mobile-header\">Integration Examples</h2>\n<h3 id=\"docker-compose-example\" class=\"mobile-header\">Docker Compose Example</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\">version: &#039;3.8&#039;\nservices:\n  nsq:\n    image: nsq:latest\n    ports:\n      - &quot;4151:4151&quot;\n    volumes:\n      - ./config:/etc/nsq\n      - ./data:/var/lib/nsq\n    restart: unless-stopped</code></pre>\n      </div>\n    </div>\n<h2 id=\"maintenance\" class=\"mobile-header\">Maintenance</h2>\n<h3 id=\"update-procedures\" class=\"mobile-header\">Update Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># RHEL/CentOS/Rocky/AlmaLinux\nsudo dnf update nsq\n\n# Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade nsq\n\n# Arch Linux\nsudo pacman -Syu nsq\n\n# Alpine Linux\napk update &amp;&amp; apk upgrade nsq\n\n# openSUSE\nsudo zypper update nsq\n\n# FreeBSD\npkg update &amp;&amp; pkg upgrade nsq\n\n# Always backup before updates\ntar -czf /backup/nsq-pre-update-$(date +%Y%m%d).tar.gz /etc/nsq\n\n# Restart after updates\nsudo systemctl restart nsq</code></pre>\n      </div>\n    </div>\n<h3 id=\"regular-maintenance\" class=\"mobile-header\">Regular Maintenance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Log rotation\nsudo logrotate -f /etc/logrotate.d/nsq\n\n# Clean old logs\nfind /var/log/nsq -name &quot;*.log&quot; -mtime +30 -delete\n\n# Check disk usage\ndu -sh /var/lib/nsq</code></pre>\n      </div>\n    </div>\n<h2 id=\"additional-resources\" class=\"mobile-header\">Additional Resources</h2>\n<li class=\"mobile-list-item\">Official Documentation: https://docs.nsq.org/</li>\n<li class=\"mobile-list-item\">GitHub Repository: https://github.com/nsq/nsq</li>\n<li class=\"mobile-list-item\">Community Forum: https://forum.nsq.org/</li>\n<li class=\"mobile-list-item\">Best Practices Guide: https://docs.nsq.org/best-practices</li>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\"><strong>Note:</strong> This guide is part of the <a href=\"https://howtomgr.github.io\" target=\"_blank\" rel=\"noopener\" class=\"mobile-link\">HowToMgr</a> collection. Always refer to official documentation for the most up-to-date information.</p>","readTime":"7 min","wordCount":1271,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"RHEL/CentOS/Rocky Linux/AlmaLinux","id":"rhelcentosrocky-linuxalmalinux"},{"level":3,"text":"Debian/Ubuntu","id":"debianubuntu"},{"level":3,"text":"Arch Linux","id":"arch-linux"},{"level":3,"text":"Alpine Linux","id":"alpine-linux"},{"level":3,"text":"openSUSE/SLES","id":"opensusesles"},{"level":3,"text":"macOS","id":"macos"},{"level":3,"text":"FreeBSD","id":"freebsd"},{"level":3,"text":"Windows","id":"windows"},{"level":2,"text":"Initial Configuration","id":"initial-configuration"},{"level":3,"text":"Basic Configuration","id":"basic-configuration"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd (RHEL, Debian, Ubuntu, Arch, openSUSE)","id":"systemd-rhel-debian-ubuntu-arch-opensuse"},{"level":3,"text":"OpenRC (Alpine Linux)","id":"openrc-alpine-linux"},{"level":3,"text":"rc.d (FreeBSD)","id":"rcd-freebsd"},{"level":3,"text":"launchd (macOS)","id":"launchd-macos"},{"level":3,"text":"Windows Service Manager","id":"windows-service-manager"},{"level":2,"text":"Advanced Configuration","id":"advanced-configuration"},{"level":2,"text":"Reverse Proxy Setup","id":"reverse-proxy-setup"},{"level":3,"text":"nginx Configuration","id":"nginx-configuration"},{"level":3,"text":"Apache Configuration","id":"apache-configuration"},{"level":3,"text":"HAProxy Configuration","id":"haproxy-configuration"},{"level":2,"text":"Security Configuration","id":"security-configuration"},{"level":3,"text":"Basic Security Setup","id":"basic-security-setup"},{"level":2,"text":"Database Setup","id":"database-setup"},{"level":2,"text":"Performance Optimization","id":"performance-optimization"},{"level":3,"text":"System Tuning","id":"system-tuning"},{"level":2,"text":"Monitoring","id":"monitoring"},{"level":3,"text":"Basic Monitoring","id":"basic-monitoring"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Backup Script","id":"backup-script"},{"level":3,"text":"Restore Procedure","id":"restore-procedure"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":2,"text":"Integration Examples","id":"integration-examples"},{"level":3,"text":"Docker Compose Example","id":"docker-compose-example"},{"level":2,"text":"Maintenance","id":"maintenance"},{"level":3,"text":"Update Procedures","id":"update-procedures"},{"level":3,"text":"Regular Maintenance","id":"regular-maintenance"},{"level":2,"text":"Additional Resources","id":"additional-resources"}],"lastBuilt":"2025-10-19T06:16:18.181Z","metadataVersion":"2.0"}]},"__N_SSG":true}