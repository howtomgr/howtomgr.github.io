{"pageProps":{"category":{"key":"gaming","name":"Gaming","description":"Gaming tools and applications","icon":"ðŸ”§","color":"#6272a4"},"guides":[{"name":"pufferpanel","displayName":"PufferPanel Installation Guide","slug":"pufferpanel","description":"PufferPanel is a free and open-source game server management panel designed for both individuals and game server providers. It serves as a FOSS alternative to proprietary panels like TCAdmin, GameCP, or AMP, providing web-based management for game servers including Minecraft, CS:GO, Team Fortress 2, and many more.","category":"gaming","subcategory":"server-management","difficultyLevel":"intermediate","estimatedSetupTime":"30-60 minutes","supportedOS":["rhel","centos","rocky","almalinux","debian","ubuntu","arch","alpine","opensuse","sles","fedora","windows"],"defaultPorts":[8080,5657],"installationMethods":["package-manager","docker","manual-binary"],"features":["multi-os-support","game-server-management","web-interface","docker-integration","multi-user-support","template-system","sftp-access","api-access","resource-monitoring","backup-management","comprehensive-documentation","security-hardening","performance-optimization","backup-restore-procedures","troubleshooting-guides"],"tags":["gaming","game-servers","minecraft","csgo","panel","management","docker","multi-user","web-ui"],"maintenanceStatus":"active","specVersion":"2.0","version":"1.0.0","license":"Apache-2.0","websiteUrl":"https://howtomgr.github.io/gaming/pufferpanel","documentationUrl":"https://howtomgr.github.io/gaming/pufferpanel","language":null,"stars":0,"forks":0,"topics":[],"githubUrl":"https://github.com/howtomgr/pufferpanel","updatedAt":"2025-09-16T17:45:10Z","createdAt":"2025-09-16T10:56:48Z","readmeRaw":"# PufferPanel Installation Guide\n\nPufferPanel is a free and open-source game server management panel designed for both individuals and game server providers. It serves as a FOSS alternative to proprietary game server panels like Pterodactyl (with paid features), TCAdmin, GameCP, or AMP (Application Management Panel). PufferPanel provides a web-based interface for managing game servers including Minecraft, CS:GO, Team Fortress 2, and many more, with features for user management, server templates, and Docker integration.\n\n## Table of Contents\n1. [Prerequisites](#prerequisites)\n2. [Supported Operating Systems](#supported-operating-systems)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Service Management](#service-management)\n6. [Troubleshooting](#troubleshooting)\n7. [Security Considerations](#security-considerations)\n8. [Performance Tuning](#performance-tuning)\n9. [Backup and Restore](#backup-and-restore)\n10. [System Requirements](#system-requirements)\n11. [Support](#support)\n12. [Contributing](#contributing)\n13. [License](#license)\n14. [Acknowledgments](#acknowledgments)\n15. [Version History](#version-history)\n16. [Appendices](#appendices)\n\n## 1. Prerequisites\n\n### Hardware Requirements\n- **CPU**: 2+ cores (4+ recommended for multiple servers)\n- **RAM**: 2GB minimum (4GB+ recommended)\n- **Storage**: 20GB+ for panel and game servers\n- **Network**: Static IP recommended for game hosting\n\n### Software Requirements\n- **Web Server**: Built-in or nginx/Apache for reverse proxy\n- **Database**: MariaDB/MySQL 5.7+ or SQLite\n- **Docker**: Optional but recommended for isolation\n- **systemd**: For service management\n\n### Network Requirements\n- **Ports**: \n  - 8080: Web interface (default)\n  - 5657: SFTP server (default)\n  - Game ports: Varies by game (25565 for Minecraft, 27015 for Source games)\n\n## 2. Supported Operating Systems\n\nPufferPanel officially supports:\n- RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)\n- Debian 11/12\n- Ubuntu 20.04 LTS / 22.04 LTS / 24.04 LTS\n- Arch Linux\n- Alpine Linux 3.18+\n- openSUSE Leap 15.5+ / Tumbleweed\n- Fedora 38+\n- Windows Server 2019/2022 (limited support)\n\n## 3. Installation\n\n### Method 1: Official Installer (Recommended)\n\n#### RHEL/CentOS/Rocky Linux/AlmaLinux\n\n```bash\n# Install dependencies\nsudo dnf install -y curl\n\n# Download and run installer\ncurl -s https://packagecloud.io/install/repositories/pufferpanel/pufferpanel/script.rpm.sh | sudo bash\n\n# Install PufferPanel\nsudo dnf install -y pufferpanel\n\n# Install MariaDB (if not using SQLite)\nsudo dnf install -y mariadb mariadb-server\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create database\nsudo mysql -e \"CREATE DATABASE pufferpanel;\"\nsudo mysql -e \"CREATE USER 'pufferpanel'@'localhost' IDENTIFIED BY 'your_secure_password';\"\nsudo mysql -e \"GRANT ALL PRIVILEGES ON pufferpanel.* TO 'pufferpanel'@'localhost';\"\nsudo mysql -e \"FLUSH PRIVILEGES;\"\n\n# Enable and start PufferPanel\nsudo systemctl enable --now pufferpanel\n\n# Add first user\nsudo pufferpanel user add\n```\n\n#### Debian/Ubuntu\n\n```bash\n# Add PufferPanel repository\ncurl -s https://packagecloud.io/install/repositories/pufferpanel/pufferpanel/script.deb.sh | sudo bash\n\n# Update and install\nsudo apt update\nsudo apt install -y pufferpanel\n\n# Install MariaDB\nsudo apt install -y mariadb-server\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create database\nsudo mysql -e \"CREATE DATABASE pufferpanel;\"\nsudo mysql -e \"CREATE USER 'pufferpanel'@'localhost' IDENTIFIED BY 'your_secure_password';\"\nsudo mysql -e \"GRANT ALL PRIVILEGES ON pufferpanel.* TO 'pufferpanel'@'localhost';\"\nsudo mysql -e \"FLUSH PRIVILEGES;\"\n\n# Configure PufferPanel\nsudo systemctl enable --now pufferpanel\n\n# Create admin user\nsudo pufferpanel user add --admin\n```\n\n#### Arch Linux\n\n```bash\n# Install from AUR\nyay -S pufferpanel\n\n# Or manual installation\n# Download latest release\nPUFFERPANEL_VERSION=$(curl -s https://api.github.com/repos/pufferpanel/pufferpanel/releases/latest | grep tag_name | cut -d '\"' -f 4)\nwget \"https://github.com/pufferpanel/pufferpanel/releases/download/${PUFFERPANEL_VERSION}/pufferpanel_${PUFFERPANEL_VERSION}_linux_amd64.deb\"\n\n# Extract binary\nar x pufferpanel_*.deb\ntar -xf data.tar.xz\nsudo cp -r usr/* /usr/\nsudo cp -r etc/* /etc/\n\n# Install dependencies\nsudo pacman -S mariadb\n\n# Initialize MariaDB\nsudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\nsudo systemctl enable --now mariadb\n\n# Continue with database setup as above\n```\n\n#### Alpine Linux\n\n```bash\n# Install dependencies\napk add --no-cache curl mariadb mariadb-client\n\n# Download PufferPanel\nPUFFERPANEL_VERSION=$(curl -s https://api.github.com/repos/pufferpanel/pufferpanel/releases/latest | grep tag_name | cut -d '\"' -f 4)\nwget \"https://github.com/pufferpanel/pufferpanel/releases/download/${PUFFERPANEL_VERSION}/pufferpanel_${PUFFERPANEL_VERSION}_linux_amd64.tar.gz\"\n\n# Extract and install\ntar -xzf pufferpanel_*.tar.gz\nmv pufferpanel /usr/local/bin/\nchmod +x /usr/local/bin/pufferpanel\n\n# Create directories\nmkdir -p /etc/pufferpanel /var/lib/pufferpanel /var/log/pufferpanel\n```\n\n### Method 2: Docker Installation\n\n```bash\n# Create docker-compose.yml\ncat > docker-compose.yml << 'EOF'\nversion: '3.8'\n\nservices:\n  pufferpanel:\n    image: pufferpanel/pufferpanel:latest\n    container_name: pufferpanel\n    restart: unless-stopped\n    ports:\n      - \"8080:8080\"\n      - \"5657:5657\"\n    environment:\n      PUFFER_PANEL_DATABASE_DIALECT: \"sqlite3\"\n      PUFFER_PANEL_DATABASE_URL: \"file:/var/lib/pufferpanel/pufferpanel.db?cache=shared\"\n      PUFFER_PANEL_TOKEN_PRIVATE: \"your_secret_key_here\"\n      PUFFER_WEB_HOST: \"0.0.0.0:8080\"\n    volumes:\n      - pufferpanel_config:/etc/pufferpanel\n      - pufferpanel_data:/var/lib/pufferpanel\n      - pufferpanel_servers:/var/lib/pufferpanel/servers\n      - /var/run/docker.sock:/var/run/docker.sock\n\nvolumes:\n  pufferpanel_config:\n  pufferpanel_data:\n  pufferpanel_servers:\nEOF\n\n# Start PufferPanel\ndocker-compose up -d\n\n# Create admin user\ndocker-compose exec pufferpanel /pufferpanel user add --admin\n```\n\n### Method 3: Manual Installation\n\n```bash\n# Download binary\nPUFFERPANEL_VERSION=\"2.6.3\"  # Check latest version\nwget \"https://github.com/pufferpanel/pufferpanel/releases/download/v${PUFFERPANEL_VERSION}/pufferpanel_${PUFFERPANEL_VERSION}_linux_amd64.tar.gz\"\n\n# Extract files\ntar -xzf pufferpanel_*.tar.gz\n\n# Install binary\nsudo mv pufferpanel /usr/local/bin/\nsudo chmod +x /usr/local/bin/pufferpanel\n\n# Create user and directories\nsudo useradd -r -s /bin/false -d /var/lib/pufferpanel pufferpanel\nsudo mkdir -p /etc/pufferpanel /var/lib/pufferpanel/servers /var/log/pufferpanel\nsudo chown -R pufferpanel:pufferpanel /etc/pufferpanel /var/lib/pufferpanel /var/log/pufferpanel\n\n# Generate config\nsudo -u pufferpanel pufferpanel config init\n```\n\n## 4. Configuration\n\n### Configuration File\n\nEdit `/etc/pufferpanel/config.json`:\n```json\n{\n  \"logs\": {\n    \"level\": \"info\",\n    \"path\": \"/var/log/pufferpanel\",\n    \"deleteAfter\": 7\n  },\n  \"panel\": {\n    \"database\": {\n      \"dialect\": \"mysql\",\n      \"host\": \"localhost\",\n      \"port\": 3306,\n      \"name\": \"pufferpanel\",\n      \"username\": \"pufferpanel\",\n      \"password\": \"your_secure_password\"\n    },\n    \"web\": {\n      \"host\": \"0.0.0.0:8080\",\n      \"ssl\": {\n        \"enabled\": false,\n        \"cert\": \"/path/to/cert.pem\",\n        \"key\": \"/path/to/key.pem\"\n      }\n    },\n    \"sftp\": {\n      \"host\": \"0.0.0.0:5657\",\n      \"generate\": true,\n      \"key\": \"/etc/pufferpanel/sftp_host_key\"\n    },\n    \"email\": {\n      \"enabled\": false,\n      \"from\": \"noreply@example.com\",\n      \"host\": \"smtp.example.com\",\n      \"port\": 587,\n      \"username\": \"smtp_user\",\n      \"password\": \"smtp_pass\"\n    },\n    \"settings\": {\n      \"defaultTheme\": \"PufferPanel\",\n      \"registrationEnabled\": false,\n      \"requireEmailVerification\": false\n    },\n    \"token\": {\n      \"private\": \"your_random_secret_key_here\"\n    }\n  },\n  \"daemon\": {\n    \"data\": {\n      \"root\": \"/var/lib/pufferpanel/servers\"\n    },\n    \"sftp\": {\n      \"enabled\": true\n    },\n    \"docker\": {\n      \"enabled\": true,\n      \"socket\": \"/var/run/docker.sock\"\n    }\n  }\n}\n```\n\n### Database Configuration\n\n#### MariaDB/MySQL\n```sql\n-- Create database and user\nCREATE DATABASE pufferpanel CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\nCREATE USER 'pufferpanel'@'localhost' IDENTIFIED BY 'secure_password';\nGRANT ALL PRIVILEGES ON pufferpanel.* TO 'pufferpanel'@'localhost';\nFLUSH PRIVILEGES;\n```\n\n#### PostgreSQL\n```sql\n-- Create database and user\nCREATE DATABASE pufferpanel;\nCREATE USER pufferpanel WITH ENCRYPTED PASSWORD 'secure_password';\nGRANT ALL PRIVILEGES ON DATABASE pufferpanel TO pufferpanel;\n```\n\n### Environment Variables\n\n```bash\n# Database configuration\nexport PUFFER_PANEL_DATABASE_DIALECT=\"mysql\"\nexport PUFFER_PANEL_DATABASE_HOST=\"localhost\"\nexport PUFFER_PANEL_DATABASE_NAME=\"pufferpanel\"\nexport PUFFER_PANEL_DATABASE_USERNAME=\"pufferpanel\"\nexport PUFFER_PANEL_DATABASE_PASSWORD=\"secure_password\"\n\n# Web configuration\nexport PUFFER_WEB_HOST=\"0.0.0.0:8080\"\nexport PUFFER_PANEL_REGISTRATION_ENABLED=\"false\"\n\n# Token secret\nexport PUFFER_PANEL_TOKEN_PRIVATE=\"your_secret_key_here\"\n```\n\n## 5. Service Management\n\n### systemd Service\n\nCreate `/etc/systemd/system/pufferpanel.service`:\n```ini\n[Unit]\nDescription=PufferPanel Game Server Management Panel\nAfter=network.target mariadb.service\n\n[Service]\nType=simple\nUser=pufferpanel\nGroup=pufferpanel\nWorkingDirectory=/var/lib/pufferpanel\nExecStart=/usr/local/bin/pufferpanel run\nRestart=always\nRestartSec=5\nStandardOutput=journal\nStandardError=journal\n\n# Security hardening\nNoNewPrivileges=true\nPrivateTmp=true\nProtectSystem=strict\nProtectHome=true\nReadWritePaths=/var/lib/pufferpanel /var/log/pufferpanel /etc/pufferpanel\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\n# Enable and start service\nsudo systemctl daemon-reload\nsudo systemctl enable --now pufferpanel\nsudo systemctl status pufferpanel\n\n# View logs\nsudo journalctl -u pufferpanel -f\n```\n\n### User Management\n\n```bash\n# Add admin user\nsudo pufferpanel user add --email admin@example.com --name admin --admin\n\n# Add regular user\nsudo pufferpanel user add --email user@example.com --name user\n\n# Change user password\nsudo pufferpanel user password --email user@example.com\n\n# List users\nsudo pufferpanel user list\n\n# Delete user\nsudo pufferpanel user delete --email user@example.com\n```\n\n### Template Management\n\n```bash\n# Import official templates\nsudo pufferpanel template import\n\n# List available templates\nsudo pufferpanel template list\n\n# Create custom template\ncat > minecraft.json << 'EOF'\n{\n  \"type\": \"minecraft\",\n  \"display\": \"Minecraft Server\",\n  \"install\": {\n    \"commands\": [\n      {\n        \"type\": \"download\",\n        \"files\": \"https://launcher.mojang.com/v1/objects/server.jar\"\n      }\n    ]\n  },\n  \"run\": {\n    \"stop\": \"stop\",\n    \"command\": \"java -Xmx${memory}M -jar server.jar nogui\",\n    \"workingDirectory\": \"/server\"\n  }\n}\nEOF\n\nsudo pufferpanel template import minecraft.json\n```\n\n## 6. Troubleshooting\n\n### Common Issues\n\n1. **Panel not accessible**:\n```bash\n# Check if service is running\nsudo systemctl status pufferpanel\n\n# Check ports\nsudo netstat -tlnp | grep -E \"8080|5657\"\n\n# Check firewall\nsudo firewall-cmd --list-ports\nsudo ufw status\n\n# Test local connection\ncurl http://localhost:8080\n```\n\n2. **Database connection errors**:\n```bash\n# Test database connection\nmysql -u pufferpanel -p -h localhost pufferpanel\n\n# Check database service\nsudo systemctl status mariadb\n\n# Verify credentials in config\nsudo cat /etc/pufferpanel/config.json | jq .panel.database\n```\n\n3. **Permission issues**:\n```bash\n# Fix file permissions\nsudo chown -R pufferpanel:pufferpanel /var/lib/pufferpanel\nsudo chown -R pufferpanel:pufferpanel /etc/pufferpanel\nsudo chmod -R 755 /var/lib/pufferpanel/servers\n\n# Check Docker permissions\nsudo usermod -aG docker pufferpanel\n```\n\n4. **Server creation fails**:\n```bash\n# Check Docker status\nsudo systemctl status docker\n\n# Verify Docker socket permissions\nls -la /var/run/docker.sock\n\n# Check available disk space\ndf -h /var/lib/pufferpanel/servers\n\n# Review daemon logs\nsudo journalctl -u pufferpanel --since \"10 minutes ago\"\n```\n\n### Debug Mode\n\n```bash\n# Enable debug logging\nsudo pufferpanel config set logs.level debug\n\n# Run in foreground with debug\nsudo -u pufferpanel pufferpanel run --debug\n\n# Check detailed logs\ntail -f /var/log/pufferpanel/pufferpanel.log\n```\n\n## 7. Security Considerations\n\n### Web Interface Security\n\n```nginx\n# Nginx reverse proxy with SSL\nserver {\n    listen 443 ssl http2;\n    server_name panel.example.com;\n    \n    ssl_certificate /etc/ssl/certs/panel.crt;\n    ssl_certificate_key /etc/ssl/private/panel.key;\n    \n    location / {\n        proxy_pass http://127.0.0.1:8080;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n### Firewall Configuration\n\n```bash\n# firewalld (RHEL/CentOS)\nsudo firewall-cmd --permanent --add-port=8080/tcp\nsudo firewall-cmd --permanent --add-port=5657/tcp\nsudo firewall-cmd --permanent --add-port=25565/tcp  # Minecraft\nsudo firewall-cmd --reload\n\n# UFW (Ubuntu/Debian)\nsudo ufw allow 8080/tcp\nsudo ufw allow 5657/tcp\nsudo ufw allow 25565/tcp\nsudo ufw enable\n\n# iptables\nsudo iptables -A INPUT -p tcp --dport 8080 -j ACCEPT\nsudo iptables -A INPUT -p tcp --dport 5657 -j ACCEPT\n```\n\n### User Permissions\n\n```json\n// Role-based permissions in PufferPanel\n{\n  \"roles\": {\n    \"admin\": {\n      \"permissions\": [\"*\"]\n    },\n    \"moderator\": {\n      \"permissions\": [\n        \"server.view\",\n        \"server.console\",\n        \"server.start\",\n        \"server.stop\",\n        \"server.files.view\"\n      ]\n    },\n    \"user\": {\n      \"permissions\": [\n        \"server.view\",\n        \"server.console\",\n        \"server.files.view\"\n      ]\n    }\n  }\n}\n```\n\n### Docker Security\n\n```bash\n# Use Docker rootless mode\ndockerd-rootless-setuptool.sh install\n\n# Limit container resources\ndocker run -d \\\n  --name minecraft \\\n  --memory=\"2g\" \\\n  --cpus=\"2.0\" \\\n  --security-opt=\"no-new-privileges:true\" \\\n  --read-only \\\n  pufferpanel/minecraft\n```\n\n## 8. Performance Tuning\n\n### Panel Optimization\n\n```json\n// config.json optimizations\n{\n  \"panel\": {\n    \"database\": {\n      \"maxConnections\": 100,\n      \"connectionTimeout\": 30,\n      \"idleTimeout\": 600\n    },\n    \"cache\": {\n      \"enabled\": true,\n      \"ttl\": 3600\n    }\n  }\n}\n```\n\n### Server Resource Limits\n\n```bash\n# Set resource limits per server\npufferpanel server config minecraft --memory 2048 --cpu 200\n\n# Configure swap limit\necho \"vm.swappiness=10\" | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p\n```\n\n### Database Optimization\n\n```sql\n-- MariaDB optimizations\nSET GLOBAL innodb_buffer_pool_size = 256M;\nSET GLOBAL max_connections = 200;\nSET GLOBAL query_cache_size = 32M;\nSET GLOBAL query_cache_type = 1;\n\n-- Add indexes\nALTER TABLE servers ADD INDEX idx_user_id (user_id);\nALTER TABLE server_permissions ADD INDEX idx_server_user (server_id, user_id);\n```\n\n### Storage Performance\n\n```bash\n# Use separate disk for game servers\nsudo mkdir -p /mnt/games\nsudo mount /dev/sdb1 /mnt/games\nsudo ln -s /mnt/games /var/lib/pufferpanel/servers\n\n# Enable compression for backups\npufferpanel config set backup.compression gzip\n```\n\n## 9. Backup and Restore\n\n### Panel Backup\n\n```bash\n#!/bin/bash\n# backup-pufferpanel.sh\n\nBACKUP_DIR=\"/var/backups/pufferpanel\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p $BACKUP_DIR\n\n# Stop PufferPanel\nsudo systemctl stop pufferpanel\n\n# Backup database\nmysqldump -u pufferpanel -p pufferpanel | gzip > $BACKUP_DIR/database_$DATE.sql.gz\n\n# Backup configuration\ntar -czf $BACKUP_DIR/config_$DATE.tar.gz /etc/pufferpanel\n\n# Backup templates\ntar -czf $BACKUP_DIR/templates_$DATE.tar.gz /var/lib/pufferpanel/templates\n\n# Backup server data (optional, can be large)\ntar -czf $BACKUP_DIR/servers_$DATE.tar.gz /var/lib/pufferpanel/servers\n\n# Start PufferPanel\nsudo systemctl start pufferpanel\n\necho \"Backup completed: $BACKUP_DIR\"\n```\n\n### Server Backup\n\n```bash\n# Backup individual server\npufferpanel server backup minecraft --dest /var/backups/servers/\n\n# Automated server backups\ncat > /etc/cron.d/pufferpanel-backup << 'EOF'\n0 2 * * * pufferpanel /usr/local/bin/pufferpanel server backup --all --dest /var/backups/servers/\nEOF\n```\n\n### Restore Procedures\n\n```bash\n# Restore database\nsudo systemctl stop pufferpanel\ngunzip -c database_backup.sql.gz | mysql -u pufferpanel -p pufferpanel\n\n# Restore configuration\nsudo tar -xzf config_backup.tar.gz -C /\n\n# Restore templates\nsudo tar -xzf templates_backup.tar.gz -C /\n\n# Restore servers\nsudo tar -xzf servers_backup.tar.gz -C /\n\n# Fix permissions\nsudo chown -R pufferpanel:pufferpanel /var/lib/pufferpanel /etc/pufferpanel\n\n# Start PufferPanel\nsudo systemctl start pufferpanel\n```\n\n## 10. System Requirements\n\n### Minimum Requirements\n- **CPU**: 2 cores\n- **RAM**: 2GB (plus game server requirements)\n- **Storage**: 20GB\n- **Network**: 10 Mbps\n\n### Recommended Requirements\n- **CPU**: 4+ cores\n- **RAM**: 8GB+\n- **Storage**: 100GB+ SSD\n- **Network**: 100 Mbps+\n\n### Per Game Server Requirements\n\n| Game | RAM | CPU | Storage |\n|------|-----|-----|---------|\n| Minecraft | 1-4GB | 1-2 cores | 10GB |\n| CS:GO | 2GB | 2 cores | 30GB |\n| Terraria | 1GB | 1 core | 2GB |\n| Rust | 4-8GB | 3-4 cores | 25GB |\n| ARK | 8-16GB | 4 cores | 60GB |\n\n## 11. Support\n\n### Official Resources\n- **Website**: https://pufferpanel.com\n- **GitHub**: https://github.com/pufferpanel/pufferpanel\n- **Documentation**: https://docs.pufferpanel.com\n- **Discord**: https://discord.gg/pufferpanel\n\n### Community Support\n- **Discord Server**: Active community support\n- **GitHub Issues**: https://github.com/pufferpanel/pufferpanel/issues\n- **Reddit**: r/PufferPanel\n- **Forum**: https://community.pufferpanel.com\n\n## 12. Contributing\n\n### How to Contribute\n1. Fork the repository on GitHub\n2. Create a feature branch\n3. Submit pull request\n4. Follow Go coding standards\n5. Include tests and documentation\n\n### Development Setup\n```bash\n# Clone repository\ngit clone https://github.com/pufferpanel/pufferpanel.git\ncd pufferpanel\n\n# Install Go\nwget https://go.dev/dl/go1.21.linux-amd64.tar.gz\nsudo tar -C /usr/local -xzf go1.21.linux-amd64.tar.gz\nexport PATH=$PATH:/usr/local/go/bin\n\n# Install dependencies\ngo mod download\n\n# Build PufferPanel\ngo build -o pufferpanel github.com/pufferpanel/pufferpanel/v2/cmd/pufferpanel\n\n# Run tests\ngo test ./...\n```\n\n## 13. License\n\nPufferPanel is licensed under the Apache License 2.0.\n\nKey points:\n- Free to use, modify, and distribute\n- Commercial use allowed\n- Patent grant included\n- Must include license notice\n\n## 14. Acknowledgments\n\n### Credits\n- **PufferPanel Team**: Core development team\n- **Community Contributors**: Template creators and testers\n- **Game Developers**: For server software\n- **Docker**: Container technology\n\n## 15. Version History\n\n### Recent Releases\n- **v2.6.x**: Current stable with improved Docker support\n- **v2.5.x**: Enhanced template system\n- **v2.4.x**: Improved security features\n\n### Major Features by Version\n- **v2.6**: Better Docker integration, improved UI\n- **v2.5**: Template marketplace, OAuth support\n- **v2.4**: Multi-node support\n\n## 16. Appendices\n\n### A. Game Server Templates\n\n#### Minecraft Template\n```json\n{\n  \"name\": \"Minecraft Java\",\n  \"type\": \"minecraft-java\",\n  \"install\": {\n    \"commands\": [\n      {\n        \"type\": \"download\",\n        \"files\": \"https://launcher.mojang.com/v1/objects/server.jar\"\n      },\n      {\n        \"type\": \"writefile\",\n        \"target\": \"eula.txt\",\n        \"text\": \"eula=true\"\n      }\n    ]\n  },\n  \"run\": {\n    \"stop\": \"stop\",\n    \"pre\": [],\n    \"post\": [],\n    \"arguments\": [\n      \"-Xmx${memory}M\",\n      \"-jar\",\n      \"server.jar\",\n      \"nogui\"\n    ],\n    \"program\": \"java\"\n  },\n  \"environment\": {\n    \"type\": \"standard\"\n  },\n  \"data\": {\n    \"memory\": {\n      \"value\": \"1024\",\n      \"required\": true,\n      \"desc\": \"Memory in MB\",\n      \"display\": \"Memory (MB)\",\n      \"type\": \"integer\"\n    }\n  }\n}\n```\n\n### B. API Usage Examples\n\n```bash\n# Authenticate\nTOKEN=$(curl -X POST http://localhost:8080/api/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\":\"admin@example.com\",\"password\":\"password\"}' | jq -r .token)\n\n# List servers\ncurl -H \"Authorization: Bearer $TOKEN\" \\\n  http://localhost:8080/api/servers\n\n# Create server\ncurl -X POST http://localhost:8080/api/servers \\\n  -H \"Authorization: Bearer $TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"My Minecraft Server\",\n    \"type\": \"minecraft-java\",\n    \"users\": [\"admin@example.com\"],\n    \"node\": \"local\",\n    \"data\": {\n      \"memory\": \"2048\"\n    }\n  }'\n\n# Server control\ncurl -X POST http://localhost:8080/api/servers/{id}/start \\\n  -H \"Authorization: Bearer $TOKEN\"\n```\n\n### C. Docker Compose Examples\n\n```yaml\n# Multi-server setup\nversion: '3.8'\n\nservices:\n  panel:\n    image: pufferpanel/pufferpanel:latest\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - ./data:/var/lib/pufferpanel\n      - /var/run/docker.sock:/var/run/docker.sock\n    environment:\n      PUFFER_PANEL_DATABASE_DIALECT: mysql\n      PUFFER_PANEL_DATABASE_HOST: db\n      PUFFER_PANEL_DATABASE_NAME: pufferpanel\n      PUFFER_PANEL_DATABASE_USERNAME: pufferpanel\n      PUFFER_PANEL_DATABASE_PASSWORD: secure_password\n    depends_on:\n      - db\n\n  db:\n    image: mariadb:latest\n    environment:\n      MYSQL_ROOT_PASSWORD: root_password\n      MYSQL_DATABASE: pufferpanel\n      MYSQL_USER: pufferpanel\n      MYSQL_PASSWORD: secure_password\n    volumes:\n      - db_data:/var/lib/mysql\n\nvolumes:\n  db_data:\n```\n\n### D. Security Hardening Script\n\n```bash\n#!/bin/bash\n# harden-pufferpanel.sh\n\n# Disable root login\npufferpanel config set security.disableRoot true\n\n# Enable 2FA requirement\npufferpanel config set security.require2FA true\n\n# Set session timeout\npufferpanel config set security.sessionTimeout 3600\n\n# Enable brute force protection\npufferpanel config set security.maxLoginAttempts 5\npufferpanel config set security.lockoutDuration 900\n\n# Restrict file uploads\npufferpanel config set security.maxUploadSize 104857600\npufferpanel config set security.allowedExtensions \".txt,.properties,.yml,.json\"\n\n# Enable audit logging\npufferpanel config set logs.auditEnabled true\npufferpanel config set logs.auditFile \"/var/log/pufferpanel/audit.log\"\n\necho \"Security hardening complete\"\n```\n\n---\n\nFor more information and updates, visit https://github.com/howtomgr/pufferpanel","readmeHtml":"<p class=\"mobile-paragraph\">PufferPanel is a free and open-source game server management panel designed for both individuals and game server providers. It serves as a FOSS alternative to proprietary game server panels like Pterodactyl (with paid features), TCAdmin, GameCP, or AMP (Application Management Panel). PufferPanel provides a web-based interface for managing game servers including Minecraft, CS:GO, Team Fortress 2, and many more, with features for user management, server templates, and Docker integration.</p>\n<h2 id=\"1-prerequisites\" class=\"mobile-header\">1. Prerequisites</h2>\n<h3 id=\"hardware-requirements\" class=\"mobile-header\">Hardware Requirements</h3>\n<li class=\"mobile-list-item\"><strong>CPU</strong>: 2+ cores (4+ recommended for multiple servers)</li>\n<li class=\"mobile-list-item\"><strong>RAM</strong>: 2GB minimum (4GB+ recommended)</li>\n<li class=\"mobile-list-item\"><strong>Storage</strong>: 20GB+ for panel and game servers</li>\n<li class=\"mobile-list-item\"><strong>Network</strong>: Static IP recommended for game hosting</li>\n<h3 id=\"software-requirements\" class=\"mobile-header\">Software Requirements</h3>\n<li class=\"mobile-list-item\"><strong>Web Server</strong>: Built-in or nginx/Apache for reverse proxy</li>\n<li class=\"mobile-list-item\"><strong>Database</strong>: MariaDB/MySQL 5.7+ or SQLite</li>\n<li class=\"mobile-list-item\"><strong>Docker</strong>: Optional but recommended for isolation</li>\n<li class=\"mobile-list-item\"><strong>systemd</strong>: For service management</li>\n<h3 id=\"network-requirements\" class=\"mobile-header\">Network Requirements</h3>\n<li class=\"mobile-list-item\"><strong>Ports</strong>: </li>\n<li class=\"mobile-list-item\">8080: Web interface (default)</li>\n<li class=\"mobile-list-item\">5657: SFTP server (default)</li>\n<li class=\"mobile-list-item\">Game ports: Varies by game (25565 for Minecraft, 27015 for Source games)</li>\n<h2 id=\"2-supported-operating-systems\" class=\"mobile-header\">2. Supported Operating Systems</h2>\n<p class=\"mobile-paragraph\">PufferPanel officially supports:</p>\n<li class=\"mobile-list-item\">RHEL 8/9 and derivatives (CentOS Stream, Rocky Linux, AlmaLinux)</li>\n<li class=\"mobile-list-item\">Debian 11/12</li>\n<li class=\"mobile-list-item\">Ubuntu 20.04 LTS / 22.04 LTS / 24.04 LTS</li>\n<li class=\"mobile-list-item\">Arch Linux</li>\n<li class=\"mobile-list-item\">Alpine Linux 3.18+</li>\n<li class=\"mobile-list-item\">openSUSE Leap 15.5+ / Tumbleweed</li>\n<li class=\"mobile-list-item\">Fedora 38+</li>\n<li class=\"mobile-list-item\">Windows Server 2019/2022 (limited support)</li>\n<h2 id=\"3-installation\" class=\"mobile-header\">3. Installation</h2>\n<h3 id=\"method-1-official-installer-recommended\" class=\"mobile-header\">Method 1: Official Installer (Recommended)</h3>\n<p class=\"mobile-paragraph\">#### RHEL/CentOS/Rocky Linux/AlmaLinux</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install dependencies\nsudo dnf install -y curl\n\n# Download and run installer\ncurl -s https://packagecloud.io/install/repositories/pufferpanel/pufferpanel/script.rpm.sh | sudo bash\n\n# Install PufferPanel\nsudo dnf install -y pufferpanel\n\n# Install MariaDB (if not using SQLite)\nsudo dnf install -y mariadb mariadb-server\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create database\nsudo mysql -e &quot;CREATE DATABASE pufferpanel;&quot;\nsudo mysql -e &quot;CREATE USER &#039;pufferpanel&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;your_secure_password&#039;;&quot;\nsudo mysql -e &quot;GRANT ALL PRIVILEGES ON pufferpanel.* TO &#039;pufferpanel&#039;@&#039;localhost&#039;;&quot;\nsudo mysql -e &quot;FLUSH PRIVILEGES;&quot;\n\n# Enable and start PufferPanel\nsudo systemctl enable --now pufferpanel\n\n# Add first user\nsudo pufferpanel user add</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Debian/Ubuntu</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Add PufferPanel repository\ncurl -s https://packagecloud.io/install/repositories/pufferpanel/pufferpanel/script.deb.sh | sudo bash\n\n# Update and install\nsudo apt update\nsudo apt install -y pufferpanel\n\n# Install MariaDB\nsudo apt install -y mariadb-server\nsudo systemctl enable --now mariadb\nsudo mysql_secure_installation\n\n# Create database\nsudo mysql -e &quot;CREATE DATABASE pufferpanel;&quot;\nsudo mysql -e &quot;CREATE USER &#039;pufferpanel&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;your_secure_password&#039;;&quot;\nsudo mysql -e &quot;GRANT ALL PRIVILEGES ON pufferpanel.* TO &#039;pufferpanel&#039;@&#039;localhost&#039;;&quot;\nsudo mysql -e &quot;FLUSH PRIVILEGES;&quot;\n\n# Configure PufferPanel\nsudo systemctl enable --now pufferpanel\n\n# Create admin user\nsudo pufferpanel user add --admin</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Arch Linux</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install from AUR\nyay -S pufferpanel\n\n# Or manual installation\n# Download latest release\nPUFFERPANEL_VERSION=$(curl -s https://api.github.com/repos/pufferpanel/pufferpanel/releases/latest | grep tag_name | cut -d &#039;&quot;&#039; -f 4)\nwget &quot;https://github.com/pufferpanel/pufferpanel/releases/download/${PUFFERPANEL_VERSION}/pufferpanel_${PUFFERPANEL_VERSION}_linux_amd64.deb&quot;\n\n# Extract binary\nar x pufferpanel_*.deb\ntar -xf data.tar.xz\nsudo cp -r usr/* /usr/\nsudo cp -r etc/* /etc/\n\n# Install dependencies\nsudo pacman -S mariadb\n\n# Initialize MariaDB\nsudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\nsudo systemctl enable --now mariadb\n\n# Continue with database setup as above</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### Alpine Linux</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Install dependencies\napk add --no-cache curl mariadb mariadb-client\n\n# Download PufferPanel\nPUFFERPANEL_VERSION=$(curl -s https://api.github.com/repos/pufferpanel/pufferpanel/releases/latest | grep tag_name | cut -d &#039;&quot;&#039; -f 4)\nwget &quot;https://github.com/pufferpanel/pufferpanel/releases/download/${PUFFERPANEL_VERSION}/pufferpanel_${PUFFERPANEL_VERSION}_linux_amd64.tar.gz&quot;\n\n# Extract and install\ntar -xzf pufferpanel_*.tar.gz\nmv pufferpanel /usr/local/bin/\nchmod +x /usr/local/bin/pufferpanel\n\n# Create directories\nmkdir -p /etc/pufferpanel /var/lib/pufferpanel /var/log/pufferpanel</code></pre>\n      </div>\n    </div>\n<h3 id=\"method-2-docker-installation\" class=\"mobile-header\">Method 2: Docker Installation</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Create docker-compose.yml\ncat &gt; docker-compose.yml &lt;&lt; &#039;EOF&#039;\nversion: &#039;3.8&#039;\n\nservices:\n  pufferpanel:\n    image: pufferpanel/pufferpanel:latest\n    container_name: pufferpanel\n    restart: unless-stopped\n    ports:\n      - &quot;8080:8080&quot;\n      - &quot;5657:5657&quot;\n    environment:\n      PUFFER_PANEL_DATABASE_DIALECT: &quot;sqlite3&quot;\n      PUFFER_PANEL_DATABASE_URL: &quot;file:/var/lib/pufferpanel/pufferpanel.db?cache=shared&quot;\n      PUFFER_PANEL_TOKEN_PRIVATE: &quot;your_secret_key_here&quot;\n      PUFFER_WEB_HOST: &quot;0.0.0.0:8080&quot;\n    volumes:\n      - pufferpanel_config:/etc/pufferpanel\n      - pufferpanel_data:/var/lib/pufferpanel\n      - pufferpanel_servers:/var/lib/pufferpanel/servers\n      - /var/run/docker.sock:/var/run/docker.sock\n\nvolumes:\n  pufferpanel_config:\n  pufferpanel_data:\n  pufferpanel_servers:\nEOF\n\n# Start PufferPanel\ndocker-compose up -d\n\n# Create admin user\ndocker-compose exec pufferpanel /pufferpanel user add --admin</code></pre>\n      </div>\n    </div>\n<h3 id=\"method-3-manual-installation\" class=\"mobile-header\">Method 3: Manual Installation</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Download binary\nPUFFERPANEL_VERSION=&quot;2.6.3&quot;  # Check latest version\nwget &quot;https://github.com/pufferpanel/pufferpanel/releases/download/v${PUFFERPANEL_VERSION}/pufferpanel_${PUFFERPANEL_VERSION}_linux_amd64.tar.gz&quot;\n\n# Extract files\ntar -xzf pufferpanel_*.tar.gz\n\n# Install binary\nsudo mv pufferpanel /usr/local/bin/\nsudo chmod +x /usr/local/bin/pufferpanel\n\n# Create user and directories\nsudo useradd -r -s /bin/false -d /var/lib/pufferpanel pufferpanel\nsudo mkdir -p /etc/pufferpanel /var/lib/pufferpanel/servers /var/log/pufferpanel\nsudo chown -R pufferpanel:pufferpanel /etc/pufferpanel /var/lib/pufferpanel /var/log/pufferpanel\n\n# Generate config\nsudo -u pufferpanel pufferpanel config init</code></pre>\n      </div>\n    </div>\n<h2 id=\"4-configuration\" class=\"mobile-header\">4. Configuration</h2>\n<h3 id=\"configuration-file\" class=\"mobile-header\">Configuration File</h3>\n<p class=\"mobile-paragraph\">Edit <code class=\"mobile-inline-code\">/etc/pufferpanel/config.json</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">{\n  &quot;logs&quot;: {\n    &quot;level&quot;: &quot;info&quot;,\n    &quot;path&quot;: &quot;/var/log/pufferpanel&quot;,\n    &quot;deleteAfter&quot;: 7\n  },\n  &quot;panel&quot;: {\n    &quot;database&quot;: {\n      &quot;dialect&quot;: &quot;mysql&quot;,\n      &quot;host&quot;: &quot;localhost&quot;,\n      &quot;port&quot;: 3306,\n      &quot;name&quot;: &quot;pufferpanel&quot;,\n      &quot;username&quot;: &quot;pufferpanel&quot;,\n      &quot;password&quot;: &quot;your_secure_password&quot;\n    },\n    &quot;web&quot;: {\n      &quot;host&quot;: &quot;0.0.0.0:8080&quot;,\n      &quot;ssl&quot;: {\n        &quot;enabled&quot;: false,\n        &quot;cert&quot;: &quot;/path/to/cert.pem&quot;,\n        &quot;key&quot;: &quot;/path/to/key.pem&quot;\n      }\n    },\n    &quot;sftp&quot;: {\n      &quot;host&quot;: &quot;0.0.0.0:5657&quot;,\n      &quot;generate&quot;: true,\n      &quot;key&quot;: &quot;/etc/pufferpanel/sftp_host_key&quot;\n    },\n    &quot;email&quot;: {\n      &quot;enabled&quot;: false,\n      &quot;from&quot;: &quot;noreply@example.com&quot;,\n      &quot;host&quot;: &quot;smtp.example.com&quot;,\n      &quot;port&quot;: 587,\n      &quot;username&quot;: &quot;smtp_user&quot;,\n      &quot;password&quot;: &quot;smtp_pass&quot;\n    },\n    &quot;settings&quot;: {\n      &quot;defaultTheme&quot;: &quot;PufferPanel&quot;,\n      &quot;registrationEnabled&quot;: false,\n      &quot;requireEmailVerification&quot;: false\n    },\n    &quot;token&quot;: {\n      &quot;private&quot;: &quot;your_random_secret_key_here&quot;\n    }\n  },\n  &quot;daemon&quot;: {\n    &quot;data&quot;: {\n      &quot;root&quot;: &quot;/var/lib/pufferpanel/servers&quot;\n    },\n    &quot;sftp&quot;: {\n      &quot;enabled&quot;: true\n    },\n    &quot;docker&quot;: {\n      &quot;enabled&quot;: true,\n      &quot;socket&quot;: &quot;/var/run/docker.sock&quot;\n    }\n  }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"database-configuration\" class=\"mobile-header\">Database Configuration</h3>\n<p class=\"mobile-paragraph\">#### MariaDB/MySQL</p>\n<div class=\"mobile-code-block\" data-language=\"sql\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">sql</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-sql\">-- Create database and user\nCREATE DATABASE pufferpanel CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\nCREATE USER &#039;pufferpanel&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON pufferpanel.* TO &#039;pufferpanel&#039;@&#039;localhost&#039;;\nFLUSH PRIVILEGES;</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">#### PostgreSQL</p>\n<div class=\"mobile-code-block\" data-language=\"sql\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">sql</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-sql\">-- Create database and user\nCREATE DATABASE pufferpanel;\nCREATE USER pufferpanel WITH ENCRYPTED PASSWORD &#039;secure_password&#039;;\nGRANT ALL PRIVILEGES ON DATABASE pufferpanel TO pufferpanel;</code></pre>\n      </div>\n    </div>\n<h3 id=\"environment-variables\" class=\"mobile-header\">Environment Variables</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Database configuration\nexport PUFFER_PANEL_DATABASE_DIALECT=&quot;mysql&quot;\nexport PUFFER_PANEL_DATABASE_HOST=&quot;localhost&quot;\nexport PUFFER_PANEL_DATABASE_NAME=&quot;pufferpanel&quot;\nexport PUFFER_PANEL_DATABASE_USERNAME=&quot;pufferpanel&quot;\nexport PUFFER_PANEL_DATABASE_PASSWORD=&quot;secure_password&quot;\n\n# Web configuration\nexport PUFFER_WEB_HOST=&quot;0.0.0.0:8080&quot;\nexport PUFFER_PANEL_REGISTRATION_ENABLED=&quot;false&quot;\n\n# Token secret\nexport PUFFER_PANEL_TOKEN_PRIVATE=&quot;your_secret_key_here&quot;</code></pre>\n      </div>\n    </div>\n<h2 id=\"5-service-management\" class=\"mobile-header\">5. Service Management</h2>\n<h3 id=\"systemd-service\" class=\"mobile-header\">systemd Service</h3>\n<p class=\"mobile-paragraph\">Create <code class=\"mobile-inline-code\">/etc/systemd/system/pufferpanel.service</code>:</p>\n<div class=\"mobile-code-block\" data-language=\"ini\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">ini</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-ini\">[Unit]\nDescription=PufferPanel Game Server Management Panel\nAfter=network.target mariadb.service\n\n[Service]\nType=simple\nUser=pufferpanel\nGroup=pufferpanel\nWorkingDirectory=/var/lib/pufferpanel\nExecStart=/usr/local/bin/pufferpanel run\nRestart=always\nRestartSec=5\nStandardOutput=journal\nStandardError=journal\n\n# Security hardening\nNoNewPrivileges=true\nPrivateTmp=true\nProtectSystem=strict\nProtectHome=true\nReadWritePaths=/var/lib/pufferpanel /var/log/pufferpanel /etc/pufferpanel\n\n[Install]\nWantedBy=multi-user.target</code></pre>\n      </div>\n    </div>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable and start service\nsudo systemctl daemon-reload\nsudo systemctl enable --now pufferpanel\nsudo systemctl status pufferpanel\n\n# View logs\nsudo journalctl -u pufferpanel -f</code></pre>\n      </div>\n    </div>\n<h3 id=\"user-management\" class=\"mobile-header\">User Management</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Add admin user\nsudo pufferpanel user add --email admin@example.com --name admin --admin\n\n# Add regular user\nsudo pufferpanel user add --email user@example.com --name user\n\n# Change user password\nsudo pufferpanel user password --email user@example.com\n\n# List users\nsudo pufferpanel user list\n\n# Delete user\nsudo pufferpanel user delete --email user@example.com</code></pre>\n      </div>\n    </div>\n<h3 id=\"template-management\" class=\"mobile-header\">Template Management</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Import official templates\nsudo pufferpanel template import\n\n# List available templates\nsudo pufferpanel template list\n\n# Create custom template\ncat &gt; minecraft.json &lt;&lt; &#039;EOF&#039;\n{\n  &quot;type&quot;: &quot;minecraft&quot;,\n  &quot;display&quot;: &quot;Minecraft Server&quot;,\n  &quot;install&quot;: {\n    &quot;commands&quot;: [\n      {\n        &quot;type&quot;: &quot;download&quot;,\n        &quot;files&quot;: &quot;https://launcher.mojang.com/v1/objects/server.jar&quot;\n      }\n    ]\n  },\n  &quot;run&quot;: {\n    &quot;stop&quot;: &quot;stop&quot;,\n    &quot;command&quot;: &quot;java -Xmx${memory}M -jar server.jar nogui&quot;,\n    &quot;workingDirectory&quot;: &quot;/server&quot;\n  }\n}\nEOF\n\nsudo pufferpanel template import minecraft.json</code></pre>\n      </div>\n    </div>\n<h2 id=\"6-troubleshooting\" class=\"mobile-header\">6. Troubleshooting</h2>\n<h3 id=\"common-issues\" class=\"mobile-header\">Common Issues</h3>\n<p class=\"mobile-paragraph\">1. <strong>Panel not accessible</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check if service is running\nsudo systemctl status pufferpanel\n\n# Check ports\nsudo netstat -tlnp | grep -E &quot;8080|5657&quot;\n\n# Check firewall\nsudo firewall-cmd --list-ports\nsudo ufw status\n\n# Test local connection\ncurl http://localhost:8080</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">2. <strong>Database connection errors</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Test database connection\nmysql -u pufferpanel -p -h localhost pufferpanel\n\n# Check database service\nsudo systemctl status mariadb\n\n# Verify credentials in config\nsudo cat /etc/pufferpanel/config.json | jq .panel.database</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">3. <strong>Permission issues</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Fix file permissions\nsudo chown -R pufferpanel:pufferpanel /var/lib/pufferpanel\nsudo chown -R pufferpanel:pufferpanel /etc/pufferpanel\nsudo chmod -R 755 /var/lib/pufferpanel/servers\n\n# Check Docker permissions\nsudo usermod -aG docker pufferpanel</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">4. <strong>Server creation fails</strong>:</p>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Check Docker status\nsudo systemctl status docker\n\n# Verify Docker socket permissions\nls -la /var/run/docker.sock\n\n# Check available disk space\ndf -h /var/lib/pufferpanel/servers\n\n# Review daemon logs\nsudo journalctl -u pufferpanel --since &quot;10 minutes ago&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"debug-mode\" class=\"mobile-header\">Debug Mode</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Enable debug logging\nsudo pufferpanel config set logs.level debug\n\n# Run in foreground with debug\nsudo -u pufferpanel pufferpanel run --debug\n\n# Check detailed logs\ntail -f /var/log/pufferpanel/pufferpanel.log</code></pre>\n      </div>\n    </div>\n<h2 id=\"7-security-considerations\" class=\"mobile-header\">7. Security Considerations</h2>\n<h3 id=\"web-interface-security\" class=\"mobile-header\">Web Interface Security</h3>\n<div class=\"mobile-code-block\" data-language=\"nginx\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">nginx</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-nginx\"># Nginx reverse proxy with SSL\nserver {\n    listen 443 ssl http2;\n    server_name panel.example.com;\n    \n    ssl_certificate /etc/ssl/certs/panel.crt;\n    ssl_certificate_key /etc/ssl/private/panel.key;\n    \n    location / {\n        proxy_pass http://127.0.0.1:8080;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection &quot;upgrade&quot;;\n    }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"firewall-configuration\" class=\"mobile-header\">Firewall Configuration</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># firewalld (RHEL/CentOS)\nsudo firewall-cmd --permanent --add-port=8080/tcp\nsudo firewall-cmd --permanent --add-port=5657/tcp\nsudo firewall-cmd --permanent --add-port=25565/tcp  # Minecraft\nsudo firewall-cmd --reload\n\n# UFW (Ubuntu/Debian)\nsudo ufw allow 8080/tcp\nsudo ufw allow 5657/tcp\nsudo ufw allow 25565/tcp\nsudo ufw enable\n\n# iptables\nsudo iptables -A INPUT -p tcp --dport 8080 -j ACCEPT\nsudo iptables -A INPUT -p tcp --dport 5657 -j ACCEPT</code></pre>\n      </div>\n    </div>\n<h3 id=\"user-permissions\" class=\"mobile-header\">User Permissions</h3>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">// Role-based permissions in PufferPanel\n{\n  &quot;roles&quot;: {\n    &quot;admin&quot;: {\n      &quot;permissions&quot;: [&quot;*&quot;]\n    },\n    &quot;moderator&quot;: {\n      &quot;permissions&quot;: [\n        &quot;server.view&quot;,\n        &quot;server.console&quot;,\n        &quot;server.start&quot;,\n        &quot;server.stop&quot;,\n        &quot;server.files.view&quot;\n      ]\n    },\n    &quot;user&quot;: {\n      &quot;permissions&quot;: [\n        &quot;server.view&quot;,\n        &quot;server.console&quot;,\n        &quot;server.files.view&quot;\n      ]\n    }\n  }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"docker-security\" class=\"mobile-header\">Docker Security</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Use Docker rootless mode\ndockerd-rootless-setuptool.sh install\n\n# Limit container resources\ndocker run -d \\\n  --name minecraft \\\n  --memory=&quot;2g&quot; \\\n  --cpus=&quot;2.0&quot; \\\n  --security-opt=&quot;no-new-privileges:true&quot; \\\n  --read-only \\\n  pufferpanel/minecraft</code></pre>\n      </div>\n    </div>\n<h2 id=\"8-performance-tuning\" class=\"mobile-header\">8. Performance Tuning</h2>\n<h3 id=\"panel-optimization\" class=\"mobile-header\">Panel Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">// config.json optimizations\n{\n  &quot;panel&quot;: {\n    &quot;database&quot;: {\n      &quot;maxConnections&quot;: 100,\n      &quot;connectionTimeout&quot;: 30,\n      &quot;idleTimeout&quot;: 600\n    },\n    &quot;cache&quot;: {\n      &quot;enabled&quot;: true,\n      &quot;ttl&quot;: 3600\n    }\n  }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"server-resource-limits\" class=\"mobile-header\">Server Resource Limits</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Set resource limits per server\npufferpanel server config minecraft --memory 2048 --cpu 200\n\n# Configure swap limit\necho &quot;vm.swappiness=10&quot; | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p</code></pre>\n      </div>\n    </div>\n<h3 id=\"database-optimization\" class=\"mobile-header\">Database Optimization</h3>\n<div class=\"mobile-code-block\" data-language=\"sql\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">sql</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-sql\">-- MariaDB optimizations\nSET GLOBAL innodb_buffer_pool_size = 256M;\nSET GLOBAL max_connections = 200;\nSET GLOBAL query_cache_size = 32M;\nSET GLOBAL query_cache_type = 1;\n\n-- Add indexes\nALTER TABLE servers ADD INDEX idx_user_id (user_id);\nALTER TABLE server_permissions ADD INDEX idx_server_user (server_id, user_id);</code></pre>\n      </div>\n    </div>\n<h3 id=\"storage-performance\" class=\"mobile-header\">Storage Performance</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Use separate disk for game servers\nsudo mkdir -p /mnt/games\nsudo mount /dev/sdb1 /mnt/games\nsudo ln -s /mnt/games /var/lib/pufferpanel/servers\n\n# Enable compression for backups\npufferpanel config set backup.compression gzip</code></pre>\n      </div>\n    </div>\n<h2 id=\"9-backup-and-restore\" class=\"mobile-header\">9. Backup and Restore</h2>\n<h3 id=\"panel-backup\" class=\"mobile-header\">Panel Backup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# backup-pufferpanel.sh\n\nBACKUP_DIR=&quot;/var/backups/pufferpanel&quot;\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p $BACKUP_DIR\n\n# Stop PufferPanel\nsudo systemctl stop pufferpanel\n\n# Backup database\nmysqldump -u pufferpanel -p pufferpanel | gzip &gt; $BACKUP_DIR/database_$DATE.sql.gz\n\n# Backup configuration\ntar -czf $BACKUP_DIR/config_$DATE.tar.gz /etc/pufferpanel\n\n# Backup templates\ntar -czf $BACKUP_DIR/templates_$DATE.tar.gz /var/lib/pufferpanel/templates\n\n# Backup server data (optional, can be large)\ntar -czf $BACKUP_DIR/servers_$DATE.tar.gz /var/lib/pufferpanel/servers\n\n# Start PufferPanel\nsudo systemctl start pufferpanel\n\necho &quot;Backup completed: $BACKUP_DIR&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"server-backup\" class=\"mobile-header\">Server Backup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Backup individual server\npufferpanel server backup minecraft --dest /var/backups/servers/\n\n# Automated server backups\ncat &gt; /etc/cron.d/pufferpanel-backup &lt;&lt; &#039;EOF&#039;\n0 2 * * * pufferpanel /usr/local/bin/pufferpanel server backup --all --dest /var/backups/servers/\nEOF</code></pre>\n      </div>\n    </div>\n<h3 id=\"restore-procedures\" class=\"mobile-header\">Restore Procedures</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Restore database\nsudo systemctl stop pufferpanel\ngunzip -c database_backup.sql.gz | mysql -u pufferpanel -p pufferpanel\n\n# Restore configuration\nsudo tar -xzf config_backup.tar.gz -C /\n\n# Restore templates\nsudo tar -xzf templates_backup.tar.gz -C /\n\n# Restore servers\nsudo tar -xzf servers_backup.tar.gz -C /\n\n# Fix permissions\nsudo chown -R pufferpanel:pufferpanel /var/lib/pufferpanel /etc/pufferpanel\n\n# Start PufferPanel\nsudo systemctl start pufferpanel</code></pre>\n      </div>\n    </div>\n<h2 id=\"10-system-requirements\" class=\"mobile-header\">10. System Requirements</h2>\n<h3 id=\"minimum-requirements\" class=\"mobile-header\">Minimum Requirements</h3>\n<li class=\"mobile-list-item\"><strong>CPU</strong>: 2 cores</li>\n<li class=\"mobile-list-item\"><strong>RAM</strong>: 2GB (plus game server requirements)</li>\n<li class=\"mobile-list-item\"><strong>Storage</strong>: 20GB</li>\n<li class=\"mobile-list-item\"><strong>Network</strong>: 10 Mbps</li>\n<h3 id=\"recommended-requirements\" class=\"mobile-header\">Recommended Requirements</h3>\n<li class=\"mobile-list-item\"><strong>CPU</strong>: 4+ cores</li>\n<li class=\"mobile-list-item\"><strong>RAM</strong>: 8GB+</li>\n<li class=\"mobile-list-item\"><strong>Storage</strong>: 100GB+ SSD</li>\n<li class=\"mobile-list-item\"><strong>Network</strong>: 100 Mbps+</li>\n<h3 id=\"per-game-server-requirements\" class=\"mobile-header\">Per Game Server Requirements</h3>\n<p class=\"mobile-paragraph\">| Game | RAM | CPU | Storage |</p>\n<p class=\"mobile-paragraph\">|------|-----|-----|---------|</p>\n<p class=\"mobile-paragraph\">| Minecraft | 1-4GB | 1-2 cores | 10GB |</p>\n<p class=\"mobile-paragraph\">| CS:GO | 2GB | 2 cores | 30GB |</p>\n<p class=\"mobile-paragraph\">| Terraria | 1GB | 1 core | 2GB |</p>\n<p class=\"mobile-paragraph\">| Rust | 4-8GB | 3-4 cores | 25GB |</p>\n<p class=\"mobile-paragraph\">| ARK | 8-16GB | 4 cores | 60GB |</p>\n<h2 id=\"11-support\" class=\"mobile-header\">11. Support</h2>\n<h3 id=\"official-resources\" class=\"mobile-header\">Official Resources</h3>\n<li class=\"mobile-list-item\"><strong>Website</strong>: https://pufferpanel.com</li>\n<li class=\"mobile-list-item\"><strong>GitHub</strong>: https://github.com/pufferpanel/pufferpanel</li>\n<li class=\"mobile-list-item\"><strong>Documentation</strong>: https://docs.pufferpanel.com</li>\n<li class=\"mobile-list-item\"><strong>Discord</strong>: https://discord.gg/pufferpanel</li>\n<h3 id=\"community-support\" class=\"mobile-header\">Community Support</h3>\n<li class=\"mobile-list-item\"><strong>Discord Server</strong>: Active community support</li>\n<li class=\"mobile-list-item\"><strong>GitHub Issues</strong>: https://github.com/pufferpanel/pufferpanel/issues</li>\n<li class=\"mobile-list-item\"><strong>Reddit</strong>: r/PufferPanel</li>\n<li class=\"mobile-list-item\"><strong>Forum</strong>: https://community.pufferpanel.com</li>\n<h2 id=\"12-contributing\" class=\"mobile-header\">12. Contributing</h2>\n<h3 id=\"how-to-contribute\" class=\"mobile-header\">How to Contribute</h3>\n<p class=\"mobile-paragraph\">1. Fork the repository on GitHub</p>\n<p class=\"mobile-paragraph\">2. Create a feature branch</p>\n<p class=\"mobile-paragraph\">3. Submit pull request</p>\n<p class=\"mobile-paragraph\">4. Follow Go coding standards</p>\n<p class=\"mobile-paragraph\">5. Include tests and documentation</p>\n<h3 id=\"development-setup\" class=\"mobile-header\">Development Setup</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Clone repository\ngit clone https://github.com/pufferpanel/pufferpanel.git\ncd pufferpanel\n\n# Install Go\nwget https://go.dev/dl/go1.21.linux-amd64.tar.gz\nsudo tar -C /usr/local -xzf go1.21.linux-amd64.tar.gz\nexport PATH=$PATH:/usr/local/go/bin\n\n# Install dependencies\ngo mod download\n\n# Build PufferPanel\ngo build -o pufferpanel github.com/pufferpanel/pufferpanel/v2/cmd/pufferpanel\n\n# Run tests\ngo test ./...</code></pre>\n      </div>\n    </div>\n<h2 id=\"13-license\" class=\"mobile-header\">13. License</h2>\n<p class=\"mobile-paragraph\">PufferPanel is licensed under the Apache License 2.0.</p>\n<p class=\"mobile-paragraph\">Key points:</p>\n<li class=\"mobile-list-item\">Free to use, modify, and distribute</li>\n<li class=\"mobile-list-item\">Commercial use allowed</li>\n<li class=\"mobile-list-item\">Patent grant included</li>\n<li class=\"mobile-list-item\">Must include license notice</li>\n<h2 id=\"14-acknowledgments\" class=\"mobile-header\">14. Acknowledgments</h2>\n<h3 id=\"credits\" class=\"mobile-header\">Credits</h3>\n<li class=\"mobile-list-item\"><strong>PufferPanel Team</strong>: Core development team</li>\n<li class=\"mobile-list-item\"><strong>Community Contributors</strong>: Template creators and testers</li>\n<li class=\"mobile-list-item\"><strong>Game Developers</strong>: For server software</li>\n<li class=\"mobile-list-item\"><strong>Docker</strong>: Container technology</li>\n<h2 id=\"15-version-history\" class=\"mobile-header\">15. Version History</h2>\n<h3 id=\"recent-releases\" class=\"mobile-header\">Recent Releases</h3>\n<li class=\"mobile-list-item\"><strong>v2.6.x</strong>: Current stable with improved Docker support</li>\n<li class=\"mobile-list-item\"><strong>v2.5.x</strong>: Enhanced template system</li>\n<li class=\"mobile-list-item\"><strong>v2.4.x</strong>: Improved security features</li>\n<h3 id=\"major-features-by-version\" class=\"mobile-header\">Major Features by Version</h3>\n<li class=\"mobile-list-item\"><strong>v2.6</strong>: Better Docker integration, improved UI</li>\n<li class=\"mobile-list-item\"><strong>v2.5</strong>: Template marketplace, OAuth support</li>\n<li class=\"mobile-list-item\"><strong>v2.4</strong>: Multi-node support</li>\n<h2 id=\"16-appendices\" class=\"mobile-header\">16. Appendices</h2>\n<h3 id=\"a-game-server-templates\" class=\"mobile-header\">A. Game Server Templates</h3>\n<p class=\"mobile-paragraph\">#### Minecraft Template</p>\n<div class=\"mobile-code-block\" data-language=\"json\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">json</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-json\">{\n  &quot;name&quot;: &quot;Minecraft Java&quot;,\n  &quot;type&quot;: &quot;minecraft-java&quot;,\n  &quot;install&quot;: {\n    &quot;commands&quot;: [\n      {\n        &quot;type&quot;: &quot;download&quot;,\n        &quot;files&quot;: &quot;https://launcher.mojang.com/v1/objects/server.jar&quot;\n      },\n      {\n        &quot;type&quot;: &quot;writefile&quot;,\n        &quot;target&quot;: &quot;eula.txt&quot;,\n        &quot;text&quot;: &quot;eula=true&quot;\n      }\n    ]\n  },\n  &quot;run&quot;: {\n    &quot;stop&quot;: &quot;stop&quot;,\n    &quot;pre&quot;: [],\n    &quot;post&quot;: [],\n    &quot;arguments&quot;: [\n      &quot;-Xmx${memory}M&quot;,\n      &quot;-jar&quot;,\n      &quot;server.jar&quot;,\n      &quot;nogui&quot;\n    ],\n    &quot;program&quot;: &quot;java&quot;\n  },\n  &quot;environment&quot;: {\n    &quot;type&quot;: &quot;standard&quot;\n  },\n  &quot;data&quot;: {\n    &quot;memory&quot;: {\n      &quot;value&quot;: &quot;1024&quot;,\n      &quot;required&quot;: true,\n      &quot;desc&quot;: &quot;Memory in MB&quot;,\n      &quot;display&quot;: &quot;Memory (MB)&quot;,\n      &quot;type&quot;: &quot;integer&quot;\n    }\n  }\n}</code></pre>\n      </div>\n    </div>\n<h3 id=\"b-api-usage-examples\" class=\"mobile-header\">B. API Usage Examples</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\"># Authenticate\nTOKEN=$(curl -X POST http://localhost:8080/api/auth/login \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &#039;{&quot;email&quot;:&quot;admin@example.com&quot;,&quot;password&quot;:&quot;password&quot;}&#039; | jq -r .token)\n\n# List servers\ncurl -H &quot;Authorization: Bearer $TOKEN&quot; \\\n  http://localhost:8080/api/servers\n\n# Create server\ncurl -X POST http://localhost:8080/api/servers \\\n  -H &quot;Authorization: Bearer $TOKEN&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &#039;{\n    &quot;name&quot;: &quot;My Minecraft Server&quot;,\n    &quot;type&quot;: &quot;minecraft-java&quot;,\n    &quot;users&quot;: [&quot;admin@example.com&quot;],\n    &quot;node&quot;: &quot;local&quot;,\n    &quot;data&quot;: {\n      &quot;memory&quot;: &quot;2048&quot;\n    }\n  }&#039;\n\n# Server control\ncurl -X POST http://localhost:8080/api/servers/{id}/start \\\n  -H &quot;Authorization: Bearer $TOKEN&quot;</code></pre>\n      </div>\n    </div>\n<h3 id=\"c-docker-compose-examples\" class=\"mobile-header\">C. Docker Compose Examples</h3>\n<div class=\"mobile-code-block\" data-language=\"yaml\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">yaml</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-yaml\"># Multi-server setup\nversion: &#039;3.8&#039;\n\nservices:\n  panel:\n    image: pufferpanel/pufferpanel:latest\n    ports:\n      - &quot;8080:8080&quot;\n    volumes:\n      - ./data:/var/lib/pufferpanel\n      - /var/run/docker.sock:/var/run/docker.sock\n    environment:\n      PUFFER_PANEL_DATABASE_DIALECT: mysql\n      PUFFER_PANEL_DATABASE_HOST: db\n      PUFFER_PANEL_DATABASE_NAME: pufferpanel\n      PUFFER_PANEL_DATABASE_USERNAME: pufferpanel\n      PUFFER_PANEL_DATABASE_PASSWORD: secure_password\n    depends_on:\n      - db\n\n  db:\n    image: mariadb:latest\n    environment:\n      MYSQL_ROOT_PASSWORD: root_password\n      MYSQL_DATABASE: pufferpanel\n      MYSQL_USER: pufferpanel\n      MYSQL_PASSWORD: secure_password\n    volumes:\n      - db_data:/var/lib/mysql\n\nvolumes:\n  db_data:</code></pre>\n      </div>\n    </div>\n<h3 id=\"d-security-hardening-script\" class=\"mobile-header\">D. Security Hardening Script</h3>\n<div class=\"mobile-code-block\" data-language=\"bash\">\n      <div class=\"mobile-code-header\">\n        <span class=\"mobile-code-language\">bash</span>\n        <button class=\"mobile-copy-button\" onclick=\"copyCode(this)\" title=\"Copy code\">\n          <span class=\"copy-icon\">ðŸ“‹</span>\n          <span class=\"copy-text\">Copy</span>\n        </button>\n      </div>\n      <div class=\"mobile-code-content\">\n        <pre><code class=\"language-bash\">#!/bin/bash\n# harden-pufferpanel.sh\n\n# Disable root login\npufferpanel config set security.disableRoot true\n\n# Enable 2FA requirement\npufferpanel config set security.require2FA true\n\n# Set session timeout\npufferpanel config set security.sessionTimeout 3600\n\n# Enable brute force protection\npufferpanel config set security.maxLoginAttempts 5\npufferpanel config set security.lockoutDuration 900\n\n# Restrict file uploads\npufferpanel config set security.maxUploadSize 104857600\npufferpanel config set security.allowedExtensions &quot;.txt,.properties,.yml,.json&quot;\n\n# Enable audit logging\npufferpanel config set logs.auditEnabled true\npufferpanel config set logs.auditFile &quot;/var/log/pufferpanel/audit.log&quot;\n\necho &quot;Security hardening complete&quot;</code></pre>\n      </div>\n    </div>\n<p class=\"mobile-paragraph\">---</p>\n<p class=\"mobile-paragraph\">For more information and updates, visit https://github.com/howtomgr/pufferpanel</p>","readTime":"13 min","wordCount":2485,"tableOfContents":[{"level":2,"text":"1. Prerequisites","id":"1-prerequisites"},{"level":3,"text":"Hardware Requirements","id":"hardware-requirements"},{"level":3,"text":"Software Requirements","id":"software-requirements"},{"level":3,"text":"Network Requirements","id":"network-requirements"},{"level":2,"text":"2. Supported Operating Systems","id":"2-supported-operating-systems"},{"level":2,"text":"3. Installation","id":"3-installation"},{"level":3,"text":"Method 1: Official Installer (Recommended)","id":"method-1-official-installer-recommended"},{"level":3,"text":"Method 2: Docker Installation","id":"method-2-docker-installation"},{"level":3,"text":"Method 3: Manual Installation","id":"method-3-manual-installation"},{"level":2,"text":"4. Configuration","id":"4-configuration"},{"level":3,"text":"Configuration File","id":"configuration-file"},{"level":3,"text":"Database Configuration","id":"database-configuration"},{"level":3,"text":"Environment Variables","id":"environment-variables"},{"level":2,"text":"5. Service Management","id":"5-service-management"},{"level":3,"text":"systemd Service","id":"systemd-service"},{"level":3,"text":"User Management","id":"user-management"},{"level":3,"text":"Template Management","id":"template-management"},{"level":2,"text":"6. Troubleshooting","id":"6-troubleshooting"},{"level":3,"text":"Common Issues","id":"common-issues"},{"level":3,"text":"Debug Mode","id":"debug-mode"},{"level":2,"text":"7. Security Considerations","id":"7-security-considerations"},{"level":3,"text":"Web Interface Security","id":"web-interface-security"},{"level":3,"text":"Firewall Configuration","id":"firewall-configuration"},{"level":3,"text":"User Permissions","id":"user-permissions"},{"level":3,"text":"Docker Security","id":"docker-security"},{"level":2,"text":"8. Performance Tuning","id":"8-performance-tuning"},{"level":3,"text":"Panel Optimization","id":"panel-optimization"},{"level":3,"text":"Server Resource Limits","id":"server-resource-limits"},{"level":3,"text":"Database Optimization","id":"database-optimization"},{"level":3,"text":"Storage Performance","id":"storage-performance"},{"level":2,"text":"9. Backup and Restore","id":"9-backup-and-restore"},{"level":3,"text":"Panel Backup","id":"panel-backup"},{"level":3,"text":"Server Backup","id":"server-backup"},{"level":3,"text":"Restore Procedures","id":"restore-procedures"},{"level":2,"text":"10. System Requirements","id":"10-system-requirements"},{"level":3,"text":"Minimum Requirements","id":"minimum-requirements"},{"level":3,"text":"Recommended Requirements","id":"recommended-requirements"},{"level":3,"text":"Per Game Server Requirements","id":"per-game-server-requirements"},{"level":2,"text":"11. Support","id":"11-support"},{"level":3,"text":"Official Resources","id":"official-resources"},{"level":3,"text":"Community Support","id":"community-support"},{"level":2,"text":"12. Contributing","id":"12-contributing"},{"level":3,"text":"How to Contribute","id":"how-to-contribute"},{"level":3,"text":"Development Setup","id":"development-setup"},{"level":2,"text":"13. License","id":"13-license"},{"level":2,"text":"14. Acknowledgments","id":"14-acknowledgments"},{"level":3,"text":"Credits","id":"credits"},{"level":2,"text":"15. Version History","id":"15-version-history"},{"level":3,"text":"Recent Releases","id":"recent-releases"},{"level":3,"text":"Major Features by Version","id":"major-features-by-version"},{"level":2,"text":"16. Appendices","id":"16-appendices"},{"level":3,"text":"A. Game Server Templates","id":"a-game-server-templates"},{"level":3,"text":"B. API Usage Examples","id":"b-api-usage-examples"},{"level":3,"text":"C. Docker Compose Examples","id":"c-docker-compose-examples"},{"level":3,"text":"D. Security Hardening Script","id":"d-security-hardening-script"}],"lastBuilt":"2025-10-19T06:15:42.197Z","metadataVersion":"2.0"}]},"__N_SSG":true}